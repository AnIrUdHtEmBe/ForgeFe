import {
  COLOR_MODE_ATTRIBUTE as COLOR_MODE_ATTRIBUTE2,
  CONTRAST_MODE_ATTRIBUTE as CONTRAST_MODE_ATTRIBUTE2,
  CUSTOM_THEME_ATTRIBUTE as CUSTOM_THEME_ATTRIBUTE2,
  THEME_DATA_ATTRIBUTE as THEME_DATA_ATTRIBUTE2,
  findMissingCustomStyleElements as findMissingCustomStyleElements2,
  hash as hash2,
  isValidBrandHex as isValidBrandHex2,
  themeColorModes as themeColorModes2,
  themeIds as themeIds2,
  themeIdsWithOverrides as themeIdsWithOverrides2,
  themeStateDefaults as themeStateDefaults2,
  theme_config_default as theme_config_default2
} from "./chunk-UPTKHOS3.js";
import {
  COLOR_MODE_ATTRIBUTE,
  CONTRAST_MODE_ATTRIBUTE,
  CUSTOM_THEME_ATTRIBUTE,
  THEME_DATA_ATTRIBUTE,
  findMissingCustomStyleElements,
  hash,
  isValidBrandHex,
  themeColorModes,
  themeIds,
  themeIdsWithOverrides,
  themeStateDefaults,
  theme_config_default
} from "./chunk-7ZSSANTH.js";
import {
  _asyncToGenerator,
  _classCallCheck,
  _createClass,
  _defineProperty,
  _get,
  _getPrototypeOf,
  _inherits,
  _objectWithoutProperties,
  _possibleConstructorReturn,
  _slicedToArray,
  _toConsumableArray,
  _typeof,
  fg,
  init_asyncToGenerator,
  init_classCallCheck,
  init_createClass,
  init_defineProperty,
  init_esm,
  init_get,
  init_getPrototypeOf,
  init_inherits,
  init_objectWithoutProperties,
  init_possibleConstructorReturn,
  init_slicedToArray,
  init_typeof,
  require_regenerator
} from "./chunk-QEMEIXLH.js";
import {
  _extends,
  createPopper,
  init_extends,
  require_prop_types
} from "./chunk-TRCP7G2A.js";
import "./chunk-3E4BK3SI.js";
import {
  require_react_dom
} from "./chunk-TKS5FRHW.js";
import {
  require_react
} from "./chunk-HUL2CLQT.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/bind-event-listener/dist/bind.js
var require_bind = __commonJS({
  "node_modules/bind-event-listener/dist/bind.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bind = void 0;
    function bind9(target, _a) {
      var type = _a.type, listener = _a.listener, options = _a.options;
      target.addEventListener(type, listener, options);
      return function unbind() {
        target.removeEventListener(type, listener, options);
      };
    }
    exports.bind = bind9;
  }
});

// node_modules/bind-event-listener/dist/bind-all.js
var require_bind_all = __commonJS({
  "node_modules/bind-event-listener/dist/bind-all.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bindAll = void 0;
    var bind_1 = require_bind();
    function toOptions(value) {
      if (typeof value === "undefined") {
        return void 0;
      }
      if (typeof value === "boolean") {
        return {
          capture: value
        };
      }
      return value;
    }
    function getBinding(original, sharedOptions) {
      if (sharedOptions == null) {
        return original;
      }
      var binding = __assign(__assign({}, original), { options: __assign(__assign({}, toOptions(sharedOptions)), toOptions(original.options)) });
      return binding;
    }
    function bindAll5(target, bindings, sharedOptions) {
      var unbinds = bindings.map(function(original) {
        var binding = getBinding(original, sharedOptions);
        return (0, bind_1.bind)(target, binding);
      });
      return function unbindAll() {
        unbinds.forEach(function(unbind) {
          return unbind();
        });
      };
    }
    exports.bindAll = bindAll5;
  }
});

// node_modules/bind-event-listener/dist/index.js
var require_dist = __commonJS({
  "node_modules/bind-event-listener/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bindAll = exports.bind = void 0;
    var bind_1 = require_bind();
    Object.defineProperty(exports, "bind", { enumerable: true, get: function() {
      return bind_1.bind;
    } });
    var bind_all_1 = require_bind_all();
    Object.defineProperty(exports, "bindAll", { enumerable: true, get: function() {
      return bind_all_1.bindAll;
    } });
  }
});

// node_modules/@compiled/react/dist/esm/runtime/dev-warnings.js
var init_dev_warnings = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/dev-warnings.js"() {
  }
});

// node_modules/@compiled/react/dist/esm/runtime/is-server-environment.js
var isJsDomEnvironment, isServerEnvironment;
var init_is_server_environment = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/is-server-environment.js"() {
    isJsDomEnvironment = () => window.name === "nodejs" || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes("Node.js")) || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes("jsdom"));
    isServerEnvironment = () => {
      if (typeof window === "undefined" || typeof process !== "undefined" && process.versions != null && process.versions.node != null) {
        return true;
      }
      if (isJsDomEnvironment()) {
        return true;
      }
      return false;
    };
  }
});

// node_modules/@compiled/react/dist/esm/runtime/cache.js
var init_cache = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/cache.js"() {
  }
});

// node_modules/@compiled/react/dist/esm/runtime/shorthand.js
var init_shorthand = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/shorthand.js"() {
  }
});

// node_modules/@compiled/react/dist/esm/runtime/sheet.js
var init_sheet = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/sheet.js"() {
    init_cache();
    init_shorthand();
  }
});

// node_modules/@compiled/react/dist/esm/runtime/style-cache.js
var React, import_react, Cache;
var init_style_cache = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/style-cache.js"() {
    React = __toESM(require_react());
    import_react = __toESM(require_react());
    init_cache();
    init_is_server_environment();
    Cache = isServerEnvironment() ? (0, import_react.createContext)(null) : {};
    if (!isServerEnvironment() && typeof document !== "undefined") {
      const ssrStyles = document.querySelectorAll("style[data-cmpld]");
      for (let i = 0; i < ssrStyles.length; i++) {
        document.head.appendChild(ssrStyles[i]);
      }
    }
  }
});

// node_modules/@compiled/react/dist/esm/runtime/style.js
var import_react2;
var init_style = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/style.js"() {
    import_react2 = __toESM(require_react());
    init_dev_warnings();
    init_is_server_environment();
    init_sheet();
    init_style_cache();
  }
});

// node_modules/@compiled/react/dist/esm/runtime/ax.js
function ax(classNames) {
  if (!classNames.length) {
    return;
  }
  if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
  !classNames[0].includes(" ")) {
    return classNames[0];
  }
  const map = {};
  for (const value of classNames) {
    if (!value) {
      continue;
    }
    const list = value.split(" ");
    for (const className of list) {
      const key = className.startsWith("_") ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
      map[key] = className;
    }
  }
  let result = "";
  for (const key in map) {
    result += map[key] + " ";
  }
  if (!result) {
    return;
  }
  return result.trimEnd();
}
var ATOMIC_GROUP_LENGTH;
var init_ax = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/ax.js"() {
    ATOMIC_GROUP_LENGTH = 5;
  }
});

// node_modules/@compiled/react/dist/esm/runtime/ac.js
function ac(classNames) {
  if (classNames.length <= 1 && !classNames[0])
    return void 0;
  const atomicGroups = /* @__PURE__ */ new Map();
  for (let i = 0; i < classNames.length; i++) {
    const cls = classNames[i];
    if (!cls) {
      continue;
    }
    if (typeof cls === "string") {
      const groups = cls.split(" ");
      for (let x = 0; x < groups.length; x++) {
        const atomic = groups[x];
        const isAtomic = atomic.charCodeAt(0) === UNDERSCORE_UNICODE;
        const isCompressed = isAtomic && atomic.charCodeAt(5) === UNDERSCORE_UNICODE;
        const atomicGroupName = isAtomic ? atomic.slice(0, ATOMIC_GROUP_LENGTH2) : atomic;
        atomicGroups.set(atomicGroupName, isCompressed ? atomic.slice(ATOMIC_GROUP_LENGTH2 + 1) : atomic);
      }
    } else {
      for (const [key, value] of cls.values) {
        atomicGroups.set(key, value);
      }
    }
  }
  return new AtomicGroups(atomicGroups);
}
function memoizedAc(classNames) {
  if (classNames.length <= 1 && !classNames[0])
    return void 0;
  let cacheKey = "";
  for (let i = 0; i < classNames.length; i += 1) {
    const current = classNames[i];
    if (!current)
      continue;
    cacheKey += current + " ";
  }
  cacheKey = cacheKey.slice(0, -1);
  if (cache.has(cacheKey))
    return cache.get(cacheKey);
  const result = ac(classNames);
  cache.set(cacheKey, result);
  return result;
}
var UNDERSCORE_UNICODE, ATOMIC_GROUP_LENGTH2, cache, AtomicGroups, ac_default;
var init_ac = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/ac.js"() {
    init_is_server_environment();
    UNDERSCORE_UNICODE = 95;
    ATOMIC_GROUP_LENGTH2 = 5;
    cache = /* @__PURE__ */ new Map();
    AtomicGroups = class {
      constructor(values) {
        this.values = values;
      }
      toString() {
        let str = "";
        for (const [, value] of this.values) {
          str += value + " ";
        }
        return str.slice(0, -1);
      }
    };
    ac_default = isServerEnvironment() ? ac : memoizedAc;
  }
});

// node_modules/@compiled/react/dist/esm/runtime/css-custom-property.js
function cssCustomPropertyValue(value, suffix, prefix2) {
  if (value != void 0) {
    if (suffix) {
      if (prefix2) {
        return prefix2 + value + suffix;
      }
      return value + suffix;
    }
    return value;
  }
  return "var(--c-, )";
}
var init_css_custom_property = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/css-custom-property.js"() {
  }
});

// node_modules/@compiled/react/dist/esm/runtime/index.js
var init_runtime = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/index.js"() {
    init_style();
    init_style_cache();
    init_ax();
    init_ac();
    init_css_custom_property();
  }
});

// node_modules/@compiled/react/dist/esm/runtime.js
var init_runtime2 = __esm({
  "node_modules/@compiled/react/dist/esm/runtime.js"() {
    init_runtime();
  }
});

// node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS({
  "node_modules/react-fast-compare/index.js"(exports, module) {
    var hasElementType = typeof Element !== "undefined";
    var hasMap = typeof Map === "function";
    var hasSet = typeof Set === "function";
    var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
    function equal(a, b) {
      if (a === b) return true;
      if (a && b && typeof a == "object" && typeof b == "object") {
        if (a.constructor !== b.constructor) return false;
        var length, i, keys;
        if (Array.isArray(a)) {
          length = a.length;
          if (length != b.length) return false;
          for (i = length; i-- !== 0; )
            if (!equal(a[i], b[i])) return false;
          return true;
        }
        var it;
        if (hasMap && a instanceof Map && b instanceof Map) {
          if (a.size !== b.size) return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0])) return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!equal(i.value[1], b.get(i.value[0]))) return false;
          return true;
        }
        if (hasSet && a instanceof Set && b instanceof Set) {
          if (a.size !== b.size) return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0])) return false;
          return true;
        }
        if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
          length = a.length;
          if (length != b.length) return false;
          for (i = length; i-- !== 0; )
            if (a[i] !== b[i]) return false;
          return true;
        }
        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === "function" && typeof b.valueOf === "function") return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString && typeof a.toString === "function" && typeof b.toString === "function") return a.toString() === b.toString();
        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length) return false;
        for (i = length; i-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
        if (hasElementType && a instanceof Element) return false;
        for (i = length; i-- !== 0; ) {
          if ((keys[i] === "_owner" || keys[i] === "__v" || keys[i] === "__o") && a.$$typeof) {
            continue;
          }
          if (!equal(a[keys[i]], b[keys[i]])) return false;
        }
        return true;
      }
      return a !== a && b !== b;
    }
    module.exports = function isEqual3(a, b) {
      try {
        return equal(a, b);
      } catch (error) {
        if ((error.message || "").match(/stack|recursion/i)) {
          console.warn("react-fast-compare cannot handle circular refs");
          return false;
        }
        throw error;
      }
    };
  }
});

// node_modules/warning/warning.js
var require_warning = __commonJS({
  "node_modules/warning/warning.js"(exports, module) {
    "use strict";
    var __DEV__ = true;
    var warning2 = function() {
    };
    if (__DEV__) {
      printWarning = function printWarning2(format, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for (var key = 1; key < len; key++) {
          args[key - 1] = arguments[key];
        }
        var argIndex = 0;
        var message = "Warning: " + format.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
      warning2 = function(condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format === void 0) {
          throw new Error(
            "`warning(condition, format, ...args)` requires a warning message argument"
          );
        }
        if (!condition) {
          printWarning.apply(null, [format].concat(args));
        }
      };
    }
    var printWarning;
    module.exports = warning2;
  }
});

// node_modules/@atlaskit/icon/dist/esm/components/icon-new.js
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/icon/dist/esm/components/icon-new.compiled.css";
var React71, import_react101, coreSizeMedium, coreSizeSmall, utilSizes, baseSizeMap, paddingMap, Icon, icon_new_default;
var init_icon_new = __esm({
  "node_modules/@atlaskit/icon/dist/esm/components/icon-new.js"() {
    React71 = __toESM(require_react());
    init_runtime2();
    import_react101 = __toESM(require_react());
    init_esm();
    coreSizeMedium = {
      none: "_1bsbpxbi _4t3ipxbi",
      compact: "_1bsb1ejb _4t3i1ejb",
      spacious: "_1bsb1ejb _4t3i1ejb"
    };
    coreSizeSmall = {
      none: "_1bsbutpp _4t3iutpp",
      compact: "_1bsbpxbi _4t3ipxbi",
      spacious: "_1bsb1ejb _4t3i1ejb"
    };
    utilSizes = {
      none: "_1bsbutpp _4t3iutpp",
      compact: "_1bsbpxbi _4t3ipxbi",
      spacious: "_1bsb1ejb _4t3i1ejb"
    };
    baseSizeMap = {
      core: 16,
      utility: 12
    };
    paddingMap = {
      core: {
        medium: {
          none: 0,
          compact: 4,
          spacious: 4
        },
        small: {
          none: 0,
          compact: 2.66,
          spacious: 8
        }
      },
      utility: {
        medium: {
          none: 0,
          compact: 2,
          spacious: 6
        },
        small: {
          none: 0,
          compact: 2,
          spacious: 6
        }
      }
    };
    Icon = (0, import_react101.memo)(function Icon2(props) {
      var _props$type;
      var _ref = props, _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, testId = _ref.testId, label = _ref.label, LEGACY_primaryColor = _ref.LEGACY_primaryColor, LEGACY_secondaryColor = _ref.LEGACY_secondaryColor, LEGACY_size = _ref.LEGACY_size, FallbackIcon = _ref.LEGACY_fallbackIcon, dangerouslySetGlyph = _ref.dangerouslySetGlyph, shouldScale = _ref.shouldScale, LEGACY_margin = _ref.LEGACY_margin, _ref$spacing = _ref.spacing, spacing3 = _ref$spacing === void 0 ? "none" : _ref$spacing;
      var dangerouslySetInnerHTML = dangerouslySetGlyph ? {
        __html: dangerouslySetGlyph
      } : void 0;
      if (FallbackIcon && !fg("platform-visual-refresh-icons")) {
        return React71.createElement(FallbackIcon, {
          primaryColor: LEGACY_primaryColor !== null && LEGACY_primaryColor !== void 0 ? LEGACY_primaryColor : color,
          secondaryColor: LEGACY_secondaryColor,
          size: LEGACY_size,
          label,
          testId,
          UNSAFE_margin: LEGACY_margin
        });
      }
      var type = (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : "core";
      var size = "size" in props && props.size !== void 0 && // This prevents invalid sizes being passed in, which is required
      // for handling unsupported legacy icon sizes which can
      // cause errors.
      (props.size === "small" || props.size === "medium") ? props.size : "medium";
      var baseSize = baseSizeMap[type];
      var viewBoxPadding = paddingMap[type][size][spacing3];
      var viewBoxSize = baseSize + 2 * viewBoxPadding;
      return React71.createElement("span", {
        "data-testid": testId,
        role: label ? "img" : void 0,
        "aria-label": label ? label : void 0,
        "aria-hidden": label ? void 0 : true,
        style: {
          color
        },
        className: ax(["_1e0c1o8l _vchhusvi _1o9zidpf _vwz4kb7n _y4ti1igz _bozg1mb9", "_12va1onz _jcxd1r8n", shouldScale && "_1bsb1kw7 _4t3i1kw7", (type === "utility" || size === "small") && "_vwz4utpp"])
      }, React71.createElement("svg", {
        fill: "none",
        viewBox: "".concat(0 - viewBoxPadding, " ").concat(0 - viewBoxPadding, " ").concat(viewBoxSize, " ").concat(viewBoxSize),
        role: "presentation",
        dangerouslySetInnerHTML,
        className: ax(["_1reo15vq _18m915vq _syaz1r31 _lcxvglyw _s7n4yfq0 _vc881r31", shouldScale ? "_1bsb1kw7 _4t3i1kw7" : type === "utility" ? utilSizes[spacing3] : size === "small" ? coreSizeSmall[spacing3] : coreSizeMedium[spacing3]])
      }));
    });
    icon_new_default = Icon;
  }
});

// node_modules/@atlaskit/icon/dist/esm/entry-points/base-new.js
var base_new_exports = {};
__export(base_new_exports, {
  Icon: () => Icon,
  default: () => icon_new_default
});
var init_base_new = __esm({
  "node_modules/@atlaskit/icon/dist/esm/entry-points/base-new.js"() {
    init_icon_new();
  }
});

// node_modules/@atlaskit/icon/utility/chevron-down.js
var require_chevron_down = __commonJS({
  "node_modules/@atlaskit/icon/utility/chevron-down.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronDownIcon = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M2.03 3.97 6 7.94l3.97-3.97 1.06 1.06-4.5 4.5a.75.75 0 0 1-1.06 0l-4.5-4.5z" clip-rule="evenodd"/>`,
      type: "utility"
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronDownIcon.displayName = "ChevronDownIcon";
    var _default = exports.default = ChevronDownIcon;
  }
});

// node_modules/@atlaskit/icon/dist/esm/components/icon.js
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/icon/dist/esm/components/icon.compiled.css";
function ownKeys11(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread11(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys11(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys11(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var React72, import_react102, sizeStyles, Icon3, icon_default;
var init_icon = __esm({
  "node_modules/@atlaskit/icon/dist/esm/components/icon.js"() {
    init_extends();
    init_defineProperty();
    React72 = __toESM(require_react());
    init_runtime2();
    import_react102 = __toESM(require_react());
    sizeStyles = {
      small: "_1bsb7vkz _4t3i7vkz _5fdi7vkz _zbji7vkz",
      medium: "_1bsb1tcg _4t3i1tcg _5fdi1tcg _zbji1tcg",
      large: "_1bsbzwfg _4t3izwfg _5fdizwfg _zbjizwfg",
      xlarge: "_1bsbckbl _4t3ickbl _5fdickbl _zbjickbl"
    };
    Icon3 = (0, import_react102.memo)(function Icon4(props) {
      var _ref = props, Glyph = _ref.glyph, dangerouslySetGlyph = _ref.dangerouslySetGlyph, _ref$primaryColor = _ref.primaryColor, primaryColor = _ref$primaryColor === void 0 ? "currentColor" : _ref$primaryColor, secondaryColor = _ref.secondaryColor, size = _ref.size, testId = _ref.testId, label = _ref.label, width = _ref.width, height = _ref.height, UNSAFE_margin = _ref.UNSAFE_margin;
      var glyphProps = dangerouslySetGlyph ? {
        dangerouslySetInnerHTML: {
          __html: dangerouslySetGlyph
        }
      } : {
        children: Glyph ? React72.createElement(Glyph, {
          role: "presentation"
        }) : null
      };
      var customDimensions = width && height ? {
        width: width + "px",
        height: height + "px"
      } : null;
      return React72.createElement("span", _extends({
        "data-testid": testId,
        "data-vc": "icon-".concat(testId),
        role: label ? "img" : void 0,
        "aria-label": label ? label : void 0,
        "aria-hidden": label ? void 0 : true,
        style: _objectSpread11(_objectSpread11({}, customDimensions), {}, {
          "--icon-primary-color": primaryColor,
          // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
          "--icon-secondary-color": secondaryColor,
          // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
          margin: UNSAFE_margin
        })
      }, glyphProps, {
        className: ax(["_1e0c1o8l _1o9zidpf _vyfuvuon _vwz4kb7n _1szv15vq _1tly15vq _rzyw1osq _17jb1osq _1ksvoz0e _3se1x1jp _re2rglyw _1veoyfq0 _1kg81r31", "_jcxd1r8n _gq0g1onz _1trkwc43", primaryColor === secondaryColor && "_18hbwc43", secondaryColor === "transparent" && "_4fyi1j28", size && sizeStyles[size]])
      }));
    });
    icon_default = Icon3;
  }
});

// node_modules/@atlaskit/icon/dist/esm/components/icon-facade.js
var import_react103, _excluded14, sizeSpacingMap, IconFacade;
var init_icon_facade = __esm({
  "node_modules/@atlaskit/icon/dist/esm/components/icon-facade.js"() {
    init_extends();
    init_objectWithoutProperties();
    import_react103 = __toESM(require_react());
    init_esm();
    init_icon();
    _excluded14 = ["dangerouslySetGlyph", "size"];
    sizeSpacingMap = {
      utility: {
        small: "compact",
        medium: "spacious"
      },
      core: {
        small: "none",
        medium: "spacious"
      }
    };
    IconFacade = (0, import_react103.memo)(function IconFacade2(_ref) {
      var dangerouslySetGlyph = _ref.dangerouslySetGlyph, size = _ref.size, props = _objectWithoutProperties(_ref, _excluded14);
      var NewIcon = props.newIcon;
      var iconSize = size !== null && size !== void 0 ? size : "medium";
      var useNewIcon = !props.isFacadeDisabled && // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
      fg("platform-visual-refresh-icons-legacy-facade");
      if (useNewIcon && NewIcon && (iconSize === "small" || iconSize === "medium")) {
        if (props.iconType === "utility") {
          var Icon5 = NewIcon;
          return import_react103.default.createElement(Icon5, _extends({}, props, {
            spacing: fg("platform-visual-refresh-icons-facade-button-fix") ? sizeSpacingMap["utility"][iconSize] : "none",
            color: props.primaryColor || "currentColor",
            type: props.iconType
          }));
        } else {
          var _Icon = NewIcon;
          return import_react103.default.createElement(_Icon, _extends({}, props, {
            size: iconSize,
            spacing: sizeSpacingMap["core"][iconSize],
            color: props.primaryColor || "currentColor",
            type: props.iconType
          }));
        }
      }
      return import_react103.default.createElement(Icon3, _extends({
        dangerouslySetGlyph,
        size
      }, props));
    });
  }
});

// node_modules/@atlaskit/icon/dist/esm/entry-points/base.js
var base_exports = {};
__export(base_exports, {
  Icon: () => Icon3,
  IconFacade: () => IconFacade,
  default: () => icon_default
});
var init_base = __esm({
  "node_modules/@atlaskit/icon/dist/esm/entry-points/base.js"() {
    init_icon();
    init_icon_facade();
  }
});

// node_modules/@atlaskit/icon/core/chevron-down.js
var require_chevron_down2 = __commonJS({
  "node_modules/@atlaskit/icon/core/chevron-down.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronDownIcon = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" d="m14.53 6.03-6 6a.75.75 0 0 1-1.004.052l-.056-.052-6-6 1.06-1.06L8 10.44l5.47-5.47z"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronDownIcon.displayName = "ChevronDownIcon";
    var _default = exports.default = ChevronDownIcon;
  }
});

// node_modules/@atlaskit/icon/glyph/chevron-down.js
var require_chevron_down3 = __commonJS({
  "node_modules/@atlaskit/icon/glyph/chevron-down.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    var _chevronDown = _interopRequireDefault(require_chevron_down2());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronDownIcon = (props) => _react.default.createElement(_base.IconFacade, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M8.292 10.293a1.01 1.01 0 0 0 0 1.419l2.939 2.965c.218.215.5.322.779.322s.556-.107.769-.322l2.93-2.955a1.01 1.01 0 0 0 0-1.419.987.987 0 0 0-1.406 0l-2.298 2.317-2.307-2.327a.99.99 0 0 0-1.406 0"/></svg>`
    }, props, {
      newIcon: _chevronDown.default
    }));
    ChevronDownIcon.displayName = "ChevronDownIcon";
    var _default = exports.default = ChevronDownIcon;
  }
});

// node_modules/@atlaskit/icon/utility/migration/chevron-down.js
var require_chevron_down4 = __commonJS({
  "node_modules/@atlaskit/icon/utility/migration/chevron-down.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _chevronDown = _interopRequireDefault(require_chevron_down());
    var _chevronDown2 = _interopRequireDefault(require_chevron_down3());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronDownIcon = (props) => _react.default.createElement(_chevronDown.default, Object.assign({
      LEGACY_fallbackIcon: _chevronDown2.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronDownIcon.Name = "ChevronDownIconMigration";
    var _default = exports.default = ChevronDownIcon;
  }
});

// node_modules/tabbable/index.js
var require_tabbable = __commonJS({
  "node_modules/tabbable/index.js"(exports, module) {
    module.exports = function(el, options) {
      options = options || {};
      var elementDocument = el.ownerDocument || el;
      var basicTabbables = [];
      var orderedTabbables = [];
      var isUnavailable = createIsUnavailable(elementDocument);
      var candidateSelectors = [
        "input",
        "select",
        "a[href]",
        "textarea",
        "button",
        "[tabindex]"
      ];
      var candidates = el.querySelectorAll(candidateSelectors.join(","));
      if (options.includeContainer) {
        var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
        if (candidateSelectors.some(function(candidateSelector) {
          return matches.call(el, candidateSelector);
        })) {
          candidates = Array.prototype.slice.apply(candidates);
          candidates.unshift(el);
        }
      }
      var candidate, candidateIndexAttr, candidateIndex;
      for (var i = 0, l = candidates.length; i < l; i++) {
        candidate = candidates[i];
        candidateIndexAttr = parseInt(candidate.getAttribute("tabindex"), 10);
        candidateIndex = isNaN(candidateIndexAttr) ? candidate.tabIndex : candidateIndexAttr;
        if (candidateIndex < 0 || candidate.tagName === "INPUT" && candidate.type === "hidden" || candidate.disabled || isUnavailable(candidate, elementDocument)) {
          continue;
        }
        if (candidateIndex === 0) {
          basicTabbables.push(candidate);
        } else {
          orderedTabbables.push({
            index: i,
            tabIndex: candidateIndex,
            node: candidate
          });
        }
      }
      var tabbableNodes = orderedTabbables.sort(function(a, b) {
        return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;
      }).map(function(a) {
        return a.node;
      });
      Array.prototype.push.apply(tabbableNodes, basicTabbables);
      return tabbableNodes;
    };
    function createIsUnavailable(elementDocument) {
      var isOffCache = [];
      function isOff(node, nodeComputedStyle) {
        if (node === elementDocument.documentElement) return false;
        for (var i = 0, length = isOffCache.length; i < length; i++) {
          if (isOffCache[i][0] === node) return isOffCache[i][1];
        }
        nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);
        var result = false;
        if (nodeComputedStyle.display === "none") {
          result = true;
        } else if (node.parentNode) {
          result = isOff(node.parentNode);
        }
        isOffCache.push([node, result]);
        return result;
      }
      return function isUnavailable(node) {
        if (node === elementDocument.documentElement) return false;
        var computedStyle = elementDocument.defaultView.getComputedStyle(node);
        if (isOff(node, computedStyle)) return true;
        return computedStyle.visibility === "hidden";
      };
    }
  }
});

// node_modules/focus-trap/index.js
var require_focus_trap = __commonJS({
  "node_modules/focus-trap/index.js"(exports, module) {
    var tabbable = require_tabbable();
    var listeningFocusTrap = null;
    function focusTrap(element, userOptions) {
      var tabbableNodes = [];
      var firstTabbableNode = null;
      var lastTabbableNode = null;
      var nodeFocusedBeforeActivation = null;
      var active2 = false;
      var paused = false;
      var tabEvent = null;
      var container = typeof element === "string" ? document.querySelector(element) : element;
      var config = userOptions || {};
      config.returnFocusOnDeactivate = userOptions && userOptions.returnFocusOnDeactivate !== void 0 ? userOptions.returnFocusOnDeactivate : true;
      config.escapeDeactivates = userOptions && userOptions.escapeDeactivates !== void 0 ? userOptions.escapeDeactivates : true;
      var trap = {
        activate,
        deactivate,
        pause,
        unpause
      };
      return trap;
      function activate(activateOptions) {
        if (active2) return;
        var defaultedActivateOptions = {
          onActivate: activateOptions && activateOptions.onActivate !== void 0 ? activateOptions.onActivate : config.onActivate
        };
        active2 = true;
        paused = false;
        nodeFocusedBeforeActivation = document.activeElement;
        if (defaultedActivateOptions.onActivate) {
          defaultedActivateOptions.onActivate();
        }
        addListeners();
        return trap;
      }
      function deactivate(deactivateOptions) {
        if (!active2) return;
        var defaultedDeactivateOptions = {
          returnFocus: deactivateOptions && deactivateOptions.returnFocus !== void 0 ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate,
          onDeactivate: deactivateOptions && deactivateOptions.onDeactivate !== void 0 ? deactivateOptions.onDeactivate : config.onDeactivate
        };
        removeListeners();
        if (defaultedDeactivateOptions.onDeactivate) {
          defaultedDeactivateOptions.onDeactivate();
        }
        if (defaultedDeactivateOptions.returnFocus) {
          setTimeout(function() {
            tryFocus(nodeFocusedBeforeActivation);
          }, 0);
        }
        active2 = false;
        paused = false;
        return this;
      }
      function pause() {
        if (paused || !active2) return;
        paused = true;
        removeListeners();
      }
      function unpause() {
        if (!paused || !active2) return;
        paused = false;
        addListeners();
      }
      function addListeners() {
        if (!active2) return;
        if (listeningFocusTrap) {
          listeningFocusTrap.pause();
        }
        listeningFocusTrap = trap;
        updateTabbableNodes();
        setTimeout(function() {
          tryFocus(firstFocusNode());
        }, 0);
        document.addEventListener("focus", checkFocus, true);
        document.addEventListener("click", checkClick, true);
        document.addEventListener("mousedown", checkPointerDown, true);
        document.addEventListener("touchstart", checkPointerDown, true);
        document.addEventListener("keydown", checkKey, true);
        return trap;
      }
      function removeListeners() {
        if (!active2 || listeningFocusTrap !== trap) return;
        document.removeEventListener("focus", checkFocus, true);
        document.removeEventListener("click", checkClick, true);
        document.removeEventListener("mousedown", checkPointerDown, true);
        document.removeEventListener("touchstart", checkPointerDown, true);
        document.removeEventListener("keydown", checkKey, true);
        listeningFocusTrap = null;
        return trap;
      }
      function getNodeForOption(optionName) {
        var optionValue = config[optionName];
        var node = optionValue;
        if (!optionValue) {
          return null;
        }
        if (typeof optionValue === "string") {
          node = document.querySelector(optionValue);
          if (!node) {
            throw new Error("`" + optionName + "` refers to no known node");
          }
        }
        if (typeof optionValue === "function") {
          node = optionValue();
          if (!node) {
            throw new Error("`" + optionName + "` did not return a node");
          }
        }
        return node;
      }
      function firstFocusNode() {
        var node;
        if (getNodeForOption("initialFocus") !== null) {
          node = getNodeForOption("initialFocus");
        } else if (container.contains(document.activeElement)) {
          node = document.activeElement;
        } else {
          node = tabbableNodes[0] || getNodeForOption("fallbackFocus");
        }
        if (!node) {
          throw new Error("You can't have a focus-trap without at least one focusable element");
        }
        return node;
      }
      function checkPointerDown(e) {
        if (config.clickOutsideDeactivates && !container.contains(e.target)) {
          deactivate({ returnFocus: false });
        }
      }
      function checkClick(e) {
        if (config.clickOutsideDeactivates) return;
        if (container.contains(e.target)) return;
        e.preventDefault();
        e.stopImmediatePropagation();
      }
      function checkFocus(e) {
        if (container.contains(e.target)) return;
        e.preventDefault();
        e.stopImmediatePropagation();
        if (typeof e.target.blur === "function") e.target.blur();
        if (tabEvent) {
          readjustFocus(tabEvent);
        }
      }
      function checkKey(e) {
        if (e.key === "Tab" || e.keyCode === 9) {
          handleTab(e);
        }
        if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
          deactivate();
        }
      }
      function handleTab(e) {
        updateTabbableNodes();
        if (e.target.hasAttribute("tabindex") && Number(e.target.getAttribute("tabindex")) < 0) {
          return tabEvent = e;
        }
        e.preventDefault();
        var currentFocusIndex = tabbableNodes.indexOf(e.target);
        if (e.shiftKey) {
          if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {
            return tryFocus(lastTabbableNode);
          }
          return tryFocus(tabbableNodes[currentFocusIndex - 1]);
        }
        if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);
        tryFocus(tabbableNodes[currentFocusIndex + 1]);
      }
      function updateTabbableNodes() {
        tabbableNodes = tabbable(container);
        firstTabbableNode = tabbableNodes[0];
        lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];
      }
      function readjustFocus(e) {
        if (e.shiftKey) return tryFocus(lastTabbableNode);
        tryFocus(firstTabbableNode);
      }
    }
    function isEscapeEvent(e) {
      return e.key === "Escape" || e.key === "Esc" || e.keyCode === 27;
    }
    function tryFocus(node) {
      if (!node || !node.focus) return;
      if (node === document.activeElement) return;
      node.focus();
      if (node.tagName.toLowerCase() === "input") {
        node.select();
      }
    }
    module.exports = focusTrap;
  }
});

// node_modules/@atlaskit/dropdown-menu/dist/esm/dropdown-menu.js
init_extends();
init_defineProperty();
init_objectWithoutProperties();
init_slicedToArray();
var import_react127 = __toESM(require_react());
var import_bind_event_listener12 = __toESM(require_dist());

// node_modules/@atlaskit/button/dist/esm/new-button/variants/default/button.js
init_extends();
init_objectWithoutProperties();
var import_react61 = __toESM(require_react());

// node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/button-base.js
init_extends();
init_objectWithoutProperties();
init_runtime2();
var import_react58 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/button-base.compiled.css";

// node_modules/@atlaskit/css/dist/esm/index.js
var React3 = __toESM(require_react());
init_runtime2();

// node_modules/@compiled/react/dist/esm/index.js
var import_react3 = __toESM(require_react());

// node_modules/@compiled/react/dist/esm/utils/error.js
var createSetupError = () => {
  return new Error(`
 ██████╗ ██████╗ ███╗   ███╗██████╗ ██╗██╗     ███████╗██████╗
██╔════╝██╔═══██╗████╗ ████║██╔══██╗██║██║     ██╔════╝██╔══██╗
██║     ██║   ██║██╔████╔██║██████╔╝██║██║     █████╗  ██║  ██║
██║     ██║   ██║██║╚██╔╝██║██╔═══╝ ██║██║     ██╔══╝  ██║  ██║
╚██████╗╚██████╔╝██║ ╚═╝ ██║██║     ██║███████╗███████╗██████╔╝
 ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝     ╚═╝╚══════╝╚══════╝╚═════╝

  @compiled/react

  Code was executed when it shouldn't have. This could have happened because:

  1. You haven't configured a transformer yet. Visit https://compiledcssinjs.com/docs/installation and follow the instructions.
  2. You have duplicate versions of React and hooks are blowing up. You need to de-duplicate your dependencies.

  Good luck!
`);
};
var createStrictSetupError = () => {
  return new Error(`
 ██████╗ ██████╗ ███╗   ███╗██████╗ ██╗██╗     ███████╗██████╗
██╔════╝██╔═══██╗████╗ ████║██╔══██╗██║██║     ██╔════╝██╔══██╗
██║     ██║   ██║██╔████╔██║██████╔╝██║██║     █████╗  ██║  ██║
██║     ██║   ██║██║╚██╔╝██║██╔═══╝ ██║██║     ██╔══╝  ██║  ██║
╚██████╗╚██████╔╝██║ ╚═╝ ██║██║     ██║███████╗███████╗██████╔╝
 ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝     ╚═╝╚══════╝╚══════╝╚═════╝

  @compiled/react

  Code was executed when it shouldn't have. To resolve make sure to:

  1. Set up Compiled.
  2. Configure importSources in your Compiled config to point to the module that exports the output of createStrictAPI().

  For more information visit https://compiledcssinjs.com/docs/installation and follow the instructions.
`);
};

// node_modules/@compiled/react/dist/esm/xcss-prop/index.js
init_runtime2();
var cx = (...styles18) => {
  const actualStyles = styles18;
  return ax(actualStyles);
};

// node_modules/@compiled/react/dist/esm/create-strict-api/index.js
function createStrictAPI() {
  return {
    css() {
      throw createStrictSetupError();
    },
    cssMap() {
      throw createStrictSetupError();
    },
    cx,
    XCSSProp() {
      throw createStrictSetupError();
    }
  };
}

// node_modules/@compiled/react/dist/esm/styled/index.js
var styled = new Proxy({}, {
  get() {
    return () => {
      throw createSetupError();
    };
  }
});

// node_modules/@atlaskit/css/dist/esm/index.js
var _createStrictAPI = createStrictAPI();
var XCSSProp = _createStrictAPI.XCSSProp;
var css2 = _createStrictAPI.css;
var cssMap2 = _createStrictAPI.cssMap;
var cx2 = _createStrictAPI.cx;

// node_modules/@atlaskit/ds-lib/dist/esm/utils/merge-refs.js
function mergeRefs(refs) {
  return function(value) {
    refs.forEach(function(ref) {
      if (typeof ref === "function") {
        ref(value);
      } else if (ref !== null) {
        ref.current = value;
      }
    });
  };
}

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-auto-focus.js
var import_react6 = __toESM(require_react());
function useAutoFocus(ref, autoFocus) {
  var initialMount = (0, import_react6.useRef)(true);
  (0, import_react6.useEffect)(function() {
    if (ref && initialMount.current && autoFocus && ref.current) {
      ref.current.focus();
    }
    initialMount.current = false;
  }, [autoFocus, ref]);
}

// node_modules/@atlaskit/ds-lib/dist/esm/utils/use-id.js
init_typeof();
var import_react9 = __toESM(require_react());

// node_modules/react-uid/dist/es2015/Control.js
var React7 = __toESM(require_react());
var import_react8 = __toESM(require_react());

// node_modules/react-uid/dist/es2015/UIDComponent.js
var React5 = __toESM(require_react());

// node_modules/react-uid/dist/es2015/context.js
var React4 = __toESM(require_react());

// node_modules/react-uid/dist/es2015/uid.js
var generateUID = function() {
  var counter2 = 1;
  var map = /* @__PURE__ */ new WeakMap();
  var uid2 = function(item, index) {
    if (typeof item === "number" || typeof item === "string") {
      return index ? "idx-".concat(index) : "val-".concat(item);
    }
    if (!map.has(item)) {
      map.set(item, counter2++);
      return uid2(item);
    }
    return "uid" + map.get(item);
  };
  return uid2;
};
var uid = generateUID();

// node_modules/react-uid/dist/es2015/context.js
var createSource = function(prefix2) {
  if (prefix2 === void 0) {
    prefix2 = "";
  }
  return {
    value: 1,
    prefix: prefix2,
    uid: generateUID()
  };
};
var counter = createSource();
var source = React4.createContext(createSource());
var getId = function(source2) {
  return source2.value++;
};
var getPrefix = function(source2) {
  return source2 ? source2.prefix : "";
};

// node_modules/react-uid/dist/es2015/UIDComponent.js
var __extends = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var prefixId = function(id, prefix2, name) {
  var uid2 = prefix2 + id;
  return String(name ? name(uid2) : uid2);
};
var UID = (
  /** @class */
  function(_super) {
    __extends(UID2, _super);
    function UID2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        quartz: _this.props.idSource || counter,
        prefix: getPrefix(_this.props.idSource),
        id: getId(_this.props.idSource || counter)
      };
      _this.uid = function(item) {
        return prefixId(_this.state.id + "-" + _this.state.quartz.uid(item), _this.state.prefix, _this.props.name);
      };
      return _this;
    }
    UID2.prototype.render = function() {
      var _a = this.props, children = _a.children, name = _a.name;
      var _b = this.state, id = _b.id, prefix2 = _b.prefix;
      return children(prefixId(id, prefix2, name), this.uid);
    };
    return UID2;
  }(React5.Component)
);

// node_modules/react-uid/dist/es2015/hooks.js
var React6 = __toESM(require_react());
var import_react7 = __toESM(require_react());
var generateUID2 = function(context) {
  var quartz = context || counter;
  var prefix2 = getPrefix(quartz);
  var id = getId(quartz);
  var uid2 = prefix2 + id;
  var gen = function(item) {
    return uid2 + quartz.uid(item);
  };
  return { uid: uid2, gen };
};
var useUIDState = function() {
  if (true) {
    if (!("useContext" in React6)) {
      throw new Error("Hooks API requires React 16.8+");
    }
  }
  var context = (0, import_react7.useContext)(source);
  var uid2 = (0, import_react7.useState)(function() {
    return generateUID2(context);
  })[0];
  return uid2;
};
var useUID = function() {
  var uid2 = useUIDState().uid;
  return uid2;
};
var useUIDSeed = function() {
  var gen = useUIDState().gen;
  return gen;
};

// node_modules/@atlaskit/ds-lib/dist/esm/utils/use-id.js
init_esm();
var _React$useId;
var react18UseId = (_React$useId = import_react9.default.useId) !== null && _React$useId !== void 0 ? _React$useId : void 0;
function useId() {
  if (react18UseId && fg("platform-dst-react-18-use-id")) {
    return react18UseId();
  }
  return "uid".concat(useUID());
}
var IdProvider = (0, import_react9.forwardRef)(function(_ref, ref) {
  var children = _ref.children, _ref$postfix = _ref.postfix, postfix = _ref$postfix === void 0 ? "" : _ref$postfix, _ref$prefix = _ref.prefix, prefix2 = _ref$prefix === void 0 ? "" : _ref$prefix;
  var id = "".concat(prefix2).concat(useId()).concat(postfix);
  (0, import_react9.useEffect)(function() {
    if (!ref) {
      return;
    }
    switch (_typeof(ref)) {
      case "function":
        ref(id);
        break;
      case "object":
        ref.current = id;
        break;
      default:
        throw new Error('Unreachable case for unsupported type of ref "'.concat(_typeof(ref), '"'));
    }
  }, [id, ref]);
  return import_react9.default.createElement(import_react9.default.Fragment, null, typeof children === "function" ? children({
    id
  }) : children);
});

// node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/button-base.js
init_esm();

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/box.js
init_extends();
init_objectWithoutProperties();
var React9 = __toESM(require_react());
init_runtime2();
var import_react11 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/box.compiled.css";

// node_modules/@atlaskit/primitives/dist/esm/utils/surface-provider.js
var import_react10 = __toESM(require_react());
var SurfaceContext = (0, import_react10.createContext)("elevation.surface");
var useSurface = function useSurface2() {
  return (0, import_react10.useContext)(SurfaceContext);
};
SurfaceContext.displayName = "SurfaceProvider";

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/box.js
var _excluded = ["as", "children", "backgroundColor", "padding", "paddingBlock", "paddingBlockStart", "paddingBlockEnd", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "style", "testId", "xcss"];
var _excluded2 = ["className"];
var backgroundColorMap = {
  "color.background.accent.lime.subtlest": "_bfhkm890",
  "color.background.accent.lime.subtlest.hovered": "_bfhkd4y8",
  "color.background.accent.lime.subtlest.pressed": "_bfhk1fno",
  "color.background.accent.lime.subtler": "_bfhkz2ec",
  "color.background.accent.lime.subtler.hovered": "_bfhk1eds",
  "color.background.accent.lime.subtler.pressed": "_bfhk1hgz",
  "color.background.accent.lime.subtle": "_bfhkbq5w",
  "color.background.accent.lime.subtle.hovered": "_bfhkfoww",
  "color.background.accent.lime.subtle.pressed": "_bfhkhgj8",
  "color.background.accent.lime.bolder": "_bfhktde4",
  "color.background.accent.lime.bolder.hovered": "_bfhknzpa",
  "color.background.accent.lime.bolder.pressed": "_bfhk1b17",
  "color.background.accent.red.subtlest": "_bfhk1vk5",
  "color.background.accent.red.subtlest.hovered": "_bfhk1i6i",
  "color.background.accent.red.subtlest.pressed": "_bfhk1pbw",
  "color.background.accent.red.subtler": "_bfhk1rtt",
  "color.background.accent.red.subtler.hovered": "_bfhkrw5d",
  "color.background.accent.red.subtler.pressed": "_bfhk69rw",
  "color.background.accent.red.subtle": "_bfhkkrt9",
  "color.background.accent.red.subtle.hovered": "_bfhk1sou",
  "color.background.accent.red.subtle.pressed": "_bfhk1tf4",
  "color.background.accent.red.bolder": "_bfhkuibq",
  "color.background.accent.red.bolder.hovered": "_bfhk100f",
  "color.background.accent.red.bolder.pressed": "_bfhkprmn",
  "color.background.accent.orange.subtlest": "_bfhk1g3m",
  "color.background.accent.orange.subtlest.hovered": "_bfhkg4tm",
  "color.background.accent.orange.subtlest.pressed": "_bfhk1ya0",
  "color.background.accent.orange.subtler": "_bfhkf2vu",
  "color.background.accent.orange.subtler.hovered": "_bfhk1lml",
  "color.background.accent.orange.subtler.pressed": "_bfhkuxsx",
  "color.background.accent.orange.subtle": "_bfhk1g6e",
  "color.background.accent.orange.subtle.hovered": "_bfhk1oew",
  "color.background.accent.orange.subtle.pressed": "_bfhk1phk",
  "color.background.accent.orange.bolder": "_bfhkjgng",
  "color.background.accent.orange.bolder.hovered": "_bfhkhi52",
  "color.background.accent.orange.bolder.pressed": "_bfhkf767",
  "color.background.accent.yellow.subtlest": "_bfhk1ozg",
  "color.background.accent.yellow.subtlest.hovered": "_bfhk19g9",
  "color.background.accent.yellow.subtlest.pressed": "_bfhk31d1",
  "color.background.accent.yellow.subtler": "_bfhk3fv2",
  "color.background.accent.yellow.subtler.hovered": "_bfhklg04",
  "color.background.accent.yellow.subtler.pressed": "_bfhk1d44",
  "color.background.accent.yellow.subtle": "_bfhkry5t",
  "color.background.accent.yellow.subtle.hovered": "_bfhk17e6",
  "color.background.accent.yellow.subtle.pressed": "_bfhko0y5",
  "color.background.accent.yellow.bolder": "_bfhk1vop",
  "color.background.accent.yellow.bolder.hovered": "_bfhkkjqf",
  "color.background.accent.yellow.bolder.pressed": "_bfhk32kj",
  "color.background.accent.green.subtlest": "_bfhkn729",
  "color.background.accent.green.subtlest.hovered": "_bfhk3utz",
  "color.background.accent.green.subtlest.pressed": "_bfhkv5yf",
  "color.background.accent.green.subtler": "_bfhk1wnw",
  "color.background.accent.green.subtler.hovered": "_bfhkung8",
  "color.background.accent.green.subtler.pressed": "_bfhk1p19",
  "color.background.accent.green.subtle": "_bfhk1rsu",
  "color.background.accent.green.subtle.hovered": "_bfhk12e3",
  "color.background.accent.green.subtle.pressed": "_bfhk8h4p",
  "color.background.accent.green.bolder": "_bfhk1e5c",
  "color.background.accent.green.bolder.hovered": "_bfhka5yi",
  "color.background.accent.green.bolder.pressed": "_bfhk1azz",
  "color.background.accent.teal.subtlest": "_bfhk7xuz",
  "color.background.accent.teal.subtlest.hovered": "_bfhk108c",
  "color.background.accent.teal.subtlest.pressed": "_bfhk1j2h",
  "color.background.accent.teal.subtler": "_bfhk1a17",
  "color.background.accent.teal.subtler.hovered": "_bfhkg5py",
  "color.background.accent.teal.subtler.pressed": "_bfhkq7li",
  "color.background.accent.teal.subtle": "_bfhktdv8",
  "color.background.accent.teal.subtle.hovered": "_bfhkzh8h",
  "color.background.accent.teal.subtle.pressed": "_bfhk10ai",
  "color.background.accent.teal.bolder": "_bfhk2c8p",
  "color.background.accent.teal.bolder.hovered": "_bfhkl3ve",
  "color.background.accent.teal.bolder.pressed": "_bfhkse6l",
  "color.background.accent.blue.subtlest": "_bfhkavxe",
  "color.background.accent.blue.subtlest.hovered": "_bfhkay3p",
  "color.background.accent.blue.subtlest.pressed": "_bfhk1xmr",
  "color.background.accent.blue.subtler": "_bfhk4v9p",
  "color.background.accent.blue.subtler.hovered": "_bfhk16e6",
  "color.background.accent.blue.subtler.pressed": "_bfhk1uh7",
  "color.background.accent.blue.subtle": "_bfhk1j89",
  "color.background.accent.blue.subtle.hovered": "_bfhk1f4s",
  "color.background.accent.blue.subtle.pressed": "_bfhkqctv",
  "color.background.accent.blue.bolder": "_bfhkc8cv",
  "color.background.accent.blue.bolder.hovered": "_bfhk1cwi",
  "color.background.accent.blue.bolder.pressed": "_bfhkhcrq",
  "color.background.accent.purple.subtlest": "_bfhkp7j4",
  "color.background.accent.purple.subtlest.hovered": "_bfhkm0d5",
  "color.background.accent.purple.subtlest.pressed": "_bfhkgslw",
  "color.background.accent.purple.subtler": "_bfhk1jkz",
  "color.background.accent.purple.subtler.hovered": "_bfhk1wyu",
  "color.background.accent.purple.subtler.pressed": "_bfhk5fkp",
  "color.background.accent.purple.subtle": "_bfhkdh45",
  "color.background.accent.purple.subtle.hovered": "_bfhk1wob",
  "color.background.accent.purple.subtle.pressed": "_bfhkwz05",
  "color.background.accent.purple.bolder": "_bfhkygwo",
  "color.background.accent.purple.bolder.hovered": "_bfhkadgs",
  "color.background.accent.purple.bolder.pressed": "_bfhk1uro",
  "color.background.accent.magenta.subtlest": "_bfhk8tvm",
  "color.background.accent.magenta.subtlest.hovered": "_bfhkr3zd",
  "color.background.accent.magenta.subtlest.pressed": "_bfhk1een",
  "color.background.accent.magenta.subtler": "_bfhkv9ra",
  "color.background.accent.magenta.subtler.hovered": "_bfhk1r0p",
  "color.background.accent.magenta.subtler.pressed": "_bfhkxuzc",
  "color.background.accent.magenta.subtle": "_bfhk1mi6",
  "color.background.accent.magenta.subtle.hovered": "_bfhkrwyz",
  "color.background.accent.magenta.subtle.pressed": "_bfhk1ovh",
  "color.background.accent.magenta.bolder": "_bfhkc3uk",
  "color.background.accent.magenta.bolder.hovered": "_bfhk1ok8",
  "color.background.accent.magenta.bolder.pressed": "_bfhkwaw3",
  "color.background.accent.gray.subtlest": "_bfhk11bn",
  "color.background.accent.gray.subtlest.hovered": "_bfhk12j4",
  "color.background.accent.gray.subtlest.pressed": "_bfhk1lb4",
  "color.background.accent.gray.subtler": "_bfhk1v33",
  "color.background.accent.gray.subtler.hovered": "_bfhk1f7l",
  "color.background.accent.gray.subtler.pressed": "_bfhkd8a2",
  "color.background.accent.gray.subtle": "_bfhk1t05",
  "color.background.accent.gray.subtle.hovered": "_bfhk1a2l",
  "color.background.accent.gray.subtle.pressed": "_bfhk1z0s",
  "color.background.accent.gray.bolder": "_bfhk1t1b",
  "color.background.accent.gray.bolder.hovered": "_bfhke4nv",
  "color.background.accent.gray.bolder.pressed": "_bfhk82ra",
  "color.background.disabled": "_bfhksyzs",
  "color.background.input": "_bfhk1j9a",
  "color.background.input.hovered": "_bfhk1d5g",
  "color.background.input.pressed": "_bfhkr01l",
  "color.background.inverse.subtle": "_bfhk1vck",
  "color.background.inverse.subtle.hovered": "_bfhkmpja",
  "color.background.inverse.subtle.pressed": "_bfhk1gii",
  "color.background.neutral": "_bfhkm7j4",
  "color.background.neutral.hovered": "_bfhk15ej",
  "color.background.neutral.pressed": "_bfhkip91",
  "color.background.neutral.subtle": "_bfhksm61",
  "color.background.neutral.subtle.hovered": "_bfhk166n",
  "color.background.neutral.subtle.pressed": "_bfhk1dty",
  "color.background.neutral.bold": "_bfhkcdhy",
  "color.background.neutral.bold.hovered": "_bfhk1bsc",
  "color.background.neutral.bold.pressed": "_bfhk1b6k",
  "color.background.selected": "_bfhkfg4m",
  "color.background.selected.hovered": "_bfhki1yw",
  "color.background.selected.pressed": "_bfhk19ru",
  "color.background.selected.bold": "_bfhk1fvw",
  "color.background.selected.bold.hovered": "_bfhk18hz",
  "color.background.selected.bold.pressed": "_bfhkgr1v",
  "color.background.brand.subtlest": "_bfhk3wxy",
  "color.background.brand.subtlest.hovered": "_bfhkezq1",
  "color.background.brand.subtlest.pressed": "_bfhk2ggb",
  "color.background.brand.bold": "_bfhkb29m",
  "color.background.brand.bold.hovered": "_bfhku1se",
  "color.background.brand.bold.pressed": "_bfhkqkzo",
  "color.background.brand.boldest": "_bfhk15mt",
  "color.background.brand.boldest.hovered": "_bfhk1uwk",
  "color.background.brand.boldest.pressed": "_bfhk17jr",
  "color.background.danger": "_bfhk1gly",
  "color.background.danger.hovered": "_bfhk1yvi",
  "color.background.danger.pressed": "_bfhk1io2",
  "color.background.danger.bold": "_bfhkybec",
  "color.background.danger.bold.hovered": "_bfhks9hg",
  "color.background.danger.bold.pressed": "_bfhk9pqq",
  "color.background.warning": "_bfhk1tzq",
  "color.background.warning.hovered": "_bfhk1rd4",
  "color.background.warning.pressed": "_bfhk11dh",
  "color.background.warning.bold": "_bfhk190i",
  "color.background.warning.bold.hovered": "_bfhk1i4c",
  "color.background.warning.bold.pressed": "_bfhkrj9s",
  "color.background.success": "_bfhkmv6i",
  "color.background.success.hovered": "_bfhk1jgi",
  "color.background.success.pressed": "_bfhky4f1",
  "color.background.success.bold": "_bfhk8emd",
  "color.background.success.bold.hovered": "_bfhk1q4l",
  "color.background.success.bold.pressed": "_bfhkcrcn",
  "color.background.discovery": "_bfhk1nvp",
  "color.background.discovery.hovered": "_bfhk1xp7",
  "color.background.discovery.pressed": "_bfhkdlkp",
  "color.background.discovery.bold": "_bfhk1lri",
  "color.background.discovery.bold.hovered": "_bfhk1w72",
  "color.background.discovery.bold.pressed": "_bfhkrb53",
  "color.background.information": "_bfhk33gi",
  "color.background.information.hovered": "_bfhk1vps",
  "color.background.information.pressed": "_bfhk1s0z",
  "color.background.information.bold": "_bfhk14wj",
  "color.background.information.bold.hovered": "_bfhk1amz",
  "color.background.information.bold.pressed": "_bfhk5bth",
  "color.blanket": "_bfhk10xm",
  "color.blanket.selected": "_bfhk7wq0",
  "color.blanket.danger": "_bfhkrprw",
  "color.skeleton": "_bfhkn82g",
  "color.skeleton.subtle": "_bfhkh3tw",
  "elevation.surface": "_bfhkvuon",
  "elevation.surface.hovered": "_bfhk108i",
  "elevation.surface.pressed": "_bfhk1ji5",
  "elevation.surface.overlay": "_bfhk1bhr",
  "elevation.surface.overlay.hovered": "_bfhk16qz",
  "elevation.surface.overlay.pressed": "_bfhkvq0a",
  "elevation.surface.raised": "_bfhkhp5a",
  "elevation.surface.raised.hovered": "_bfhk1a0f",
  "elevation.surface.raised.pressed": "_bfhkf7u5",
  "elevation.surface.sunken": "_bfhkqbzx",
  "utility.elevation.surface.current": "_bfhkchd4"
};
var setSurfaceTokenMap = {
  "elevation.surface": "_1q1lvuon",
  "elevation.surface.hovered": "_1q1l108i",
  "elevation.surface.pressed": "_1q1l1ji5",
  "elevation.surface.overlay": "_1q1l1bhr",
  "elevation.surface.overlay.hovered": "_1q1l16qz",
  "elevation.surface.overlay.pressed": "_1q1lvq0a",
  "elevation.surface.raised": "_1q1lhp5a",
  "elevation.surface.raised.hovered": "_1q1l1a0f",
  "elevation.surface.raised.pressed": "_1q1lf7u5",
  "elevation.surface.sunken": "_1q1lqbzx"
};
var paddingBlockStartMap = {
  "space.0": "_1q51ze3t",
  "space.025": "_1q51v77o",
  "space.050": "_1q511b66",
  "space.075": "_1q5112x7",
  "space.100": "_1q51u2gc",
  "space.150": "_1q51utpp",
  "space.200": "_1q51pxbi",
  "space.250": "_1q51v47k",
  "space.300": "_1q511ejb",
  "space.400": "_1q51xy5q",
  "space.500": "_1q511jfw",
  "space.600": "_1q51oahv",
  "space.800": "_1q51xncg",
  "space.1000": "_1q511epz"
};
var paddingBlockEndMap = {
  "space.0": "_85i5ze3t",
  "space.025": "_85i5v77o",
  "space.050": "_85i51b66",
  "space.075": "_85i512x7",
  "space.100": "_85i5u2gc",
  "space.150": "_85i5utpp",
  "space.200": "_85i5pxbi",
  "space.250": "_85i5v47k",
  "space.300": "_85i51ejb",
  "space.400": "_85i5xy5q",
  "space.500": "_85i51jfw",
  "space.600": "_85i5oahv",
  "space.800": "_85i5xncg",
  "space.1000": "_85i51epz"
};
var paddingInlineStartMap = {
  "space.0": "_bozgze3t",
  "space.025": "_bozgv77o",
  "space.050": "_bozg1b66",
  "space.075": "_bozg12x7",
  "space.100": "_bozgu2gc",
  "space.150": "_bozgutpp",
  "space.200": "_bozgpxbi",
  "space.250": "_bozgv47k",
  "space.300": "_bozg1ejb",
  "space.400": "_bozgxy5q",
  "space.500": "_bozg1jfw",
  "space.600": "_bozgoahv",
  "space.800": "_bozgxncg",
  "space.1000": "_bozg1epz"
};
var paddingInlineEndMap = {
  "space.0": "_y4tize3t",
  "space.025": "_y4tiv77o",
  "space.050": "_y4ti1b66",
  "space.075": "_y4ti12x7",
  "space.100": "_y4tiu2gc",
  "space.150": "_y4tiutpp",
  "space.200": "_y4tipxbi",
  "space.250": "_y4tiv47k",
  "space.300": "_y4ti1ejb",
  "space.400": "_y4tixy5q",
  "space.500": "_y4ti1jfw",
  "space.600": "_y4tioahv",
  "space.800": "_y4tixncg",
  "space.1000": "_y4ti1epz"
};
var Box = (0, import_react11.forwardRef)(
  function(_ref, ref) {
    var _ref$as = _ref.as, Component8 = _ref$as === void 0 ? "div" : _ref$as, children = _ref.children, backgroundColor = _ref.backgroundColor, padding = _ref.padding, _ref$paddingBlock = _ref.paddingBlock, paddingBlock = _ref$paddingBlock === void 0 ? padding : _ref$paddingBlock, _ref$paddingBlockStar = _ref.paddingBlockStart, paddingBlockStart = _ref$paddingBlockStar === void 0 ? paddingBlock : _ref$paddingBlockStar, _ref$paddingBlockEnd = _ref.paddingBlockEnd, paddingBlockEnd = _ref$paddingBlockEnd === void 0 ? paddingBlock : _ref$paddingBlockEnd, _ref$paddingInline = _ref.paddingInline, paddingInline = _ref$paddingInline === void 0 ? padding : _ref$paddingInline, _ref$paddingInlineSta = _ref.paddingInlineStart, paddingInlineStart = _ref$paddingInlineSta === void 0 ? paddingInline : _ref$paddingInlineSta, _ref$paddingInlineEnd = _ref.paddingInlineEnd, paddingInlineEnd = _ref$paddingInlineEnd === void 0 ? paddingInline : _ref$paddingInlineEnd, style = _ref.style, testId = _ref.testId, xcss = _ref.xcss, htmlAttributes = _objectWithoutProperties(_ref, _excluded);
    var _spreadClass = htmlAttributes.className, safeHtmlAttributes = _objectWithoutProperties(htmlAttributes, _excluded2);
    var node = React9.createElement(
      Component8,
      _extends({
        style,
        ref,
        className: ax(["_19itglyw _vchhusvi _r06hglyw", backgroundColor && backgroundColorMap[backgroundColor], backgroundColor && isSurfaceToken(backgroundColor) && setSurfaceTokenMap[backgroundColor], paddingBlockStart && paddingBlockStartMap[paddingBlockStart], paddingBlockEnd && paddingBlockEndMap[paddingBlockEnd], paddingInlineStart && paddingInlineStartMap[paddingInlineStart], paddingInlineEnd && paddingInlineEndMap[paddingInlineEnd], xcss])
      }, safeHtmlAttributes, {
        "data-testid": testId
      }),
      children
    );
    if (backgroundColor) {
      return React9.createElement(SurfaceContext.Provider, {
        value: backgroundColor
      }, node);
    }
    return node;
  }
  // @ts-ignore This typescript error has been surpessed while locally enrolling `@atlaskit/primitives` into Jira
  // The return type of `BoxComponent` does not match the return type of `forwardRef` in React 18
);
var box_default = Box;
function isSurfaceToken(backgroundColor) {
  return backgroundColor in setSurfaceTokenMap;
}

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/inline.js
init_extends();
init_objectWithoutProperties();
var React12 = __toESM(require_react());
init_runtime2();
var import_react15 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/inline.compiled.css";

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/css/dist/esm/index.js
var React10 = __toESM(require_react());
init_runtime2();
var _createStrictAPI2 = createStrictAPI();
var XCSSProp2 = _createStrictAPI2.XCSSProp;
var css3 = _createStrictAPI2.css;
var cssMap3 = _createStrictAPI2.cssMap;
var cx3 = _createStrictAPI2.cx;

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/flex.js
init_extends();
init_objectWithoutProperties();
var React11 = __toESM(require_react());
init_runtime2();
var import_react14 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/flex.compiled.css";
var _excluded3 = ["as", "role", "alignItems", "justifyContent", "gap", "columnGap", "rowGap", "children", "testId", "direction", "wrap", "xcss"];
var rowGapMap = {
  "space.0": "_1p57ze3t",
  "space.025": "_1p57v77o",
  "space.050": "_1p571b66",
  "space.075": "_1p5712x7",
  "space.100": "_1p57u2gc",
  "space.150": "_1p57utpp",
  "space.200": "_1p57pxbi",
  "space.250": "_1p57v47k",
  "space.300": "_1p571ejb",
  "space.400": "_1p57xy5q",
  "space.500": "_1p571jfw",
  "space.600": "_1p57oahv",
  "space.800": "_1p57xncg",
  "space.1000": "_1p571epz"
};
var columnGapMap = {
  "space.0": "_gy1pze3t",
  "space.025": "_gy1pv77o",
  "space.050": "_gy1p1b66",
  "space.075": "_gy1p12x7",
  "space.100": "_gy1pu2gc",
  "space.150": "_gy1putpp",
  "space.200": "_gy1ppxbi",
  "space.250": "_gy1pv47k",
  "space.300": "_gy1p1ejb",
  "space.400": "_gy1pxy5q",
  "space.500": "_gy1p1jfw",
  "space.600": "_gy1poahv",
  "space.800": "_gy1pxncg",
  "space.1000": "_gy1p1epz"
};
var justifyContentMap = {
  start: "_1bahv2br",
  center: "_1bah1h6o",
  end: "_1bahh9n0",
  "space-between": "_1bah1yb4",
  "space-around": "_1bah1b1v",
  "space-evenly": "_1bahitcz",
  stretch: "_1bah1fhb"
};
var flexDirectionMap = {
  column: "_2lx21bp4",
  row: "_2lx2vrvc"
};
var flexWrapMap = {
  wrap: "_1n261g80",
  nowrap: "_1n261q9c"
};
var alignItemsMap = {
  start: "_4cvrv2br",
  center: "_4cvr1h6o",
  baseline: "_4cvr1q9y",
  end: "_4cvrh9n0",
  stretch: "_4cvr1fhb"
};
var styles = {
  root: "_1e0c1txw _vchhusvi"
};
var Flex = (0, import_react14.memo)((0, import_react14.forwardRef)(function(_ref, ref) {
  var _ref$as = _ref.as, Component8 = _ref$as === void 0 ? "div" : _ref$as, role = _ref.role, alignItems = _ref.alignItems, justifyContent = _ref.justifyContent, gap = _ref.gap, columnGap = _ref.columnGap, rowGap = _ref.rowGap, children = _ref.children, testId = _ref.testId, direction = _ref.direction, wrap = _ref.wrap, xcss = _ref.xcss, ariaAttributes = _objectWithoutProperties(_ref, _excluded3);
  return React11.createElement(Component8, _extends({}, ariaAttributes, {
    role,
    className: ax([styles.root, gap && columnGapMap[gap], columnGap && columnGapMap[columnGap], gap && rowGapMap[gap], rowGap && rowGapMap[rowGap], alignItems && alignItemsMap[alignItems], direction && flexDirectionMap[direction], justifyContent && justifyContentMap[justifyContent], wrap && flexWrapMap[wrap], xcss]),
    "data-testid": testId,
    ref
  }), children);
}));
Flex.displayName = "Flex";
var flex_default = Flex;

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/inline.js
var _excluded4 = ["as", "alignInline", "alignBlock", "shouldWrap", "spread", "grow", "space", "rowSpace", "separator", "xcss", "testId", "role", "children"];
var styles2 = {
  separator: "_1mouze3t _195g1i6y _syazjjyb _lcxvglyw _uiztglyw",
  hug: "_16jlidpf",
  fill: "_1bsb1osq _16jlkb7n"
};
var Separator = function Separator2(_ref) {
  var children = _ref.children;
  return React12.createElement("span", {
    className: ax([styles2.separator])
  }, children);
};
var Inline = (0, import_react15.memo)((0, import_react15.forwardRef)(function(_ref2, ref) {
  var as = _ref2.as, alignInline = _ref2.alignInline, _ref2$alignBlock = _ref2.alignBlock, alignItems = _ref2$alignBlock === void 0 ? "start" : _ref2$alignBlock, _ref2$shouldWrap = _ref2.shouldWrap, shouldWrap = _ref2$shouldWrap === void 0 ? false : _ref2$shouldWrap, spread = _ref2.spread, grow = _ref2.grow, space = _ref2.space, rowSpace = _ref2.rowSpace, separator = _ref2.separator, xcss = _ref2.xcss, testId = _ref2.testId, role = _ref2.role, rawChildren = _ref2.children, ariaAttributes = _objectWithoutProperties(_ref2, _excluded4);
  var separatorComponent = typeof separator === "string" ? React12.createElement(Separator, null, separator) : separator;
  var children = separatorComponent ? import_react15.Children.toArray(rawChildren).filter(Boolean).map(function(child, index) {
    return React12.createElement(import_react15.Fragment, {
      key: index
    }, separator && index > 0 ? separatorComponent : null, child);
  }) : rawChildren;
  return React12.createElement(flex_default, _extends({}, ariaAttributes, {
    as,
    role,
    alignItems,
    justifyContent: spread || alignInline,
    direction: "row",
    gap: space,
    rowGap: rowSpace,
    wrap: shouldWrap ? "wrap" : void 0,
    xcss: cx3(grow === "hug" && styles2.hug, grow === "fill" && styles2.fill, xcss),
    testId,
    ref
  }), children);
}));
Inline.displayName = "Inline";
var inline_default = Inline;

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/stack.js
init_extends();
init_objectWithoutProperties();
var React13 = __toESM(require_react());
init_runtime2();
var import_react16 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/stack.compiled.css";
var _excluded5 = ["as", "alignInline", "alignBlock", "spread", "grow", "space", "children", "testId", "xcss", "role"];
var styles3 = {
  hug: "_16jlidpf",
  fill: "_1bsb1osq _16jlkb7n"
};
var Stack = (0, import_react16.memo)((0, import_react16.forwardRef)(function(_ref, ref) {
  var as = _ref.as, alignItems = _ref.alignInline, _ref$alignBlock = _ref.alignBlock, alignBlock = _ref$alignBlock === void 0 ? "stretch" : _ref$alignBlock, spread = _ref.spread, grow = _ref.grow, space = _ref.space, children = _ref.children, testId = _ref.testId, xcss = _ref.xcss, role = _ref.role, ariaAttributes = _objectWithoutProperties(_ref, _excluded5);
  return React13.createElement(flex_default, _extends({}, ariaAttributes, {
    as,
    role,
    gap: space,
    direction: "column",
    alignItems,
    justifyContent: spread || alignBlock,
    xcss: cx3(grow === "hug" && styles3.hug, grow === "fill" && styles3.fill, xcss),
    testId,
    ref
  }), children);
}));
Stack.displayName = "Stack";

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/grid.js
var React14 = __toESM(require_react());
init_runtime2();
var import_react17 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/grid.compiled.css";
var rowGapMap2 = {
  "space.0": "_1p57ze3t",
  "space.025": "_1p57v77o",
  "space.050": "_1p571b66",
  "space.075": "_1p5712x7",
  "space.100": "_1p57u2gc",
  "space.150": "_1p57utpp",
  "space.200": "_1p57pxbi",
  "space.250": "_1p57v47k",
  "space.300": "_1p571ejb",
  "space.400": "_1p57xy5q",
  "space.500": "_1p571jfw",
  "space.600": "_1p57oahv",
  "space.800": "_1p57xncg",
  "space.1000": "_1p571epz"
};
var columnGapMap2 = {
  "space.0": "_gy1pze3t",
  "space.025": "_gy1pv77o",
  "space.050": "_gy1p1b66",
  "space.075": "_gy1p12x7",
  "space.100": "_gy1pu2gc",
  "space.150": "_gy1putpp",
  "space.200": "_gy1ppxbi",
  "space.250": "_gy1pv47k",
  "space.300": "_gy1p1ejb",
  "space.400": "_gy1pxy5q",
  "space.500": "_gy1p1jfw",
  "space.600": "_gy1poahv",
  "space.800": "_gy1pxncg",
  "space.1000": "_gy1p1epz"
};
var justifyContentMap2 = {
  start: "_1bahv2br",
  center: "_1bah1h6o",
  end: "_1bahh9n0",
  "space-between": "_1bah1yb4",
  "space-around": "_1bah1b1v",
  "space-evenly": "_1bahitcz",
  stretch: "_1bah1fhb"
};
var alignContentMap = {
  start: "_ae4vv2br",
  center: "_ae4v1h6o",
  end: "_ae4vh9n0",
  "space-between": "_ae4v1yb4",
  "space-around": "_ae4v1b1v",
  "space-evenly": "_ae4vitcz",
  stretch: "_ae4v1fhb"
};
var alignItemsMap2 = {
  start: "_4cvrv2br",
  center: "_4cvr1h6o",
  baseline: "_4cvr1q9y",
  end: "_4cvrh9n0",
  stretch: "_4cvr1fhb"
};
var baseStyles = {
  root: "_1e0c11p5 _vchhusvi"
};
var gridAutoFlowMap = {
  row: "_wij2vrvc",
  column: "_wij21bp4",
  dense: "_wij218l3",
  "row dense": "_wij2j5tq",
  "column dense": "_wij2adhi"
};
var Grid = (0, import_react17.memo)((0, import_react17.forwardRef)(function(_ref, ref) {
  var as = _ref.as, alignItems = _ref.alignItems, alignContent = _ref.alignContent, justifyContent = _ref.justifyContent, gap = _ref.gap, columnGap = _ref.columnGap, rowGap = _ref.rowGap, children = _ref.children, id = _ref.id, role = _ref.role, testId = _ref.testId, autoFlow = _ref.autoFlow, xcss = _ref.xcss;
  var Component8 = as || "div";
  return React14.createElement(Component8, {
    id,
    role,
    className: ax([baseStyles.root, gap && columnGapMap2[gap], columnGap && columnGapMap2[columnGap], gap && rowGapMap2[gap], rowGap && rowGapMap2[rowGap], alignItems && alignItemsMap2[alignItems], alignContent && alignContentMap[alignContent], justifyContent && justifyContentMap2[justifyContent], autoFlow && gridAutoFlowMap[autoFlow], xcss]),
    "data-testid": testId,
    ref
  }, children);
}));
Grid.displayName = "Grid";

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/bleed.js
init_runtime2();
var import_react18 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/bleed.compiled.css";
var styles4 = {
  root: "_vchhusvi",
  "inline.space.025": "_195g4pxn",
  "inline.space.050": "_195ggp71",
  "inline.space.100": "_195gtdkl",
  "inline.space.150": "_195gkqjj",
  "inline.space.200": "_195g1e8l",
  "block.space.025": "_1mou4pxn",
  "block.space.050": "_1mougp71",
  "block.space.100": "_1moutdkl",
  "block.space.150": "_1moukqjj",
  "block.space.200": "_1mou1e8l"
};
var Bleed = import_react18.default.memo(function(_ref) {
  var children = _ref.children, testId = _ref.testId, inline = _ref.inline, block = _ref.block, all = _ref.all, xcss = _ref.xcss;
  return import_react18.default.createElement("div", {
    className: ax([styles4.root, all && styles4["inline.".concat(all)], inline && styles4["inline.".concat(inline)], all && styles4["block.".concat(all)], block && styles4["block.".concat(block)], xcss]),
    "data-testid": testId
  }, children);
});
Bleed.displayName = "Bleed";

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/text.js
var React16 = __toESM(require_react());
init_runtime2();
var import_react20 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/text.compiled.css";

// node_modules/tiny-invariant/dist/esm/tiny-invariant.js
var isProduction = false;
var prefix = "Invariant failed";
function invariant(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction) {
    throw new Error(prefix);
  }
  var provided = typeof message === "function" ? message() : message;
  var value = provided ? "".concat(prefix, ": ").concat(provided) : prefix;
  throw new Error(value);
}

// node_modules/@atlaskit/primitives/dist/esm/utils/has-text-ancestor-context.js
var import_react19 = __toESM(require_react());
var HasTextAncestorContext = (0, import_react19.createContext)(false);
var useHasTextAncestor = function useHasTextAncestor2() {
  return (0, import_react19.useContext)(HasTextAncestorContext);
};
var HasTextAncestorProvider = HasTextAncestorContext.Provider;

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/text.js
var asAllowlist = ["span", "p", "strong", "em"];
var useColor = function useColor2(colorProp, hasTextAncestor) {
  var surface = useSurface();
  if (colorProp === "inherit") {
    return void 0;
  }
  if (colorProp) {
    return colorProp;
  }
  if (hasTextAncestor) {
    return void 0;
  }
  if (inverseColorMap.hasOwnProperty(surface)) {
    return inverseColorMap[surface];
  }
  return "color.text";
};
var styles5 = {
  root: "_19pkidpf _2hwxidpf _otyridpf _18u0idpf _1i4qfg65",
  "as.strong": "_k48pmoej",
  "as.em": "_zg8l1m30",
  "textAlign.center": "_y3gn1h6o",
  "textAlign.end": "_y3gnh9n0",
  "textAlign.start": "_y3gnv2br",
  truncation: "_1reo15vq _18m915vq _1e0ccj1k _sudp1e54",
  breakAll: "_1nmz9jpi"
};
var fontSizeMap = {
  medium: "_11c82smr",
  UNSAFE_small: "_11c8dcr7",
  large: "_11c81ixg",
  small: "_11c81o8v"
};
var fontWeightMap = {
  bold: "_k48pmoej",
  medium: "_k48p1wq8",
  regular: "_k48pi7a9",
  semibold: "_k48p1pd9"
};
var textColorMap = {
  "color.text": "_syaz1fxt",
  "color.text.accent.lime": "_syaz1tco",
  "color.text.accent.lime.bolder": "_syaz1ik3",
  "color.text.accent.red": "_syaz9lu1",
  "color.text.accent.red.bolder": "_syazhwvp",
  "color.text.accent.orange": "_syaz1q28",
  "color.text.accent.orange.bolder": "_syaz1vps",
  "color.text.accent.yellow": "_syazfb2s",
  "color.text.accent.yellow.bolder": "_syazekll",
  "color.text.accent.green": "_syazh55r",
  "color.text.accent.green.bolder": "_syaz1y78",
  "color.text.accent.teal": "_syaz17qg",
  "color.text.accent.teal.bolder": "_syaz12v7",
  "color.text.accent.blue": "_syazpnps",
  "color.text.accent.blue.bolder": "_syazsc1o",
  "color.text.accent.purple": "_syaz10m5",
  "color.text.accent.purple.bolder": "_syaz2ibx",
  "color.text.accent.magenta": "_syaz1s8m",
  "color.text.accent.magenta.bolder": "_syaz1qur",
  "color.text.accent.gray": "_syaz1dyx",
  "color.text.accent.gray.bolder": "_syaz1x9z",
  "color.text.disabled": "_syaz1lh4",
  "color.text.inverse": "_syaz15cr",
  "color.text.selected": "_syazaqb7",
  "color.text.brand": "_syaz1e6v",
  "color.text.danger": "_syaz1tmw",
  "color.text.warning": "_syazwx40",
  "color.text.warning.inverse": "_syazal3n",
  "color.text.success": "_syazy73q",
  "color.text.discovery": "_syazzjem",
  "color.text.information": "_syaze0os",
  "color.text.subtlest": "_syaz131l",
  "color.text.subtle": "_syaz1gjq",
  "color.link": "_syaz14q2",
  "color.link.pressed": "_syaz16c2",
  "color.link.visited": "_syazw7te",
  "color.link.visited.pressed": "_syazg3x0"
};
var inverseColorMap = {
  "color.background.neutral.bold": "color.text.inverse",
  "color.background.neutral.bold.hovered": "color.text.inverse",
  "color.background.neutral.bold.pressed": "color.text.inverse",
  "color.background.selected.bold": "color.text.inverse",
  "color.background.selected.bold.hovered": "color.text.inverse",
  "color.background.selected.bold.pressed": "color.text.inverse",
  "color.background.brand.bold": "color.text.inverse",
  "color.background.brand.bold.hovered": "color.text.inverse",
  "color.background.brand.bold.pressed": "color.text.inverse",
  "color.background.brand.boldest": "color.text.inverse",
  "color.background.brand.boldest.hovered": "color.text.inverse",
  "color.background.brand.boldest.pressed": "color.text.inverse",
  "color.background.danger.bold": "color.text.inverse",
  "color.background.danger.bold.hovered": "color.text.inverse",
  "color.background.danger.bold.pressed": "color.text.inverse",
  "color.background.warning.bold": "color.text.warning.inverse",
  "color.background.warning.bold.hovered": "color.text.warning.inverse",
  "color.background.warning.bold.pressed": "color.text.warning.inverse",
  "color.background.success.bold": "color.text.inverse",
  "color.background.success.bold.hovered": "color.text.inverse",
  "color.background.success.bold.pressed": "color.text.inverse",
  "color.background.discovery.bold": "color.text.inverse",
  "color.background.discovery.bold.hovered": "color.text.inverse",
  "color.background.discovery.bold.pressed": "color.text.inverse",
  "color.background.information.bold": "color.text.inverse",
  "color.background.information.bold.hovered": "color.text.inverse",
  "color.background.information.bold.pressed": "color.text.inverse"
};
var Text = (0, import_react20.forwardRef)(function(_ref, ref) {
  var _ref$as = _ref.as, Component8 = _ref$as === void 0 ? "span" : _ref$as, colorProp = _ref.color, align = _ref.align, testId = _ref.testId, id = _ref.id, size = _ref.size, weight = _ref.weight, maxLines = _ref.maxLines, xcss = _ref.xcss, children = _ref.children;
  invariant(asAllowlist.includes(Component8), '@atlaskit/primitives: Text received an invalid "as" value of "'.concat(Component8, '"'));
  var hasTextAncestor = useHasTextAncestor();
  var color = useColor(colorProp, hasTextAncestor);
  if (!size && !hasTextAncestor) {
    size = "medium";
  }
  var component = React16.createElement(Component8, {
    id,
    className: ax([styles5.root, size && fontSizeMap[size], color && textColorMap[color], maxLines && styles5.truncation, maxLines === 1 && styles5.breakAll, align && styles5["textAlign.".concat(align)], weight && fontWeightMap[weight], Component8 === "em" && styles5["as.em"], Component8 === "strong" && styles5["as.strong"], xcss]),
    style: {
      WebkitLineClamp: maxLines
    },
    "data-testid": testId,
    ref
  }, children);
  if (hasTextAncestor) {
    return component;
  }
  return React16.createElement(HasTextAncestorProvider, {
    value: true
  }, component);
});

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/metric-text.js
var React17 = __toESM(require_react());
init_runtime2();
var import_react21 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/metric-text.compiled.css";
var asAllowlist2 = ["span", "div"];
var styles6 = {
  root: "_19pkidpf _2hwxidpf _otyridpf _18u0idpf",
  "textAlign.center": "_y3gn1h6o",
  "textAlign.end": "_y3gnh9n0",
  "textAlign.start": "_y3gnv2br"
};
var fontSizeMap2 = {
  small: "_11c8h56o",
  medium: "_11c81lu7",
  large: "_11c81r7r"
};
var MetricText = (0, import_react21.forwardRef)(function(_ref, ref) {
  var _ref$as = _ref.as, Component8 = _ref$as === void 0 ? "span" : _ref$as, align = _ref.align, testId = _ref.testId, id = _ref.id, size = _ref.size, children = _ref.children;
  invariant(asAllowlist2.includes(Component8), '@atlaskit/primitives: MetricText received an invalid "as" value of "'.concat(Component8, '"'));
  var component = React17.createElement(Component8, {
    ref,
    "data-testid": testId,
    id,
    className: ax([styles6.root, size && fontSizeMap2[size], align && styles6["textAlign.".concat(align)]])
  }, children);
  return component;
});

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/pressable.js
init_extends();
init_objectWithoutProperties();
var React31 = __toESM(require_react());
init_runtime2();
var import_react44 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/pressable.compiled.css";

// node_modules/@atlaskit/analytics-next/dist/esm/events/AnalyticsEvent.js
init_typeof();
init_classCallCheck();
init_createClass();
init_defineProperty();
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var AnalyticsEvent = function() {
  function AnalyticsEvent2(props) {
    var _this = this;
    _classCallCheck(this, AnalyticsEvent2);
    _defineProperty(this, "_isAnalyticsEvent", true);
    _defineProperty(this, "clone", function() {
      var payload = _objectSpread({}, _this.payload);
      return new AnalyticsEvent2({
        payload
      });
    });
    this.payload = props.payload;
  }
  return _createClass(AnalyticsEvent2, [{
    key: "update",
    value: function update(updater) {
      if (typeof updater === "function") {
        this.payload = updater(this.payload);
      }
      if (_typeof(updater) === "object") {
        this.payload = _objectSpread(_objectSpread({}, this.payload), updater);
      }
      return this;
    }
  }]);
}();

// node_modules/@atlaskit/analytics-next/dist/esm/events/UIAnalyticsEvent.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_get();
init_inherits();
init_defineProperty();
function _callSuper(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
function _superPropGet(t, o, e, r) {
  var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e);
  return 2 & r && "function" == typeof p ? function(t2) {
    return p.apply(e, t2);
  } : p;
}
var UIAnalyticsEvent = function(_AnalyticsEvent) {
  function UIAnalyticsEvent2(props) {
    var _this;
    _classCallCheck(this, UIAnalyticsEvent2);
    _this = _callSuper(this, UIAnalyticsEvent2, [props]);
    _defineProperty(_this, "_isUIAnalyticsEvent", true);
    _defineProperty(_this, "clone", function() {
      if (_this.hasFired) {
        if (!process.env.CI) {
          console.warn("Cannot clone an event after it's been fired.");
        }
        return null;
      }
      var context = _toConsumableArray(_this.context);
      var handlers = _toConsumableArray(_this.handlers);
      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new UIAnalyticsEvent2({
        context,
        handlers,
        payload
      });
    });
    _defineProperty(_this, "fire", function(channel) {
      if (_this.hasFired) {
        if (!process.env.CI) {
          console.warn("Cannot fire an event twice.");
        }
        return;
      }
      _this.handlers.forEach(function(handler) {
        return handler(_this, channel);
      });
      _this.hasFired = true;
    });
    _this.context = props.context || [];
    _this.handlers = props.handlers || [];
    _this.hasFired = false;
    return _this;
  }
  _inherits(UIAnalyticsEvent2, _AnalyticsEvent);
  return _createClass(UIAnalyticsEvent2, [{
    key: "update",
    value: function update(updater) {
      if (this.hasFired) {
        if (!process.env.CI) {
          console.warn("Cannot update an event after it's been fired.");
        }
        return this;
      }
      return _superPropGet(UIAnalyticsEvent2, "update", this, 3)([updater]);
    }
  }]);
}(AnalyticsEvent);

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsListener/index.js
var import_react27 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/analytics-next/dist/esm/utils/isModernContextEnabledEnv.js
var _process$env;
var isModernContextEnabledEnv_default = typeof process !== "undefined" && process !== null && ((_process$env = process.env) === null || _process$env === void 0 ? void 0 : _process$env["ANALYTICS_NEXT_MODERN_CONTEXT"]);

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsListener/LegacyAnalyticsListener.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react23 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/@atlaskit/analytics-next-stable-react-context/dist/esm/context.js
var import_react22 = __toESM(require_react());
var AnalyticsNextContext = (0, import_react22.createContext)({
  getAtlaskitAnalyticsContext: function() {
    return [];
  },
  getAtlaskitAnalyticsEventHandlers: function() {
    return [];
  }
});
var context_default = AnalyticsNextContext;

// node_modules/@atlaskit/analytics-next-stable-react-context/dist/esm/index.js
var esm_default = context_default;

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsListener/LegacyAnalyticsListener.js
function _callSuper2(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct2() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct2() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct2 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var ContextTypes = {
  getAtlaskitAnalyticsEventHandlers: import_prop_types.default.func,
  getAtlaskitAnalyticsContext: import_prop_types.default.func
};
var noop = function noop2() {
  return [];
};
var AnalyticsListener = function(_Component) {
  function AnalyticsListener2(props) {
    var _this;
    _classCallCheck(this, AnalyticsListener2);
    _this = _callSuper2(this, AnalyticsListener2, [props]);
    _defineProperty(_this, "getChildContext", function() {
      return {
        getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers,
        getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext
      };
    });
    _defineProperty(_this, "getAnalyticsEventHandlers", function() {
      var _this$props = _this.props, channel = _this$props.channel, onEvent = _this$props.onEvent;
      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsEventHandlers, getAtlaskitAnalyticsEventHandlers = _this$context$getAtla === void 0 ? noop : _this$context$getAtla;
      var handler = function handler2(event, eventChannel) {
        if (channel === "*" || channel === eventChannel) {
          onEvent(event, eventChannel);
        }
      };
      return [handler].concat(_toConsumableArray(getAtlaskitAnalyticsEventHandlers()));
    });
    _defineProperty(_this, "getAtlaskitAnalyticsContext", function() {
      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsContext, getAtlaskitAnalyticsContext = _this$context$getAtla2 === void 0 ? noop : _this$context$getAtla2;
      return getAtlaskitAnalyticsContext();
    });
    _this.contextValue = {
      getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers
    };
    return _this;
  }
  _inherits(AnalyticsListener2, _Component);
  return _createClass(AnalyticsListener2, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return import_react23.default.createElement(esm_default.Provider, {
        value: this.contextValue
      }, children);
    }
  }]);
}(import_react23.Component);
_defineProperty(AnalyticsListener, "contextTypes", ContextTypes);
_defineProperty(AnalyticsListener, "childContextTypes", ContextTypes);

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsListener/ModernAnalyticsListener.js
var import_react26 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/useAnalyticsContext.js
var import_react24 = __toESM(require_react());
var useAnalyticsContext = function useAnalyticsContext2() {
  return (0, import_react24.useContext)(esm_default);
};

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/useTrackedRef.js
var import_react25 = __toESM(require_react());
var useTrackedRef = function useTrackedRef2(value) {
  var ref = (0, import_react25.useRef)(value);
  ref.current = value;
  return ref;
};

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsContext/index.js
var import_react30 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsContext/LegacyAnalyticsContext.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react28 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());
function _callSuper3(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct3() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct3() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct3 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var ContextTypes2 = {
  getAtlaskitAnalyticsContext: import_prop_types2.default.func,
  getAtlaskitAnalyticsEventHandlers: import_prop_types2.default.func
};
var noop3 = function noop4() {
  return [];
};
var AnalyticsContext = function(_Component) {
  function AnalyticsContext4(props) {
    var _this;
    _classCallCheck(this, AnalyticsContext4);
    _this = _callSuper3(this, AnalyticsContext4, [props]);
    _defineProperty(_this, "getChildContext", function() {
      return {
        getAtlaskitAnalyticsContext: _this.getAnalyticsContext
      };
    });
    _defineProperty(_this, "getAnalyticsContext", function() {
      var data = _this.props.data;
      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsContext, getAtlaskitAnalyticsContext = _this$context$getAtla === void 0 ? noop3 : _this$context$getAtla;
      return [].concat(_toConsumableArray(getAtlaskitAnalyticsContext()), [data]);
    });
    _defineProperty(_this, "getAnalyticsEventHandlers", function() {
      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsEventHandlers, getAtlaskitAnalyticsEventHandlers = _this$context$getAtla2 === void 0 ? noop3 : _this$context$getAtla2;
      return getAtlaskitAnalyticsEventHandlers();
    });
    _this.contextValue = {
      getAtlaskitAnalyticsContext: _this.getAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers
    };
    return _this;
  }
  _inherits(AnalyticsContext4, _Component);
  return _createClass(AnalyticsContext4, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return import_react28.default.createElement(esm_default.Provider, {
        value: this.contextValue
      }, children);
    }
  }]);
}(import_react28.Component);
_defineProperty(AnalyticsContext, "contextTypes", ContextTypes2);
_defineProperty(AnalyticsContext, "childContextTypes", ContextTypes2);
var LegacyAnalyticsContext_default = AnalyticsContext;

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsContext/ModernAnalyticsContext.js
var import_react29 = __toESM(require_react());
var AnalyticsContext2 = function AnalyticsContext3(_ref) {
  var data = _ref.data, children = _ref.children;
  var dataRef = useTrackedRef(data);
  var _useAnalyticsContext = useAnalyticsContext(), getAtlaskitAnalyticsEventHandlers = _useAnalyticsContext.getAtlaskitAnalyticsEventHandlers, getOriginalAnalyticsContext = _useAnalyticsContext.getAtlaskitAnalyticsContext;
  var getAtlaskitAnalyticsContext = (0, import_react29.useCallback)(function() {
    return [].concat(_toConsumableArray(getOriginalAnalyticsContext()), [dataRef.current]);
  }, [getOriginalAnalyticsContext, dataRef]);
  var value = (0, import_react29.useMemo)(function() {
    return {
      getAtlaskitAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers
    };
  }, [getAtlaskitAnalyticsContext, getAtlaskitAnalyticsEventHandlers]);
  return import_react29.default.createElement(esm_default.Provider, {
    value
  }, children);
};
var ModernAnalyticsContext_default = AnalyticsContext2;

// node_modules/@atlaskit/analytics-next/dist/esm/hocs/withAnalyticsContext.js
init_extends();
init_defineProperty();
init_objectWithoutProperties();
var import_react31 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsErrorBoundary.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react32 = __toESM(require_react());
init_esm();
function _callSuper4(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct4() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct4() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct4 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var AnalyticsErrorBoundary = function(_Component) {
  function AnalyticsErrorBoundary2(props) {
    var _this;
    _classCallCheck(this, AnalyticsErrorBoundary2);
    _this = _callSuper4(this, AnalyticsErrorBoundary2, [props]);
    _this.state = {
      hasError: false
    };
    return _this;
  }
  _inherits(AnalyticsErrorBoundary2, _Component);
  return _createClass(AnalyticsErrorBoundary2, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, info) {
      var onError = this.props.onError;
      onError && onError(error, info);
      this.setState({
        hasError: true
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, data = _this$props.data, children = _this$props.children, ErrorComponent = _this$props.ErrorComponent;
      var hasError = this.state.hasError;
      var isModernContext = isModernContextEnabledEnv_default || fg("analytics-next-use-modern-context_jira");
      if (hasError) {
        if (ErrorComponent) {
          if (isModernContext) {
            return import_react32.default.createElement(ModernAnalyticsContext_default, {
              data
            }, import_react32.default.createElement(ErrorComponent, null));
          }
          return import_react32.default.createElement(LegacyAnalyticsContext_default, {
            data
          }, import_react32.default.createElement(ErrorComponent, null));
        }
        return null;
      }
      if (isModernContext) {
        return import_react32.default.createElement(ModernAnalyticsContext_default, {
          data
        }, children);
      }
      return import_react32.default.createElement(LegacyAnalyticsContext_default, {
        data
      }, children);
    }
  }]);
}(import_react32.Component);

// node_modules/@atlaskit/analytics-next/dist/esm/hocs/withAnalyticsEvents.js
init_extends();
var import_react35 = __toESM(require_react());

// node_modules/use-memo-one/dist/use-memo-one.esm.js
var import_react33 = __toESM(require_react());
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (newInputs[i] !== lastInputs[i]) {
      return false;
    }
  }
  return true;
}
function useMemoOne(getResult, inputs) {
  var initial = (0, import_react33.useState)(function() {
    return {
      inputs,
      result: getResult()
    };
  })[0];
  var isFirstRun = (0, import_react33.useRef)(true);
  var committed = (0, import_react33.useRef)(initial);
  var useCache2 = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual(inputs, committed.current.inputs));
  var cache2 = useCache2 ? committed.current : {
    inputs,
    result: getResult()
  };
  (0, import_react33.useEffect)(function() {
    isFirstRun.current = false;
    committed.current = cache2;
  }, [cache2]);
  return cache2.result;
}
function useCallbackOne(callback, inputs) {
  return useMemoOne(function() {
    return callback;
  }, inputs);
}

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/useAnalyticsEvents.js
function useAnalyticsEvents() {
  var analyticsContext = useAnalyticsContext();
  var createAnalyticsEvent = useCallbackOne(function(payload) {
    return new UIAnalyticsEvent({
      context: analyticsContext.getAtlaskitAnalyticsContext(),
      handlers: analyticsContext.getAtlaskitAnalyticsEventHandlers(),
      payload
    });
  }, [analyticsContext]);
  return {
    createAnalyticsEvent
  };
}

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/usePatchedProps.js
init_defineProperty();
init_typeof();
var import_react34 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/useCallbackWithAnalytics.js
var import_react36 = __toESM(require_react());

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/usePlatformLeafEventHandler.js
init_defineProperty();
var import_react37 = __toESM(require_react());
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function usePlatformLeafEventHandler(_ref) {
  var fn = _ref.fn, action = _ref.action, componentName = _ref.componentName, actionSubject = _ref.actionSubject, packageName = _ref.packageName, packageVersion = _ref.packageVersion, analyticsData = _ref.analyticsData;
  var _useAnalyticsEvents = useAnalyticsEvents(), createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var dataRef = useTrackedRef(analyticsData);
  var fnRef = useTrackedRef(fn);
  var handler = (0, import_react37.useCallback)(function(value) {
    var analyticsEvent = createAnalyticsEvent({
      action,
      actionSubject: actionSubject || componentName,
      attributes: {
        componentName,
        packageName,
        packageVersion
      }
    });
    var context = _objectSpread2({
      componentName,
      packageName,
      packageVersion
    }, dataRef.current);
    analyticsEvent.context.push(context);
    var clone = analyticsEvent.clone();
    if (clone) {
      clone.fire("atlaskit");
    }
    fnRef.current(value, analyticsEvent);
  }, [
    // These are strings and won't change
    action,
    componentName,
    actionSubject,
    packageName,
    packageVersion,
    // This function is memoized in the context
    createAnalyticsEvent,
    // these are a stable ref because of the useTrackedRef hook
    dataRef,
    fnRef
  ]);
  return handler;
}

// node_modules/@atlaskit/analytics-next/dist/esm/hooks/usePlatformLeafSyntheticEventHandler.js
init_defineProperty();
var import_react38 = __toESM(require_react());
function ownKeys3(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function usePlatformLeafSyntheticEventHandler(_ref) {
  var fn = _ref.fn, action = _ref.action, componentName = _ref.componentName, packageName = _ref.packageName, packageVersion = _ref.packageVersion, analyticsData = _ref.analyticsData;
  var _useAnalyticsEvents = useAnalyticsEvents(), createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var dataRef = useTrackedRef(analyticsData);
  var fnRef = useTrackedRef(fn);
  var handler = (0, import_react38.useCallback)(function() {
    var analyticsEvent = createAnalyticsEvent({
      action,
      actionSubject: componentName,
      attributes: {
        componentName,
        packageName,
        packageVersion
      }
    });
    var context = _objectSpread3({
      componentName,
      packageName,
      packageVersion
    }, dataRef.current);
    analyticsEvent.context.push(context);
    var clone = analyticsEvent.clone();
    if (clone) {
      clone.fire("atlaskit");
    }
    fnRef.current(analyticsEvent);
  }, [
    // These are strings and won't change
    action,
    componentName,
    packageName,
    packageVersion,
    // This function is memoized in the context
    createAnalyticsEvent,
    // these are a stable ref because of the useTrackedRef hook
    dataRef,
    fnRef
  ]);
  return handler;
}

// node_modules/@atlaskit/analytics-next/dist/esm/utils/cleanProps.js
init_objectWithoutProperties();

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsDecorator/index.js
init_typeof();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react39 = __toESM(require_react());
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/@atlaskit/analytics-next/dist/esm/components/matchEvent/index.js
var ENDS_WITH_DOT = /\.$/;
function matchEvent(matcher, name) {
  if (matcher === "*" || name === void 0) {
    return true;
  }
  if (typeof matcher === "string") {
    if (ENDS_WITH_DOT.test(matcher)) {
      return name.substr(0, matcher.length) === matcher;
    }
    return name === matcher;
  }
  if (typeof matcher === "function") {
    return matcher(name);
  }
  return matcher.test(name);
}
var matchEvent_default = matchEvent;

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsDecorator/index.js
function ownKeys4(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread4(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys4(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys4(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _callSuper5(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct5() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct5() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct5 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var ContextTypes3 = {
  onAnalyticsEvent: import_prop_types3.default.func,
  getParentAnalyticsData: import_prop_types3.default.func
};
var AnalyticsDecorator = function(_Component) {
  function AnalyticsDecorator2() {
    var _this;
    _classCallCheck(this, AnalyticsDecorator2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper5(this, AnalyticsDecorator2, [].concat(args));
    _defineProperty(_this, "getDecoratedAnalyticsData", function(name, srcData, isPrivate) {
      var _this$props = _this.props, data = _this$props.data, getData = _this$props.getData, match = _this$props.match, matchPrivate = _this$props.matchPrivate;
      var decoratedData = _objectSpread4({}, srcData);
      if (matchPrivate === isPrivate && matchEvent_default(match, name)) {
        if (_typeof(data) === "object") {
          Object.assign(decoratedData, data);
        }
        if (typeof getData === "function") {
          Object.assign(decoratedData, getData(name, decoratedData));
        }
      }
      return decoratedData;
    });
    _defineProperty(_this, "onAnalyticsEvent", function(name, srcData, isPrivate) {
      var _ref = _this.context, onAnalyticsEvent = _ref.onAnalyticsEvent;
      if (typeof onAnalyticsEvent !== "function") {
        return;
      }
      var decoratedData = _this.getDecoratedAnalyticsData(name, srcData, isPrivate);
      onAnalyticsEvent(name, decoratedData, isPrivate);
    });
    _defineProperty(_this, "getParentAnalyticsData", function(name, isPrivate) {
      var parentData = _this.getDecoratedAnalyticsData(name, {}, isPrivate);
      var _ref2 = _this.context, getParentAnalyticsData = _ref2.getParentAnalyticsData;
      if (typeof getParentAnalyticsData === "function") {
        Object.assign(parentData, getParentAnalyticsData(name, isPrivate));
      }
      return parentData;
    });
    return _this;
  }
  _inherits(AnalyticsDecorator2, _Component);
  return _createClass(AnalyticsDecorator2, [{
    key: "getChildContext",
    value: function getChildContext() {
      return {
        onAnalyticsEvent: this.onAnalyticsEvent,
        getParentAnalyticsData: this.getParentAnalyticsData
      };
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.props.children;
      return import_react39.default.Children.only(children);
    }
  }]);
}(import_react39.Component);
_defineProperty(AnalyticsDecorator, "defaultProps", {
  match: "*",
  matchPrivate: false
});
_defineProperty(AnalyticsDecorator, "contextTypes", ContextTypes3);
_defineProperty(AnalyticsDecorator, "childContextTypes", ContextTypes3);

// node_modules/@atlaskit/analytics-next/dist/esm/components/AnalyticsDelegate/index.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react40 = __toESM(require_react());
var import_prop_types4 = __toESM(require_prop_types());
function ownKeys5(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread5(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys5(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys5(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _callSuper6(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct6() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct6() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct6 = function _isNativeReflectConstruct7() {
    return !!t;
  })();
}
var ContextTypes4 = {
  onAnalyticsEvent: import_prop_types4.default.func
};
var AnalyticsDelegate = function(_Component) {
  function AnalyticsDelegate2() {
    var _this;
    _classCallCheck(this, AnalyticsDelegate2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper6(this, AnalyticsDelegate2, [].concat(args));
    _defineProperty(_this, "onAnalyticsEvent", function(name, data, isPrivate) {
      var delegateAnalyticsEvent = _this.props.delegateAnalyticsEvent;
      var eventData = _objectSpread5({}, data);
      if (delegateAnalyticsEvent) {
        delegateAnalyticsEvent(name, eventData, isPrivate);
      }
      var _ref = _this.context, onAnalyticsEvent = _ref.onAnalyticsEvent;
      if (typeof onAnalyticsEvent === "function") {
        onAnalyticsEvent(name, data, isPrivate);
      }
    });
    return _this;
  }
  _inherits(AnalyticsDelegate2, _Component);
  return _createClass(AnalyticsDelegate2, [{
    key: "getChildContext",
    value: function getChildContext() {
      return {
        onAnalyticsEvent: this.onAnalyticsEvent
      };
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.props.children;
      return import_react40.default.Children.only(children);
    }
  }]);
}(import_react40.Component);
_defineProperty(AnalyticsDelegate, "contextTypes", ContextTypes4);
_defineProperty(AnalyticsDelegate, "childContextTypes", ContextTypes4);

// node_modules/@atlaskit/analytics-next/dist/esm/utils/withAnalytics.js
init_extends();
init_objectWithoutProperties();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react41 = __toESM(require_react());
var import_prop_types5 = __toESM(require_prop_types());

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/ds-lib/dist/esm/utils/device-check.js
function isSafari() {
  if (typeof window !== "undefined" && window.navigator != null) {
    var _window$navigator$use2;
    var ua = (_window$navigator$use2 = window.navigator.userAgent) === null || _window$navigator$use2 === void 0 ? void 0 : _window$navigator$use2.toLowerCase();
    return ua ? ua.includes("safari") && !ua.includes("chrome") : false;
  }
  return false;
}

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/ds-lib/dist/esm/utils/noop.js
function noop5() {
}

// node_modules/@atlaskit/interaction-context/dist/esm/index.js
var import_react42 = __toESM(require_react());
var esm_default2 = (0, import_react42.createContext)(null);

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/focusable.js
init_extends();
init_defineProperty();
init_objectWithoutProperties();
var React30 = __toESM(require_react());
init_runtime2();
var import_react43 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/focusable.compiled.css";
var _excluded6 = ["as", "children", "isInset", "testId", "style", "xcss"];
var _excluded22 = ["className"];
function ownKeys6(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread6(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys6(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys6(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var Focusable = (0, import_react43.forwardRef)(function(_ref, ref) {
  var _ref$as = _ref.as, Component8 = _ref$as === void 0 ? "button" : _ref$as, children = _ref.children, isInset = _ref.isInset, testId = _ref.testId, style = _ref.style, xcss = _ref.xcss, htmlAttributes = _objectWithoutProperties(_ref, _excluded6);
  var _spreadClass = htmlAttributes.className, safeHtmlAttributes = _objectWithoutProperties(htmlAttributes, _excluded22);
  return React30.createElement(Component8, _extends({}, safeHtmlAttributes, {
    // @ts-ignore Expression produces a union type that is too complex to represent. We may be able to narrow the type here but unsure.
    ref,
    className: ax(["_mizu194a _1ah31bk5 _ra3xnqa1 _128m1bk5 _1cvmnqa1 _4davt94y", isInset && "_1ah3115h _2mwq115h", xcss]),
    "data-testid": testId,
    style: _objectSpread6(_objectSpread6({}, style), {}, {
      "--_1203r2w": cssCustomPropertyValue("calc(0px - ".concat("var(--ds-border-width-outline, 2px)", ")"))
    })
  }), children);
});
var focusable_default = Focusable;

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/pressable.js
var _excluded7 = ["children", "isDisabled", "type", "onClick", "interactionName", "componentName", "analyticsContext", "style", "testId", "xcss", "tabIndex"];
var _excluded23 = ["className"];
var styles7 = {
  root: "_19itglyw _vchhusvi _r06hglyw _80omtlke",
  disabled: "_80om13gf"
};
var Pressable = (0, import_react44.forwardRef)(function(_ref, ref) {
  var children = _ref.children, isDisabled = _ref.isDisabled, _ref$type = _ref.type, type = _ref$type === void 0 ? "button" : _ref$type, _ref$onClick = _ref.onClick, providedOnClick = _ref$onClick === void 0 ? noop5 : _ref$onClick, interactionName = _ref.interactionName, componentName = _ref.componentName, analyticsContext = _ref.analyticsContext, style = _ref.style, testId = _ref.testId, xcss = _ref.xcss, tabIndex = _ref.tabIndex, htmlAttributes = _objectWithoutProperties(_ref, _excluded7);
  var interactionContext = (0, import_react44.useContext)(esm_default2);
  var handleClick = (0, import_react44.useCallback)(function(e, analyticsEvent) {
    interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);
    providedOnClick(e, analyticsEvent);
  }, [providedOnClick, interactionContext, interactionName]);
  var onClick = usePlatformLeafEventHandler({
    fn: handleClick,
    action: "clicked",
    componentName: componentName || "Pressable",
    packageName: "@atlaskit/primitives",
    packageVersion: "14.11.2",
    analyticsData: analyticsContext,
    actionSubject: "button"
  });
  var _spreadClass = htmlAttributes.className, safeHtmlAttributes = _objectWithoutProperties(htmlAttributes, _excluded23);
  return React31.createElement(
    focusable_default,
    _extends({
      as: "button",
      tabIndex: tabIndex !== null && tabIndex !== void 0 ? tabIndex : isSafari() && !isDisabled ? 0 : void 0,
      style
    }, safeHtmlAttributes, {
      type,
      onClick,
      disabled: isDisabled,
      xcss: cx(styles7.root, isDisabled && styles7.disabled, xcss),
      testId,
      ref
    }),
    children
  );
});
var pressable_default = Pressable;

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/anchor.js
init_extends();
init_typeof();
init_objectWithoutProperties();
var React37 = __toESM(require_react());
init_runtime2();
var import_react52 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/components/anchor.compiled.css";

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/app-provider/dist/esm/app-provider.js
var import_react49 = __toESM(require_react());

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/app-provider/dist/esm/router-link-provider/index.js
var import_react46 = __toESM(require_react());
var RouterLinkProviderContext = (0, import_react46.createContext)({});

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/app-provider/dist/esm/theme-provider.js
init_asyncToGenerator();
init_defineProperty();
init_slicedToArray();
var import_regenerator4 = __toESM(require_regenerator());
var import_react48 = __toESM(require_react());
var import_bind_event_listener3 = __toESM(require_dist());

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/get-token.js
init_esm();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/get-token-value.js
init_esm();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/set-global-theme.js
init_asyncToGenerator();
var import_regenerator2 = __toESM(require_regenerator());
init_esm();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/configure-page.js
init_slicedToArray();
init_esm();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/get-theme-html-attrs.js
init_defineProperty();
init_esm();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/theme-state-transformer.js
init_typeof();
init_slicedToArray();
var themeKinds = ["light", "dark", "spacing", "typography", "shape"];
var customThemeOptions = "UNSAFE_themeOptions";
var isThemeKind = function isThemeKind2(themeKind) {
  return themeKinds.find(function(kind) {
    return kind === themeKind;
  }) !== void 0;
};
var isThemeIds = function isThemeIds2(themeId) {
  return themeIds.find(function(id) {
    return id === themeId;
  }) !== void 0;
};
var isColorMode = function isColorMode2(modeId) {
  return ["light", "dark", "auto"].includes(modeId);
};
var themeStringToObject = function themeStringToObject2(themeState) {
  return themeState.split(" ").map(function(theme) {
    return theme.split(/:([^]*)/);
  }).reduce(function(themeObject, _ref) {
    var _ref2 = _slicedToArray(_ref, 2), kind = _ref2[0], id = _ref2[1];
    if (kind === "colorMode" && isColorMode(id)) {
      themeObject[kind] = id;
    }
    if (isThemeKind(kind) && isThemeIds(id)) {
      themeObject[kind] = id;
    }
    if (kind === customThemeOptions) {
      try {
        themeObject[customThemeOptions] = JSON.parse(id);
      } catch (e) {
        new Error("Invalid custom theme string");
      }
    }
    return themeObject;
  }, {});
};
var themeObjectToString = function themeObjectToString2(themeState) {
  return Object.entries(themeState).reduce(function(themeString, _ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), kind = _ref4[0], id = _ref4[1];
    if (
      // colorMode theme state
      kind === "colorMode" && typeof id === "string" && isColorMode(id) || // custom theme state
      kind === customThemeOptions && _typeof(id) === "object" || // other theme states
      isThemeKind(kind) && typeof id === "string" && isThemeIds(id)
    ) {
      return themeString + "".concat(themeString ? " " : "") + "".concat(kind, ":").concat(_typeof(id) === "object" ? JSON.stringify(id) : id);
    }
    return themeString;
  }, "");
};

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/get-theme-html-attrs.js
function ownKeys7(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread7(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys7(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys7(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var defaultColorMode = "light";
var defaultContrastMode = "no-preference";
var getThemeHtmlAttrs = function getThemeHtmlAttrs2() {
  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$colorMode = _ref.colorMode, colorMode = _ref$colorMode === void 0 ? themeStateDefaults["colorMode"] : _ref$colorMode, _ref$dark = _ref.dark, dark3 = _ref$dark === void 0 ? themeStateDefaults["dark"] : _ref$dark, _ref$light = _ref.light, light3 = _ref$light === void 0 ? themeStateDefaults["light"] : _ref$light, _ref$contrastMode = _ref.contrastMode, contrastMode = _ref$contrastMode === void 0 ? themeStateDefaults["contrastMode"] : _ref$contrastMode, _ref$shape = _ref.shape, shape3 = _ref$shape === void 0 ? themeStateDefaults["shape"] : _ref$shape, _ref$spacing = _ref.spacing, spacing3 = _ref$spacing === void 0 ? themeStateDefaults["spacing"] : _ref$spacing, _ref$typography = _ref.typography, typography2 = _ref$typography === void 0 ? themeStateDefaults["typography"]() : _ref$typography, _ref$UNSAFE_themeOpti = _ref.UNSAFE_themeOptions, UNSAFE_themeOptions = _ref$UNSAFE_themeOpti === void 0 ? themeStateDefaults["UNSAFE_themeOptions"] : _ref$UNSAFE_themeOpti;
  var themeAttribute = themeObjectToString({
    dark: dark3,
    light: light3,
    shape: shape3,
    spacing: spacing3,
    typography: typography2
  });
  var result = _defineProperty(_defineProperty({}, THEME_DATA_ATTRIBUTE, themeAttribute), COLOR_MODE_ATTRIBUTE, colorMode === "auto" ? defaultColorMode : colorMode);
  if (fg("platform_increased-contrast-themes")) {
    result = _objectSpread7(_objectSpread7({}, result), {}, _defineProperty({}, CONTRAST_MODE_ATTRIBUTE, contrastMode === "auto" ? defaultContrastMode : contrastMode));
  }
  if (UNSAFE_themeOptions && isValidBrandHex(UNSAFE_themeOptions.brandColor)) {
    var optionString = JSON.stringify(UNSAFE_themeOptions);
    var uniqueId = hash(optionString);
    result[CUSTOM_THEME_ATTRIBUTE] = uniqueId;
  }
  return result;
};
var get_theme_html_attrs_default = getThemeHtmlAttrs;

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/color-mode-listeners.js
init_classCallCheck();
init_createClass();
init_defineProperty();
var import_bind_event_listener = __toESM(require_dist());

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/theme-loading.js
init_asyncToGenerator();
var import_regenerator = __toESM(require_regenerator());
init_esm();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/artifacts/theme-import-map.js
var themeImportsMap = {
  "light": function light() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-light" */
      "./atlassian-light-YQ54OXZA.js"
    );
  },
  "light-future": function lightFuture() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-light-future" */
      "./atlassian-light-future-77KFHRUV.js"
    );
  },
  "light-increased-contrast": function lightIncreasedContrast() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-light-increased-contrast" */
      "./atlassian-light-increased-contrast-Q4L37ZSP.js"
    );
  },
  "dark": function dark() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-dark" */
      "./atlassian-dark-5DEK4GFF.js"
    );
  },
  "dark-future": function darkFuture() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-dark-future" */
      "./atlassian-dark-future-A3DDPDEC.js"
    );
  },
  "dark-increased-contrast": function darkIncreasedContrast() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-dark-increased-contrast" */
      "./atlassian-dark-increased-contrast-Y7NOXRGS.js"
    );
  },
  "legacy-light": function legacyLight() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-legacy-light" */
      "./atlassian-legacy-light-ZILPTW64.js"
    );
  },
  "legacy-dark": function legacyDark() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-legacy-dark" */
      "./atlassian-legacy-dark-ZODLFMJT.js"
    );
  },
  "spacing": function spacing() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-spacing" */
      "./atlassian-spacing-FRHQPXRL.js"
    );
  },
  "typography": function typography() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-typography" */
      "./atlassian-typography-NNAQFRYS.js"
    );
  },
  "typography-adg3": function typographyAdg3() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-typography-adg3" */
      "./atlassian-typography-adg3-EXUJE4LR.js"
    );
  },
  "shape": function shape() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-shape" */
      "./atlassian-shape-HU4TSHTE.js"
    );
  },
  "typography-modernized": function typographyModernized() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-typography-modernized" */
      "./atlassian-typography-modernized-T3T7X6TM.js"
    );
  },
  "typography-refreshed": function typographyRefreshed() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-typography-refreshed" */
      "./atlassian-typography-refreshed-67WIFUV6.js"
    );
  },
  "light-brand-refresh": function lightBrandRefresh() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-light-brand-refresh" */
      "./atlassian-light-brand-refresh-L4PK7EYB.js"
    );
  },
  "dark-brand-refresh": function darkBrandRefresh() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-dark-brand-refresh" */
      "./atlassian-dark-brand-refresh-2DMGFX3D.js"
    );
  }
};
var theme_import_map_default = themeImportsMap;

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/theme-loading.js
var loadAndAppendThemeCss = function() {
  var _ref = _asyncToGenerator(import_regenerator.default.mark(function _callee(themeId) {
    var themeCss, style;
    return import_regenerator.default.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (!document.head.querySelector("style[".concat(THEME_DATA_ATTRIBUTE, '="').concat(themeId, '"]:not([').concat(CUSTOM_THEME_ATTRIBUTE, "])"))) {
            _context.next = 2;
            break;
          }
          return _context.abrupt("return");
        case 2:
          if (themeId) {
            _context.next = 4;
            break;
          }
          return _context.abrupt("return");
        case 4:
          _context.next = 6;
          return loadThemeCss(themeId);
        case 6:
          themeCss = _context.sent;
          style = document.createElement("style");
          style.textContent = themeCss;
          style.dataset.theme = themeId;
          document.head.appendChild(style);
        case 11:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function loadAndAppendThemeCss3(_x) {
    return _ref.apply(this, arguments);
  };
}();
var loadThemeCss = function() {
  var _ref2 = _asyncToGenerator(import_regenerator.default.mark(function _callee2(themeId) {
    var _yield$themeImportMap, themeCss;
    return import_regenerator.default.wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          if ((themeId === "light" || themeId === "dark") && fg("platform-component-visual-refresh")) {
            themeId += "-brand-refresh";
          }
          _context2.next = 3;
          return theme_import_map_default[themeId]();
        case 3:
          _yield$themeImportMap = _context2.sent;
          themeCss = _yield$themeImportMap.default;
          return _context2.abrupt("return", themeCss);
        case 6:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function loadThemeCss3(_x2) {
    return _ref2.apply(this, arguments);
  };
}();
var darkModeMediaQuery = "(prefers-color-scheme: dark)";
var moreContrastMediaQuery = "(prefers-contrast: more)";

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/color-mode-listeners.js
var isMatchMediaAvailable = typeof window !== "undefined" && "matchMedia" in window;
function checkNativeListener(e) {
  var element = document.documentElement;
  element.setAttribute(COLOR_MODE_ATTRIBUTE, e.matches ? "dark" : "light");
}
var darkModeMql = isMatchMediaAvailable && window.matchMedia(darkModeMediaQuery);
var ColorModeObserver = function() {
  function ColorModeObserver3() {
    _classCallCheck(this, ColorModeObserver3);
    _defineProperty(this, "unbindThemeChangeListener", null);
  }
  return _createClass(ColorModeObserver3, [{
    key: "getColorMode",
    value: function getColorMode() {
      if (!darkModeMql) {
        return "light";
      }
      return darkModeMql !== null && darkModeMql !== void 0 && darkModeMql.matches ? "dark" : "light";
    }
  }, {
    key: "bind",
    value: function bind9() {
      if (darkModeMql && this.unbindThemeChangeListener === null) {
        this.unbindThemeChangeListener = (0, import_bind_event_listener.bind)(darkModeMql, {
          type: "change",
          listener: checkNativeListener
        });
      }
    }
  }, {
    key: "unbind",
    value: function unbind() {
      if (this.unbindThemeChangeListener) {
        this.unbindThemeChangeListener();
        this.unbindThemeChangeListener = null;
      }
    }
  }]);
}();
var SingletonColorModeObserver = new ColorModeObserver();
var color_mode_listeners_default = SingletonColorModeObserver;

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/contrast-mode-listeners.js
init_classCallCheck();
init_createClass();
init_defineProperty();
var import_bind_event_listener2 = __toESM(require_dist());
var isMatchMediaAvailable2 = typeof window !== "undefined" && "matchMedia" in window;
function checkNativeListener2(e) {
  var element = document.documentElement;
  element.setAttribute(CONTRAST_MODE_ATTRIBUTE, e.matches ? "more" : "no-preference");
}
var contrastModeMql = isMatchMediaAvailable2 && window.matchMedia(moreContrastMediaQuery);
var ContrastModeObserver = function() {
  function ContrastModeObserver3() {
    _classCallCheck(this, ContrastModeObserver3);
    _defineProperty(this, "unbindContrastChangeListener", null);
  }
  return _createClass(ContrastModeObserver3, [{
    key: "getContrastMode",
    value: function getContrastMode() {
      if (!contrastModeMql) {
        return "no-preference";
      }
      return contrastModeMql !== null && contrastModeMql !== void 0 && contrastModeMql.matches ? "more" : "no-preference";
    }
  }, {
    key: "bind",
    value: function bind9() {
      if (contrastModeMql && this.unbindContrastChangeListener === null) {
        this.unbindContrastChangeListener = (0, import_bind_event_listener2.bind)(contrastModeMql, {
          type: "change",
          listener: checkNativeListener2
        });
      }
    }
  }, {
    key: "unbind",
    value: function unbind() {
      if (this.unbindContrastChangeListener) {
        this.unbindContrastChangeListener();
        this.unbindContrastChangeListener = null;
      }
    }
  }]);
}();
var SingletonContrastModeObserver = new ContrastModeObserver();
var contrast_mode_listeners_default = SingletonContrastModeObserver;

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/configure-page.js
function configurePage(themeState) {
  if (themeState.colorMode === "auto") {
    themeState.colorMode = color_mode_listeners_default.getColorMode();
    color_mode_listeners_default.bind();
  } else {
    color_mode_listeners_default.unbind();
  }
  if (fg("platform_increased-contrast-themes")) {
    if (themeState.contrastMode === "auto") {
      themeState.contrastMode = contrast_mode_listeners_default.getContrastMode();
      contrast_mode_listeners_default.bind();
    } else {
      contrast_mode_listeners_default.unbind();
    }
  }
  var themeAttributes = get_theme_html_attrs_default(themeState);
  Object.entries(themeAttributes).forEach(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];
    document.documentElement.setAttribute(key, value);
  });
  return function() {
    color_mode_listeners_default.unbind();
    if (fg("platform_increased-contrast-themes")) {
      contrast_mode_listeners_default.unbind();
    }
  };
}

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/get-theme-preferences.js
init_esm();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/get-increased-contrast-theme.js
init_slicedToArray();
function getIncreasedContrastTheme(themeId) {
  var _Object$entries$find;
  return (_Object$entries$find = Object.entries(theme_config_default).find(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), increasesContrastFor = _ref2[1].increasesContrastFor;
    return increasesContrastFor === themeId;
  })) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[1].id;
}

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/utils/get-theme-preferences.js
var getThemePreferences = function getThemePreferences2(themeState) {
  var colorMode = themeState.colorMode, contrastMode = themeState.contrastMode, dark3 = themeState.dark, light3 = themeState.light, shape3 = themeState.shape, spacing3 = themeState.spacing, typography2 = themeState.typography;
  var autoColorModeThemes = [light3, dark3];
  var themePreferences = [];
  if (colorMode === "auto") {
    if (contrastMode !== "no-preference" && fg("platform_increased-contrast-themes")) {
      autoColorModeThemes.forEach(function(normalTheme) {
        var increasedContrastTheme2 = getIncreasedContrastTheme(normalTheme);
        if (increasedContrastTheme2) {
          autoColorModeThemes.push(increasedContrastTheme2);
        }
      });
    }
    themePreferences.push.apply(themePreferences, autoColorModeThemes);
  } else {
    themePreferences.push(themeState[colorMode]);
    if (contrastMode !== "no-preference" && fg("platform_increased-contrast-themes")) {
      var increasedContrastTheme = getIncreasedContrastTheme(themeState[colorMode]);
      if (increasedContrastTheme) {
        themePreferences.push(increasedContrastTheme);
      }
    }
  }
  [shape3, spacing3, typography2].forEach(function(themeId) {
    if (themeId) {
      themePreferences.push(themeId);
    }
  });
  return _toConsumableArray(new Set(themePreferences));
};
var getThemeOverridePreferences = function getThemeOverridePreferences2(_themeState) {
  var themeOverridePreferences = [];
  return _toConsumableArray(new Set(themeOverridePreferences));
};

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/set-global-theme.js
function _createForOfIteratorHelper(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
var setGlobalTheme = function() {
  var _ref = _asyncToGenerator(import_regenerator2.default.mark(function _callee3() {
    var _ref2, _ref2$colorMode, colorMode, _ref2$contrastMode, contrastMode, _ref2$dark, dark3, _ref2$light, light3, _ref2$shape, shape3, _ref2$spacing, spacing3, _ref2$typography, typography2, _ref2$UNSAFE_themeOpt, UNSAFE_themeOptions, themeLoader, themeState, themePreferences, loadingStrategy, loadingTasks, mode, attrOfMissingCustomStyles, themeOverridePreferences, _iterator, _step, themeId, autoUnbind, _args3 = arguments;
    return import_regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _ref2 = _args3.length > 0 && _args3[0] !== void 0 ? _args3[0] : {}, _ref2$colorMode = _ref2.colorMode, colorMode = _ref2$colorMode === void 0 ? themeStateDefaults["colorMode"] : _ref2$colorMode, _ref2$contrastMode = _ref2.contrastMode, contrastMode = _ref2$contrastMode === void 0 ? themeStateDefaults["contrastMode"] : _ref2$contrastMode, _ref2$dark = _ref2.dark, dark3 = _ref2$dark === void 0 ? themeStateDefaults["dark"] : _ref2$dark, _ref2$light = _ref2.light, light3 = _ref2$light === void 0 ? themeStateDefaults["light"] : _ref2$light, _ref2$shape = _ref2.shape, shape3 = _ref2$shape === void 0 ? themeStateDefaults["shape"] : _ref2$shape, _ref2$spacing = _ref2.spacing, spacing3 = _ref2$spacing === void 0 ? themeStateDefaults["spacing"] : _ref2$spacing, _ref2$typography = _ref2.typography, typography2 = _ref2$typography === void 0 ? themeStateDefaults["typography"]() : _ref2$typography, _ref2$UNSAFE_themeOpt = _ref2.UNSAFE_themeOptions, UNSAFE_themeOptions = _ref2$UNSAFE_themeOpt === void 0 ? themeStateDefaults["UNSAFE_themeOptions"] : _ref2$UNSAFE_themeOpt;
          themeLoader = _args3.length > 1 ? _args3[1] : void 0;
          if (!fg("platform_increased-contrast-themes")) {
            if (light3 === "light-increased-contrast") {
              light3 = "light";
            }
            if (dark3 === "dark-increased-contrast") {
              dark3 = "dark";
            }
          }
          themeState = {
            colorMode,
            contrastMode,
            dark: dark3,
            light: light3,
            shape: shape3,
            spacing: spacing3,
            typography: typography2,
            UNSAFE_themeOptions: themeLoader ? void 0 : UNSAFE_themeOptions
          };
          themePreferences = getThemePreferences(themeState);
          loadingStrategy = themeLoader ? themeLoader : loadAndAppendThemeCss;
          loadingTasks = themePreferences.map(function() {
            var _ref3 = _asyncToGenerator(import_regenerator2.default.mark(function _callee(themeId2) {
              return import_regenerator2.default.wrap(function _callee$(_context) {
                while (1) switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return loadingStrategy(themeId2);
                  case 2:
                    return _context.abrupt("return", _context.sent);
                  case 3:
                  case "end":
                    return _context.stop();
                }
              }, _callee);
            }));
            return function(_x) {
              return _ref3.apply(this, arguments);
            };
          }());
          if (!themeLoader && UNSAFE_themeOptions && isValidBrandHex(UNSAFE_themeOptions === null || UNSAFE_themeOptions === void 0 ? void 0 : UNSAFE_themeOptions.brandColor)) {
            mode = colorMode || themeStateDefaults["colorMode"];
            attrOfMissingCustomStyles = findMissingCustomStyleElements(UNSAFE_themeOptions, mode);
            if (attrOfMissingCustomStyles.length > 0) {
              loadingTasks.push(_asyncToGenerator(import_regenerator2.default.mark(function _callee2() {
                var _yield$import, loadAndAppendCustomThemeCss;
                return import_regenerator2.default.wrap(function _callee2$(_context2) {
                  while (1) switch (_context2.prev = _context2.next) {
                    case 0:
                      _context2.next = 2;
                      return import(
                        /* webpackChunkName: "@atlaskit-internal_atlassian-custom-theme" */
                        "./custom-theme-LK4V3N3O.js"
                      );
                    case 2:
                      _yield$import = _context2.sent;
                      loadAndAppendCustomThemeCss = _yield$import.loadAndAppendCustomThemeCss;
                      loadAndAppendCustomThemeCss({
                        colorMode: attrOfMissingCustomStyles.length === 2 ? "auto" : (
                          // only load the missing custom theme styles
                          attrOfMissingCustomStyles[0]
                        ),
                        UNSAFE_themeOptions
                      });
                    case 5:
                    case "end":
                      return _context2.stop();
                  }
                }, _callee2);
              }))());
            }
          }
          _context3.next = 10;
          return Promise.all(loadingTasks);
        case 10:
          themeOverridePreferences = getThemeOverridePreferences(themeState);
          _iterator = _createForOfIteratorHelper(themeOverridePreferences);
          _context3.prev = 12;
          _iterator.s();
        case 14:
          if ((_step = _iterator.n()).done) {
            _context3.next = 20;
            break;
          }
          themeId = _step.value;
          _context3.next = 18;
          return loadingStrategy(themeId);
        case 18:
          _context3.next = 14;
          break;
        case 20:
          _context3.next = 25;
          break;
        case 22:
          _context3.prev = 22;
          _context3.t0 = _context3["catch"](12);
          _iterator.e(_context3.t0);
        case 25:
          _context3.prev = 25;
          _iterator.f();
          return _context3.finish(25);
        case 28:
          autoUnbind = configurePage(themeState);
          return _context3.abrupt("return", autoUnbind);
        case 30:
        case "end":
          return _context3.stop();
      }
    }, _callee3, null, [[12, 22, 25, 28]]);
  }));
  return function setGlobalTheme3() {
    return _ref.apply(this, arguments);
  };
}();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/get-theme-styles.js
init_asyncToGenerator();
var import_regenerator3 = __toESM(require_regenerator());
init_esm();
var getThemeStyles = function() {
  var _ref = _asyncToGenerator(import_regenerator3.default.mark(function _callee3(preferences) {
    var themePreferences, themeOverridePreferences, themeState, results;
    return import_regenerator3.default.wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          themeOverridePreferences = [];
          if (preferences === "all") {
            themePreferences = themeIdsWithOverrides;
            if (!fg("platform_increased-contrast-themes")) {
              themePreferences = themePreferences.filter(function(n) {
                return n !== "light-increased-contrast" && n !== "dark-increased-contrast";
              });
            }
            themePreferences = themePreferences.filter(function(n) {
              return n !== "light-brand-refresh" && n !== "dark-brand-refresh";
            });
          } else {
            themeState = {
              colorMode: (preferences === null || preferences === void 0 ? void 0 : preferences.colorMode) || themeStateDefaults["colorMode"],
              contrastMode: (preferences === null || preferences === void 0 ? void 0 : preferences.contrastMode) || themeStateDefaults["contrastMode"],
              dark: (preferences === null || preferences === void 0 ? void 0 : preferences.dark) || themeStateDefaults["dark"],
              light: (preferences === null || preferences === void 0 ? void 0 : preferences.light) || themeStateDefaults["light"],
              shape: (preferences === null || preferences === void 0 ? void 0 : preferences.shape) || themeStateDefaults["shape"],
              spacing: (preferences === null || preferences === void 0 ? void 0 : preferences.spacing) || themeStateDefaults["spacing"],
              typography: (preferences === null || preferences === void 0 ? void 0 : preferences.typography) || themeStateDefaults["typography"]()
            };
            themePreferences = getThemePreferences(themeState);
            themeOverridePreferences = getThemeOverridePreferences(themeState);
          }
          _context3.next = 4;
          return Promise.all([].concat(_toConsumableArray([].concat(_toConsumableArray(themePreferences), _toConsumableArray(themeOverridePreferences)).map(function() {
            var _ref2 = _asyncToGenerator(import_regenerator3.default.mark(function _callee(themeId) {
              var css4;
              return import_regenerator3.default.wrap(function _callee$(_context) {
                while (1) switch (_context.prev = _context.next) {
                  case 0:
                    _context.prev = 0;
                    _context.next = 3;
                    return loadThemeCss(themeId);
                  case 3:
                    css4 = _context.sent;
                    return _context.abrupt("return", {
                      id: themeId,
                      attrs: {
                        "data-theme": themeId
                      },
                      css: css4
                    });
                  case 7:
                    _context.prev = 7;
                    _context.t0 = _context["catch"](0);
                    return _context.abrupt("return", void 0);
                  case 10:
                  case "end":
                    return _context.stop();
                }
              }, _callee, null, [[0, 7]]);
            }));
            return function(_x2) {
              return _ref2.apply(this, arguments);
            };
          }())), [
            // Add custom themes if they're present
            _asyncToGenerator(import_regenerator3.default.mark(function _callee2() {
              var _preferences$UNSAFE_t;
              var _yield$import, getCustomThemeStyles, customThemeStyles;
              return import_regenerator3.default.wrap(function _callee2$(_context2) {
                while (1) switch (_context2.prev = _context2.next) {
                  case 0:
                    if (!(preferences !== "all" && preferences !== null && preferences !== void 0 && preferences.UNSAFE_themeOptions && isValidBrandHex(preferences === null || preferences === void 0 || (_preferences$UNSAFE_t = preferences.UNSAFE_themeOptions) === null || _preferences$UNSAFE_t === void 0 ? void 0 : _preferences$UNSAFE_t.brandColor))) {
                      _context2.next = 15;
                      break;
                    }
                    _context2.prev = 1;
                    _context2.next = 4;
                    return import(
                      /* webpackChunkName: "@atlaskit-internal_atlassian-custom-theme" */
                      "./custom-theme-LK4V3N3O.js"
                    );
                  case 4:
                    _yield$import = _context2.sent;
                    getCustomThemeStyles = _yield$import.getCustomThemeStyles;
                    _context2.next = 8;
                    return getCustomThemeStyles({
                      colorMode: (preferences === null || preferences === void 0 ? void 0 : preferences.colorMode) || themeStateDefaults["colorMode"],
                      UNSAFE_themeOptions: preferences === null || preferences === void 0 ? void 0 : preferences.UNSAFE_themeOptions
                    });
                  case 8:
                    customThemeStyles = _context2.sent;
                    return _context2.abrupt("return", customThemeStyles);
                  case 12:
                    _context2.prev = 12;
                    _context2.t0 = _context2["catch"](1);
                    return _context2.abrupt("return", void 0);
                  case 15:
                  case "end":
                    return _context2.stop();
                }
              }, _callee2, null, [[1, 12]]);
            }))()
          ]));
        case 4:
          results = _context3.sent;
          return _context3.abrupt("return", results.flat().filter(function(theme) {
            return theme !== void 0;
          }));
        case 6:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function getThemeStyles3(_x) {
    return _ref.apply(this, arguments);
  };
}();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/get-ssr-auto-script.js
init_esm();

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/use-theme-observer.js
init_slicedToArray();
var import_react47 = __toESM(require_react());

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/get-global-theme.js
init_defineProperty();
function ownKeys8(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread8(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys8(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys8(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var isThemeColorMode = function isThemeColorMode2(colorMode) {
  return themeColorModes.find(function(mode) {
    return mode === colorMode;
  }) !== void 0;
};
var getGlobalTheme = function getGlobalTheme2() {
  if (typeof document === "undefined") {
    return {};
  }
  var element = document.documentElement;
  var colorMode = element.getAttribute(COLOR_MODE_ATTRIBUTE) || "";
  var theme = element.getAttribute(THEME_DATA_ATTRIBUTE) || "";
  return _objectSpread8(_objectSpread8({}, themeStringToObject(theme)), isThemeColorMode(colorMode) && {
    colorMode
  });
};
var get_global_theme_default = getGlobalTheme;

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/tokens/dist/esm/theme-mutation-observer.js
init_classCallCheck();
init_createClass();
init_defineProperty();
var ThemeMutationObserver = function() {
  function ThemeMutationObserver3(callback) {
    _classCallCheck(this, ThemeMutationObserver3);
    _defineProperty(this, "legacyObserver", null);
    this.callback = callback;
    ThemeMutationObserver3.callbacks.add(callback);
  }
  return _createClass(ThemeMutationObserver3, [{
    key: "observe",
    value: function observe() {
      if (!ThemeMutationObserver3.observer) {
        ThemeMutationObserver3.observer = new MutationObserver(function() {
          var theme = get_global_theme_default();
          ThemeMutationObserver3.callbacks.forEach(function(callback) {
            return callback(theme);
          });
        });
        ThemeMutationObserver3.observer.observe(document.documentElement, {
          attributeFilter: [THEME_DATA_ATTRIBUTE, COLOR_MODE_ATTRIBUTE]
        });
      }
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.callback) {
        ThemeMutationObserver3.callbacks.delete(this.callback);
      }
      if (ThemeMutationObserver3.callbacks.size === 0 && ThemeMutationObserver3.observer) {
        ThemeMutationObserver3.observer.disconnect();
        ThemeMutationObserver3.observer = null;
      }
    }
  }]);
}();
_defineProperty(ThemeMutationObserver, "observer", null);
_defineProperty(ThemeMutationObserver, "callbacks", /* @__PURE__ */ new Set());

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/app-provider/dist/esm/theme-provider.js
var ColorModeContext = (0, import_react48.createContext)(void 0);
var SetColorModeContext = (0, import_react48.createContext)(void 0);
var ThemeContext = (0, import_react48.createContext)(void 0);
var SetThemeContext = (0, import_react48.createContext)(void 0);
var isMatchMediaAvailable3 = typeof window !== "undefined" && "matchMedia" in window;
var prefersDarkModeMql = isMatchMediaAvailable3 ? window.matchMedia("(prefers-color-scheme: dark)") : void 0;

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/app-provider/dist/esm/app-provider.js
var InsideAppProviderContext = (0, import_react49.createContext)(false);

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/app-provider/dist/esm/router-link-provider/hooks/use-router-link.js
var import_react50 = __toESM(require_react());
var useRouterLink = function useRouterLink2() {
  var _useContext = (0, import_react50.useContext)(RouterLinkProviderContext), routerLinkComponent = _useContext.routerLinkComponent;
  if (routerLinkComponent) {
    return routerLinkComponent;
  }
};
var use_router_link_default = useRouterLink;

// node_modules/@atlaskit/primitives/node_modules/@atlaskit/ds-lib/dist/esm/utils/use-id.js
init_typeof();
var import_react51 = __toESM(require_react());
init_esm();
var _React$useId2;
var react18UseId2 = (_React$useId2 = import_react51.default.useId) !== null && _React$useId2 !== void 0 ? _React$useId2 : void 0;
function useId2() {
  if (react18UseId2 && fg("platform-dst-react-18-use-id")) {
    return react18UseId2();
  }
  return "uid".concat(useUID());
}
var IdProvider2 = (0, import_react51.forwardRef)(function(_ref, ref) {
  var children = _ref.children, _ref$postfix = _ref.postfix, postfix = _ref$postfix === void 0 ? "" : _ref$postfix, _ref$prefix = _ref.prefix, prefix2 = _ref$prefix === void 0 ? "" : _ref$prefix;
  var id = "".concat(prefix2).concat(useId2()).concat(postfix);
  (0, import_react51.useEffect)(function() {
    if (!ref) {
      return;
    }
    switch (_typeof(ref)) {
      case "function":
        ref(id);
        break;
      case "object":
        ref.current = id;
        break;
      default:
        throw new Error('Unreachable case for unsupported type of ref "'.concat(_typeof(ref), '"'));
    }
  }, [id, ref]);
  return import_react51.default.createElement(import_react51.default.Fragment, null, typeof children === "function" ? children({
    id
  }) : children);
});

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/anchor.js
init_esm();

// node_modules/@atlaskit/visually-hidden/dist/esm/visually-hidden.js
var React36 = __toESM(require_react());
init_runtime2();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/visually-hidden/dist/esm/visually-hidden.compiled.css";
var VisuallyHidden = function VisuallyHidden2(_ref) {
  var children = _ref.children, testId = _ref.testId, role = _ref.role, id = _ref.id;
  return React36.createElement("span", {
    id,
    "data-testid": testId,
    role,
    className: ax(["_ca0qidpf _u5f3idpf _n3tdidpf _19bvidpf _19itidpf _1reo15vq _18m915vq _1bsbt94y _4t3it94y _kqswstnw _ogto7mnp _uiztglyw _o5721q9c"])
  }, children);
};
var visually_hidden_default = VisuallyHidden;

// node_modules/@atlaskit/primitives/dist/esm/compiled/components/anchor.js
var _excluded8 = ["href", "children", "onClick", "interactionName", "componentName", "analyticsContext", "aria-label", "aria-labelledby", "style", "target", "testId", "xcss", "newWindowLabel"];
var _excluded24 = ["className"];
var styles8 = {
  root: "_4bfu1r31 _1hms8stv _ajmmnqa1 _vchhusvi",
  position: "_kqswh2mm"
};
var IS_EXTERNAL_LINK_REGEX = /^(?:(http|https):\/\/)/;
var IS_NON_HTTP_BASED = /^(((mailto|tel|sms|blob):)|(#))/;
var AnchorNoRef = function AnchorNoRef2(_ref, ref) {
  var href = _ref.href, children = _ref.children, _ref$onClick = _ref.onClick, providedOnClick = _ref$onClick === void 0 ? noop5 : _ref$onClick, interactionName = _ref.interactionName, componentName = _ref.componentName, analyticsContext = _ref.analyticsContext, ariaLabel = _ref["aria-label"], ariaLabelledBy = _ref["aria-labelledby"], style = _ref.style, target = _ref.target, testId = _ref.testId, xcss = _ref.xcss, _ref$newWindowLabel = _ref.newWindowLabel, newWindowLabel = _ref$newWindowLabel === void 0 ? "(opens new window)" : _ref$newWindowLabel, htmlAttributes = _objectWithoutProperties(_ref, _excluded8);
  var interactionContext = (0, import_react52.useContext)(esm_default2);
  var handleClick = (0, import_react52.useCallback)(function(e, analyticsEvent) {
    interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);
    providedOnClick(e, analyticsEvent);
  }, [providedOnClick, interactionContext, interactionName]);
  var opensNewWindowLabelId = useId2();
  var onClick = usePlatformLeafEventHandler({
    fn: handleClick,
    action: "clicked",
    componentName: componentName || "Anchor",
    packageName: "@atlaskit/primitives",
    packageVersion: "14.11.2",
    analyticsData: analyticsContext,
    actionSubject: "link"
  });
  var _spreadClass = htmlAttributes.className, safeHtmlAttributes = _objectWithoutProperties(htmlAttributes, _excluded24);
  var RouterLink = use_router_link_default();
  var isExternal = typeof href === "string" && IS_EXTERNAL_LINK_REGEX.test(href);
  var isNonHttpBased = typeof href === "string" && IS_NON_HTTP_BASED.test(href);
  var isRouterLink = RouterLink && !isExternal && !isNonHttpBased;
  var hrefObjectUsedWithoutRouterLink = RouterLink === void 0 && _typeof(href) === "object";
  invariant(!hrefObjectUsedWithoutRouterLink, "@atlaskit/primitives: Anchor primitive cannot pass an object to 'href' unless a router link is configured in the AppProvider");
  var Component8 = isRouterLink ? RouterLink : "a";
  return React37.createElement(
    focusable_default,
    _extends({
      as: Component8,
      className: xcss,
      style,
      ref
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, safeHtmlAttributes, {
      href: !isRouterLink && typeof href !== "string" ? void 0 : href,
      target,
      onClick,
      "aria-label": ariaLabel && target === "_blank" && !ariaLabelledBy ? "".concat(ariaLabel, " , ").concat(newWindowLabel) : ariaLabel,
      "aria-labelledby": ariaLabelledBy && target === "_blank" ? "".concat(ariaLabelledBy, " ").concat(opensNewWindowLabelId) : ariaLabelledBy,
      xcss: cx(styles8.root, fg("platform_design-system-team_anchor-positioning") ? styles8.position : void 0, xcss),
      testId,
      "data-is-router-link": testId ? isRouterLink ? "true" : "false" : void 0
    }),
    children,
    target === "_blank" && (children && !ariaLabel && !ariaLabelledBy || ariaLabelledBy) && React37.createElement(visually_hidden_default, {
      id: opensNewWindowLabelId
    }, ", ".concat(newWindowLabel))
  );
};
var Anchor = (0, import_react52.forwardRef)(AnchorNoRef);
var anchor_default = Anchor;

// node_modules/@atlaskit/primitives/dist/esm/compiled/responsive/media-helper.js
var media = {
  above: {
    // TODO: Should this even exist, we don't want `css({ [media.above.xxs]: { … } })` because that just adds duplicates styles!
    xxs: "@media all",
    xs: "@media (min-width: 30rem)",
    sm: "@media (min-width: 48rem)",
    md: "@media (min-width: 64rem)",
    lg: "@media (min-width: 90rem)",
    xl: "@media (min-width: 110.5rem)"
  },
  only: {
    xxs: "@media (min-width: 0rem) and (max-width: 29.99rem)",
    xs: "@media (min-width: 30rem) and (max-width: 47.99rem)",
    sm: "@media (min-width: 48rem) and (max-width: 63.99rem)",
    md: "@media (min-width: 64rem) and (max-width: 89.99rem)",
    lg: "@media (min-width: 90rem) and (max-width: 110.49rem)",
    xl: "@media (min-width: 110.5rem)"
  },
  below: {
    xs: "@media not all and (min-width: 30rem)",
    sm: "@media not all and (min-width: 48rem)",
    md: "@media not all and (min-width: 64rem)",
    lg: "@media not all and (min-width: 90rem)",
    xl: "@media not all and (min-width: 110.5rem)"
  }
};

// node_modules/@atlaskit/primitives/dist/esm/compiled/responsive/use-media-query.js
var import_react54 = __toESM(require_react());
var import_bind_event_listener4 = __toESM(require_dist());
var _window;
var _window$matchMedia;
var _window2;
var _window2$matchMedia;
var _window3;
var _window3$matchMedia;
var _window4;
var _window4$matchMedia;
var _window5;
var _window5$matchMedia;
var _window6;
var _window6$matchMedia;
var _window7;
var _window7$matchMedia;
var _window8;
var _window8$matchMedia;
var _window9;
var _window9$matchMedia;
var _window0;
var _window0$matchMedia;
var _window1;
var _window1$matchMedia;
var queries = {
  "above.xxs": typeof window === "undefined" ? void 0 : (_window = window) === null || _window === void 0 || (_window$matchMedia = _window.matchMedia) === null || _window$matchMedia === void 0 ? void 0 : _window$matchMedia.call(_window, media.above.xxs.replace("@media ", "").trim()),
  "above.xs": typeof window === "undefined" ? void 0 : (_window2 = window) === null || _window2 === void 0 || (_window2$matchMedia = _window2.matchMedia) === null || _window2$matchMedia === void 0 ? void 0 : _window2$matchMedia.call(_window2, media.above.xs.replace("@media ", "").trim()),
  "above.sm": typeof window === "undefined" ? void 0 : (_window3 = window) === null || _window3 === void 0 || (_window3$matchMedia = _window3.matchMedia) === null || _window3$matchMedia === void 0 ? void 0 : _window3$matchMedia.call(_window3, media.above.sm.replace("@media ", "").trim()),
  "above.md": typeof window === "undefined" ? void 0 : (_window4 = window) === null || _window4 === void 0 || (_window4$matchMedia = _window4.matchMedia) === null || _window4$matchMedia === void 0 ? void 0 : _window4$matchMedia.call(_window4, media.above.md.replace("@media ", "").trim()),
  "above.lg": typeof window === "undefined" ? void 0 : (_window5 = window) === null || _window5 === void 0 || (_window5$matchMedia = _window5.matchMedia) === null || _window5$matchMedia === void 0 ? void 0 : _window5$matchMedia.call(_window5, media.above.lg.replace("@media ", "").trim()),
  "above.xl": typeof window === "undefined" ? void 0 : (_window6 = window) === null || _window6 === void 0 || (_window6$matchMedia = _window6.matchMedia) === null || _window6$matchMedia === void 0 ? void 0 : _window6$matchMedia.call(_window6, media.above.xl.replace("@media ", "").trim()),
  "below.xs": typeof window === "undefined" ? void 0 : (_window7 = window) === null || _window7 === void 0 || (_window7$matchMedia = _window7.matchMedia) === null || _window7$matchMedia === void 0 ? void 0 : _window7$matchMedia.call(_window7, media.below.xs.replace("@media ", "").trim()),
  "below.sm": typeof window === "undefined" ? void 0 : (_window8 = window) === null || _window8 === void 0 || (_window8$matchMedia = _window8.matchMedia) === null || _window8$matchMedia === void 0 ? void 0 : _window8$matchMedia.call(_window8, media.below.sm.replace("@media ", "").trim()),
  "below.md": typeof window === "undefined" ? void 0 : (_window9 = window) === null || _window9 === void 0 || (_window9$matchMedia = _window9.matchMedia) === null || _window9$matchMedia === void 0 ? void 0 : _window9$matchMedia.call(_window9, media.below.md.replace("@media ", "").trim()),
  "below.lg": typeof window === "undefined" ? void 0 : (_window0 = window) === null || _window0 === void 0 || (_window0$matchMedia = _window0.matchMedia) === null || _window0$matchMedia === void 0 ? void 0 : _window0$matchMedia.call(_window0, media.below.lg.replace("@media ", "").trim()),
  "below.xl": typeof window === "undefined" ? void 0 : (_window1 = window) === null || _window1 === void 0 || (_window1$matchMedia = _window1.matchMedia) === null || _window1$matchMedia === void 0 ? void 0 : _window1$matchMedia.call(_window1, media.below.xl.replace("@media ", "").trim())
};
var UNSAFE_useMediaQuery = function UNSAFE_useMediaQuery2(queryString, listener) {
  var listenerRef = (0, import_react54.useRef)(listener);
  (0, import_react54.useEffect)(function() {
    listenerRef.current = listener;
  }, [listener]);
  var hasListener = !!listener;
  var mq = queries[queryString];
  (0, import_react54.useLayoutEffect)(
    function() {
      listenerRef.current = listener;
      if (!mq || !hasListener || !listenerRef.current) {
        return;
      }
      return (0, import_bind_event_listener4.bind)(mq, {
        type: "change",
        listener: function listener2(event) {
          return listenerRef.current(event);
        }
      });
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps -- explicitly do not trigger the effect on `listener` reference change, only on a boolean representation of it.
    [mq, hasListener]
  );
  return mq || null;
};

// node_modules/@atlaskit/primitives/dist/esm/compiled/responsive/show.js
var React38 = __toESM(require_react());
init_runtime2();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/responsive/show.compiled.css";

// node_modules/@atlaskit/primitives/dist/esm/compiled/responsive/hide.js
var React39 = __toESM(require_react());
init_runtime2();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/primitives/dist/esm/compiled/responsive/hide.compiled.css";

// node_modules/@atlaskit/button/dist/esm/new-button/containers/split-button/split-button-context.js
var import_react55 = __toESM(require_react());
var SplitButtonContext = (0, import_react55.createContext)(void 0);
var useSplitButtonContext = function useSplitButtonContext2() {
  var context = (0, import_react55.useContext)(SplitButtonContext);
  if (!context) {
    return void 0;
  }
  if (context.appearance === "navigation") {
    var newContext = {
      spacing: "default",
      appearance: "subtle",
      isDisabled: false,
      isActiveOverSelected: false,
      isNavigationSplitButton: true,
      isHighlighted: context.isHighlighted
    };
    return newContext;
  }
  var splitButtonContext = {
    spacing: context.spacing,
    appearance: context.appearance,
    isDisabled: context.isDisabled,
    isActiveOverSelected: true,
    isNavigationSplitButton: false,
    isHighlighted: false
  };
  return splitButtonContext;
};

// node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/block-events.js
function abort(event) {
  event.preventDefault();
  event.stopPropagation();
}
var tabKeyCode = 9;
function onKey(event) {
  if (event.keyCode === tabKeyCode) {
    return;
  }
  abort(event);
}
function blockEvents(shouldBlockEvents, events) {
  return shouldBlockEvents ? {
    onMouseDownCapture: abort,
    onMouseUpCapture: abort,
    onKeyDownCapture: onKey,
    onKeyUpCapture: onKey,
    onTouchStartCapture: abort,
    onTouchEndCapture: abort,
    onPointerDownCapture: abort,
    onPointerUpCapture: abort,
    onClickCapture: abort,
    // Just smashing the existing onClick for good measure
    onClick: abort
  } : events;
}

// node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/loading-overlay.js
var import_react57 = __toESM(require_react());

// node_modules/@atlaskit/spinner/dist/esm/spinner.js
init_runtime2();
var import_react56 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/spinner/dist/esm/spinner.compiled.css";

// node_modules/@atlaskit/theme/dist/esm/colors.js
var B400 = "#0052CC";
var N0 = "#FFFFFF";
var N10 = "#FAFBFC";
var N100 = "#7A869A";
var N300 = "#5E6C84";
var N500 = "#42526E";

// node_modules/@atlaskit/spinner/dist/esm/constants.js
var presetSizes = {
  xsmall: 8,
  small: 16,
  medium: 24,
  large: 48,
  xlarge: 96
};

// node_modules/@atlaskit/spinner/dist/esm/spinner.js
function getStrokeColor(appearance) {
  return appearance === "inherit" ? "var(--ds-icon-subtle, ".concat(N500, ")") : "var(--ds-icon-inverse, ".concat(N0, ")");
}
var styles9 = {
  rotateStyles: "_j7hqsf8s _5sag12kz _tip812c5 _1pgl2qsq _8hrz1h6o",
  loadInStyles: "_j7hq1eco _5sag9cwz _1pgl1ytf _1o51q7pw _tzy4idpf",
  wrapperStyles: "_1e0c116y _s7n4nkob",
  circleStyles: "_lswuglyw _7ljx1dhp _opj11kw7 _134c892t _1snbbs82 _jcxd7g3v _1tjm1onz"
};
var useLayoutEffect2 = typeof window === "undefined" ? import_react56.useEffect : import_react56.useLayoutEffect;
var Spinner = import_react56.default.memo(import_react56.default.forwardRef(function Spinner2(_ref, ref) {
  var _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? "inherit" : _ref$appearance, _ref$delay = _ref.delay, delay = _ref$delay === void 0 ? 0 : _ref$delay, interactionName = _ref.interactionName, label = _ref.label, _ref$size = _ref.size, providedSize = _ref$size === void 0 ? "medium" : _ref$size, testId = _ref.testId;
  var size = typeof providedSize === "number" ? providedSize : presetSizes[providedSize];
  var animationDelay = "".concat(delay, "ms");
  var stroke = getStrokeColor(appearance);
  var context = (0, import_react56.useContext)(esm_default2);
  useLayoutEffect2(function() {
    if (context != null) {
      return context.hold(interactionName);
    }
  }, [context, interactionName]);
  return import_react56.default.createElement("span", {
    "data-testid": testId ? "".concat(testId, "-wrapper") : "spinner-wrapper",
    style: {
      animationDelay,
      width: size,
      height: size
    },
    className: ax([styles9.wrapperStyles, styles9.rotateStyles])
  }, import_react56.default.createElement("svg", {
    height: size,
    width: size,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    "data-testid": testId,
    ref,
    "aria-label": label || void 0,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: {
      animationDelay
    },
    role: label ? "img" : "none",
    className: ax([styles9.loadInStyles])
  }, import_react56.default.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "7",
    style: {
      stroke
    },
    className: ax([styles9.circleStyles])
  })));
}));
var spinner_default = Spinner;

// node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/loading-overlay.js
function getIconSpacing(spacing3) {
  switch (spacing3) {
    case "compact":
      return "small";
    default:
      return "medium";
  }
}
function getSpinnerAppearance(_ref) {
  var appearance = _ref.appearance, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected;
  if (isDisabled || isSelected) {
    return "inherit";
  }
  if (appearance === "primary" || appearance === "danger" || appearance === "discovery") {
    return "invert";
  }
  return "inherit";
}
function renderLoadingOverlay(_ref2) {
  var appearance = _ref2.appearance, spacing3 = _ref2.spacing, isDisabled = _ref2.isDisabled, isSelected = _ref2.isSelected, testId = _ref2.testId;
  return import_react57.default.createElement(spinner_default, {
    size: getIconSpacing(spacing3),
    appearance: getSpinnerAppearance({
      appearance,
      isDisabled,
      isSelected
    }),
    testId: testId ? "".concat(testId, "--loading-spinner") : void 0
  });
}

// node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/button-base.js
var _excluded9 = ["appearance", "autoFocus", "isDisabled", "isLoading", "isSelected", "isIconButton", "isCircle", "hasIconBefore", "hasIconAfter", "shouldFitContainer", "spacing", "ariaLabel", "ariaLabelledBy", "children", "interactionName", "onClick", "onMouseDown", "onMouseDownCapture", "onMouseUp", "onMouseUpCapture", "onKeyDown", "onKeyDownCapture", "onKeyUp", "onKeyUpCapture", "onTouchStart", "onTouchStartCapture", "onTouchEnd", "onTouchEndCapture", "onPointerDown", "onPointerDownCapture", "onPointerUp", "onPointerUpCapture", "onClickCapture", "testId", "analyticsContext", "componentName", "role", "onMouseOver", "onMouseOut", "onFocus", "onBlur", "onMouseMove", "type"];
var _excluded25 = ["className", "css", "as", "style"];
var LOADING_LABEL = ", Loading";
var styles10 = {
  base: "_2rkosqtm _11c82smr _v5649dqc _189eidpf _1rjc12x7 _1e0c116y _vchhusvi _1bsb1wug _p12f1osq _kqswh2mm _4cvr1q9y _1bah1h6o _gy1p1b66 _1o9zidpf _4t3iviql _k48p1wq8 _y4tiutpp _bozgutpp _y3gn1h6o _s7n4nkob _14mj1kw7 _9v7aze3t _1tv3nqa1 _39yqe4h9 _11fnglyw _18postnw",
  linkDecorationUnset: "_4bfu1r31 _1hmsglyw _ajmmnqa1 _1a3b1r31 _4fprglyw _5goinqa1 _9oik1r31 _1bnxglyw _jf4cnqa1 _1nrm1r31 _c2waglyw _1iohnqa1",
  disabled: "_80om13gf _bfhk1fvb _syaz1lh4 _aetrglyw _irr31fvb _30l31lh4 _1di61fvb _9h8h1lh4",
  spacingCompact: "_1rjcv77o _gy1p1b66 _4t3i1k8s _y4tiutpp _bozgutpp _s7n4nkob",
  circle: "_2rko14q2",
  fullWidth: "_1bsb1osq",
  loading: "_80om15jw",
  iconButton: "_4t3iviql _1bsbviql _y4tize3t _bozgze3t",
  iconButtonCompact: "_4t3i1k8s _1bsb1k8s",
  buttonIconBefore: "_bozgu2gc",
  buttonIconAfter: "_y4tiu2gc",
  splitButton: "_g0pbb4wl",
  loadingOverlay: "_1e0c1txw _kqswstnw _4cvr1h6o _1bah1h6o _u7coze3t _152tze3t _rjxpze3t _1e02ze3t",
  navigationSplitButton: "_1bsb1tcg _bfhksm61 _y4ti12x7 _bozg12x7"
};
var defaultStyles = {
  root: "_bfhk1j54 _syaz10s3 _105310s3 _f8pj10s3 _30l310s3 _9h8h10s3",
  rootRefreshed: "_bfhksm61 _syaz1gjq _8l3mmuej _aetrb3bt _10531gjq _f8pj1gjq _30l31gjq _9h8h1gjq",
  interactive: "_irr3yw9d _30l310s3 _1di6ih13 _9h8h10s3",
  interactiveRefreshed: "_irr3166n _30l31gjq _1di61dty _9h8h1gjq"
};
var primaryStyles = {
  root: "_bfhkomb0 _syaz15cr _105315cr _f8pj15cr _30l315cr _9h8h15cr",
  interactive: "_30l315cr _irr31wqm _9h8h15cr _1di617hq"
};
var warningStyles = {
  root: "_bfhk1ikc _syazal3n _1053al3n _f8pjal3n _30l3al3n _9h8hal3n",
  interactive: "_30l3al3n _irr31j43 _9h8hal3n _1di6h4op"
};
var dangerStyles = {
  root: "_bfhk1v7l _syaz15cr _105315cr _f8pj15cr _30l315cr _9h8h15cr",
  interactive: "_30l315cr _irr31rwk _9h8h15cr _1di6yycf"
};
var discoveryStyles = {
  root: "_bfhk1vbi _syaz15cr _105315cr _f8pj15cr _30l315cr _9h8h15cr",
  interactive: "_30l315cr _irr37gr8 _9h8h15cr _1di61wu2"
};
var subtleStyles = {
  root: "_bfhkqtfy _syaz10s3 _105310s3 _f8pj10s3 _30l310s3 _9h8h10s3",
  rootRefreshed: "_bfhkqtfy _syaz1gjq _10531gjq _f8pj1gjq _30l31gjq _9h8h1gjq",
  interactive: "_irr34mfv _30l310s3 _1di619qy _9h8h10s3",
  interactiveRefreshed: "_irr34mfv _30l31gjq _1di619qy _9h8h1gjq"
};
var selectedStyles = {
  root: "_bfhk7btw _syaz1pke _10531pke _f8pj1pke _30l31pke _9h8h1pke",
  rootRefreshed: "_bfhkfg4m _syaz1ldt _8l3mcoux _aetrb3bt _10531ldt _f8pj1ldt _30l31ldt _9h8h1ldt",
  insideSplitButton: "_1pbycs5v",
  interactive: "_irr3t71w _30l31pke _1di6yssv _9h8h1pke",
  warning: "_bfhkvdtc _syaz16q2 _30l31pke _irr3vdtc _9h8h1pke _1di6vdtc",
  danger: "_bfhkbeib _syaz1pke _30l31pke _irr3beib _9h8h1pke _1di6beib",
  discovery: "_bfhk1g49 _syaz1pke _30l31pke _irr31g49 _9h8h1pke _1di61g49"
};
var ButtonBase = import_react58.default.forwardRef(function(_ref, ref) {
  var propAppearance = _ref.appearance, _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus, _ref$isDisabled = _ref.isDisabled, propIsDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, _ref$isSelected = _ref.isSelected, propIsSelected = _ref$isSelected === void 0 ? false : _ref$isSelected, _ref$isIconButton = _ref.isIconButton, isIconButton = _ref$isIconButton === void 0 ? false : _ref$isIconButton, _ref$isCircle = _ref.isCircle, isCircle = _ref$isCircle === void 0 ? false : _ref$isCircle, _ref$hasIconBefore = _ref.hasIconBefore, hasIconBefore = _ref$hasIconBefore === void 0 ? false : _ref$hasIconBefore, _ref$hasIconAfter = _ref.hasIconAfter, hasIconAfter = _ref$hasIconAfter === void 0 ? false : _ref$hasIconAfter, _ref$shouldFitContain = _ref.shouldFitContainer, shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain, _ref$spacing = _ref.spacing, propSpacing = _ref$spacing === void 0 ? "default" : _ref$spacing, ariaLabel = _ref.ariaLabel, ariaLabelledBy = _ref.ariaLabelledBy, children = _ref.children, interactionName = _ref.interactionName, onClick = _ref.onClick, onMouseDown = _ref.onMouseDown, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUp = _ref.onMouseUp, onMouseUpCapture = _ref.onMouseUpCapture, onKeyDown = _ref.onKeyDown, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUp = _ref.onKeyUp, onKeyUpCapture = _ref.onKeyUpCapture, onTouchStart = _ref.onTouchStart, onTouchStartCapture = _ref.onTouchStartCapture, onTouchEnd = _ref.onTouchEnd, onTouchEndCapture = _ref.onTouchEndCapture, onPointerDown = _ref.onPointerDown, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUp = _ref.onPointerUp, onPointerUpCapture = _ref.onPointerUpCapture, onClickCapture = _ref.onClickCapture, testId = _ref.testId, analyticsContext = _ref.analyticsContext, componentName = _ref.componentName, role = _ref.role, onMouseOver = _ref.onMouseOver, onMouseOut = _ref.onMouseOut, onFocus = _ref.onFocus, onBlur = _ref.onBlur, onMouseMove = _ref.onMouseMove, type = _ref.type, unsafeRest = _objectWithoutProperties(_ref, _excluded9);
  var localRef = (0, import_react58.useRef)(null);
  var splitButtonContext = useSplitButtonContext();
  var loadingLabelId = useId();
  var isSplitButton = Boolean(splitButtonContext);
  var isNavigationSplitButton = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isNavigationSplitButton) || false;
  var isDefaultAppearanceSplitButton = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.appearance) === "default";
  var appearance = isDefaultAppearanceSplitButton && fg("platform-component-visual-refresh") ? "subtle" : propAppearance || (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.appearance) || "default";
  var spacing3 = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.spacing) || propSpacing;
  var isDisabled = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isDisabled) || propIsDisabled;
  var isInteractive = !isDisabled && !isLoading;
  var isEffectivelyDisabled = isDisabled || isLoading;
  var isSelected = propIsSelected && !isDisabled;
  useAutoFocus(localRef, autoFocus);
  var _className = unsafeRest.className, _css = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = _objectWithoutProperties(unsafeRest, _excluded25);
  return import_react58.default.createElement(pressable_default, _extends({}, saferRest, {
    componentName: componentName || "button",
    analyticsContext,
    role,
    ref: mergeRefs([localRef, ref]),
    xcss: cx2(
      styles10.base,
      appearance === "default" && (fg("platform-component-visual-refresh") ? defaultStyles.rootRefreshed : defaultStyles.root),
      appearance === "default" && isInteractive && (fg("platform-component-visual-refresh") ? defaultStyles.interactiveRefreshed : defaultStyles.interactive),
      appearance === "primary" && primaryStyles.root,
      appearance === "primary" && isInteractive && primaryStyles.interactive,
      appearance === "warning" && warningStyles.root,
      appearance === "warning" && isInteractive && warningStyles.interactive,
      appearance === "danger" && dangerStyles.root,
      appearance === "danger" && isInteractive && dangerStyles.interactive,
      appearance === "discovery" && discoveryStyles.root,
      appearance === "discovery" && isInteractive && discoveryStyles.interactive,
      appearance === "subtle" && (fg("platform-component-visual-refresh") ? subtleStyles.rootRefreshed : subtleStyles.root),
      appearance === "subtle" && isInteractive && (fg("platform-component-visual-refresh") ? subtleStyles.interactiveRefreshed : subtleStyles.interactive),
      styles10.linkDecorationUnset,
      isSelected && (fg("platform-component-visual-refresh") ? selectedStyles.rootRefreshed : selectedStyles.root),
      isSelected && isSplitButton && selectedStyles.insideSplitButton,
      isSelected && isInteractive && selectedStyles.interactive,
      // TODO: remove me once we kill color fallbacks
      isSelected && appearance === "danger" && selectedStyles.danger,
      // TODO: remove me once we kill color fallbacks
      isSelected && appearance === "warning" && selectedStyles.warning,
      // TODO: remove me once we kill color fallbacks
      isSelected && appearance === "discovery" && selectedStyles.discovery,
      isDisabled && styles10.disabled,
      isCircle && !isSplitButton && styles10.circle,
      spacing3 === "compact" && styles10.spacingCompact,
      hasIconBefore && styles10.buttonIconBefore,
      shouldFitContainer && styles10.fullWidth,
      hasIconAfter && styles10.buttonIconAfter,
      isIconButton && styles10.iconButton,
      isIconButton && spacing3 === "compact" && styles10.iconButtonCompact,
      isLoading && styles10.loading,
      isSplitButton && styles10.splitButton,
      isNavigationSplitButton && styles10.navigationSplitButton
    ),
    isDisabled: isEffectivelyDisabled,
    "aria-label": isLoading && ariaLabel && !ariaLabelledBy ? "".concat(ariaLabel, " ").concat(LOADING_LABEL) : ariaLabel,
    "aria-labelledby": isLoading && ariaLabelledBy ? "".concat(ariaLabelledBy, " ").concat(loadingLabelId) : ariaLabelledBy,
    onClick
  }, blockEvents(isEffectivelyDisabled, {
    onMouseDownCapture,
    onMouseUpCapture,
    onKeyDownCapture,
    onKeyUpCapture,
    onTouchStartCapture,
    onTouchEndCapture,
    onPointerDownCapture,
    onPointerUpCapture,
    onClickCapture
  }), {
    testId,
    onMouseOver,
    onFocus,
    onMouseMove,
    onBlur,
    type,
    interactionName,
    onMouseDown,
    onMouseUp,
    onKeyDown,
    onMouseOut,
    onKeyUp,
    onTouchStart,
    onTouchEnd,
    onPointerDown,
    onPointerUp
  }), import_react58.default.createElement(SplitButtonContext.Provider, {
    value: void 0
  }, children, isLoading && import_react58.default.createElement("span", {
    className: ax([styles10.loadingOverlay])
  }, renderLoadingOverlay({
    spacing: spacing3,
    appearance,
    isDisabled,
    isSelected,
    testId
  })), isLoading && (ariaLabelledBy || !ariaLabel) && import_react58.default.createElement(visually_hidden_default, {
    id: loadingLabelId
  }, LOADING_LABEL)));
});
var button_base_default = ButtonBase;

// node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/content.js
init_runtime2();
var import_react59 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/content.compiled.css";
var styles11 = {
  text: "_1reo15vq _18m915vq _16jlkb7n _1o9zkb7n _1bto1l2s _o5721q9c",
  icon: "_1e0c1txw _16jlidpf _1o9zidpf _1wpz1h6o _1wybidpf _vwz4idpf _uiztglyw",
  beforeIcon: "_1he91b66 _w795v77o",
  afterIcon: "_1he9v77o _w7951b66",
  common: "_v564g17y",
  fade: "_tzy4idpf"
};
var Content = function Content2(_ref) {
  var children = _ref.children, _ref$type = _ref.type, type = _ref$type === void 0 ? "text" : _ref$type, isLoading = _ref.isLoading, position = _ref.position;
  return import_react59.default.createElement("span", {
    className: ax([styles11.common, type === "text" && styles11.text, type === "icon" && styles11.icon, isLoading && styles11.fade, position === "before" && styles11.beforeIcon, position === "after" && styles11.afterIcon])
  }, children);
};
var content_default = Content;

// node_modules/@atlaskit/button/dist/esm/new-button/variants/shared/icon-renderer.js
var import_react60 = __toESM(require_react());
function isIconRenderProp(func) {
  return !func.displayName && // most function components and class components have a displayName, negate them
  !func.render && // forwardRef doesn't require a display name, however it does include a render function, negate them
  typeof func === "function";
}
var IconRenderer = function IconRenderer2(_ref) {
  var Icon5 = _ref.icon;
  return import_react60.default.createElement(import_react60.default.Fragment, null, isIconRenderProp(Icon5) ? Icon5({
    label: "",
    color: "currentColor"
  }) : import_react60.default.createElement(Icon5, {
    label: "",
    color: "currentColor"
  }));
};
var icon_renderer_default = IconRenderer;

// node_modules/@atlaskit/button/dist/esm/new-button/variants/default/button.js
var _excluded10 = ["analyticsContext", "appearance", "aria-label", "aria-labelledby", "autoFocus", "children", "iconAfter", "iconBefore", "interactionName", "isDisabled", "isLoading", "isSelected", "onClick", "onClickCapture", "onKeyDownCapture", "onKeyUpCapture", "onMouseDownCapture", "onMouseUpCapture", "onPointerDownCapture", "onPointerUpCapture", "onTouchEndCapture", "onTouchStartCapture", "shouldFitContainer", "spacing", "testId", "type"];
var _excluded26 = ["className", "css", "as", "style"];
var Button = import_react61.default.memo(import_react61.default.forwardRef(function Button2(_ref, ref) {
  var analyticsContext = _ref.analyticsContext, appearance = _ref.appearance, ariaLabel = _ref["aria-label"], ariaLabelledBy = _ref["aria-labelledby"], autoFocus = _ref.autoFocus, children = _ref.children, iconAfter = _ref.iconAfter, iconBefore = _ref.iconBefore, interactionName = _ref.interactionName, isDisabled = _ref.isDisabled, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, isSelected = _ref.isSelected, onClick = _ref.onClick, onClickCapture = _ref.onClickCapture, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUpCapture = _ref.onKeyUpCapture, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUpCapture = _ref.onMouseUpCapture, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUpCapture = _ref.onPointerUpCapture, onTouchEndCapture = _ref.onTouchEndCapture, onTouchStartCapture = _ref.onTouchStartCapture, shouldFitContainer = _ref.shouldFitContainer, spacing3 = _ref.spacing, testId = _ref.testId, _ref$type = _ref.type, type = _ref$type === void 0 ? "button" : _ref$type, unsafeRest = _objectWithoutProperties(_ref, _excluded10);
  var _className = unsafeRest.className, _css = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = _objectWithoutProperties(unsafeRest, _excluded26);
  return import_react61.default.createElement(button_base_default, _extends({
    analyticsContext,
    ref,
    appearance,
    autoFocus,
    isDisabled,
    isLoading,
    isSelected,
    hasIconBefore: Boolean(iconBefore),
    hasIconAfter: Boolean(iconAfter),
    shouldFitContainer,
    spacing: spacing3,
    ariaLabel,
    ariaLabelledBy,
    onClick,
    onClickCapture,
    onKeyDownCapture,
    onKeyUpCapture,
    onMouseDownCapture,
    onMouseUpCapture,
    onPointerDownCapture,
    onPointerUpCapture,
    onTouchStartCapture,
    onTouchEndCapture,
    testId,
    componentName: "Button",
    type,
    interactionName
  }, saferRest), import_react61.default.createElement(import_react61.Fragment, null, iconBefore && import_react61.default.createElement(content_default, {
    type: "icon",
    position: "before",
    isLoading
  }, import_react61.default.createElement(icon_renderer_default, {
    icon: iconBefore
  })), children && import_react61.default.createElement(content_default, {
    isLoading
  }, children), iconAfter && import_react61.default.createElement(content_default, {
    type: "icon",
    position: "after",
    isLoading
  }, import_react61.default.createElement(icon_renderer_default, {
    icon: iconAfter
  }))));
}));
Button.displayName = "Button";
var button_default = Button;

// node_modules/@atlaskit/button/dist/esm/new-button/variants/default/link.js
init_extends();
init_objectWithoutProperties();
var React46 = __toESM(require_react());
init_runtime2();
var import_react62 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/button/dist/esm/new-button/variants/default/link.compiled.css";
init_esm();
var _excluded11 = ["analyticsContext", "appearance", "aria-label", "aria-labelledby", "autoFocus", "children", "href", "iconAfter", "iconBefore", "interactionName", "isDisabled", "isSelected", "onClick", "onClickCapture", "onKeyDownCapture", "onKeyUpCapture", "onMouseDownCapture", "onMouseUpCapture", "onPointerDownCapture", "onPointerUpCapture", "onTouchEndCapture", "onTouchStartCapture", "shouldFitContainer", "spacing", "testId"];
var _excluded27 = ["className", "css", "as", "style"];
var styles12 = {
  base: "_2rkosqtm _11c82smr _v5649dqc _189eidpf _1rjc12x7 _1e0c116y _vchhusvi _1bsb1wug _p12f1osq _kqswh2mm _4cvr1q9y _1bah1h6o _gy1p1b66 _1o9zidpf _4t3iviql _k48p1wq8 _y4tiutpp _bozgutpp _y3gn1h6o _s7n4nkob _14mj1kw7 _9v7aze3t _1tv3nqa1 _39yqe4h9 _11fnglyw _18postnw",
  linkDecorationUnset: "_4bfu1snc _1hmsagmp _ajmmvv82 _1a3b1r31 _4fprglyw _5goinqa1 _9oik1r31 _1bnxglyw _jf4cnqa1 _1nrm1r31 _c2waglyw _1iohnqa1",
  disabled: "_80om13gf _bfhksyzs _syaz1lh4 _aetrglyw _irr3syzs _30l31lh4 _1di6syzs _9h8h1lh4",
  spacingCompact: "_1rjcv77o _gy1p1b66 _4t3i1k8s _y4tiutpp _bozgutpp _s7n4nkob",
  buttonIconBefore: "_bozgu2gc",
  buttonIconAfter: "_y4tiu2gc",
  fullWidth: "_1bsb1osq"
};
var defaultStyles2 = {
  root: "_bfhk1j54 _syaz10s3 _105310s3 _f8pj10s3 _irr3yw9d _30l310s3 _1di6ip91 _9h8h10s3",
  rootRefreshed: "_bfhksm61 _syaz1gjq _8l3mmuej _aetrb3bt _10531gjq _f8pj1gjq _irr3166n _30l31gjq _1di61dty _9h8h1gjq"
};
var primaryStyles2 = {
  root: "_bfhkomb0 _syaz15cr _105315cr _f8pj15cr _30l315cr _irr31wqm _9h8h15cr _1di617hq"
};
var warningStyles2 = {
  root: "_bfhk1ikc _syazal3n _1053al3n _f8pjal3n _30l3al3n _irr31j43 _9h8hal3n _1di6h4op"
};
var dangerStyles2 = {
  root: "_bfhk1v7l _syaz15cr _105315cr _f8pj15cr _30l315cr _irr31rwk _9h8h15cr _1di6yycf"
};
var discoveryStyles2 = {
  root: "_bfhk1vbi _syaz15cr _105315cr _f8pj15cr _30l315cr _irr37gr8 _9h8h15cr _1di61wu2"
};
var subtleStyles2 = {
  root: "_bfhkqtfy _syaz10s3 _105310s3 _f8pj10s3 _irr34mfv _30l310s3 _1di619qy _9h8h10s3",
  rootRefreshed: "_bfhkqtfy _syaz1gjq _10531gjq _f8pj1mjl _irr34mfv _30l31gjq _1di619qy _9h8h1gjq"
};
var selectedStyles2 = {
  root: "_bfhk7btw _syaz1pke _10531pke _f8pj1pke _irr3i1yw _30l31pke _1di619ru _9h8h1pke",
  rootRefreshed: "_bfhkfg4m _syaz1ldt _8l3mcoux _aetrb3bt _10531ldt _f8pj1ldt _30l31ldt _9h8h1ldt",
  warning: "_bfhkvdtc _syaz16q2 _30l31pke _irr3vdtc _9h8h1pke _1di6vdtc",
  danger: "_bfhkbeib _syaz1pke _30l31pke _irr3beib _9h8h1pke _1di6beib",
  discovery: "_bfhk1g49 _syaz1pke _30l31pke _irr31g49 _9h8h1pke _1di61g49"
};
var LinkButtonBase = function LinkButtonBase2(_ref, ref) {
  var analyticsContext = _ref.analyticsContext, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? "default" : _ref$appearance, ariaLabel = _ref["aria-label"], ariaLabelledBy = _ref["aria-labelledby"], _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus, children = _ref.children, href = _ref.href, iconAfter = _ref.iconAfter, iconBefore = _ref.iconBefore, interactionName = _ref.interactionName, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, onClick = _ref.onClick, onClickCapture = _ref.onClickCapture, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUpCapture = _ref.onKeyUpCapture, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUpCapture = _ref.onMouseUpCapture, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUpCapture = _ref.onPointerUpCapture, onTouchEndCapture = _ref.onTouchEndCapture, onTouchStartCapture = _ref.onTouchStartCapture, shouldFitContainer = _ref.shouldFitContainer, spacing3 = _ref.spacing, testId = _ref.testId, unsafeRest = _objectWithoutProperties(_ref, _excluded11);
  var _className = unsafeRest.className, _css = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = _objectWithoutProperties(unsafeRest, _excluded27);
  var hasIconAfter = Boolean(iconAfter);
  var hasIconBefore = Boolean(iconBefore);
  var localRef = (0, import_react62.useRef)(null);
  useAutoFocus(localRef, autoFocus);
  var combinedRef = mergeRefs([localRef, ref]);
  return React46.createElement(anchor_default, _extends({
    analyticsContext,
    ref: combinedRef,
    href: isDisabled ? void 0 : href,
    role: isDisabled ? "link" : void 0,
    "aria-disabled": isDisabled === true ? true : void 0,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    onClick,
    onClickCapture,
    onKeyDownCapture,
    onKeyUpCapture,
    onMouseDownCapture,
    onMouseUpCapture,
    onPointerDownCapture,
    onPointerUpCapture,
    onTouchEndCapture,
    onTouchStartCapture,
    testId,
    componentName: "LinkButton",
    interactionName
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, saferRest, {
    xcss: cx2(
      styles12.base,
      appearance === "default" && (fg("platform-component-visual-refresh") ? defaultStyles2.rootRefreshed : defaultStyles2.root),
      appearance === "primary" && primaryStyles2.root,
      appearance === "warning" && warningStyles2.root,
      appearance === "danger" && dangerStyles2.root,
      appearance === "discovery" && discoveryStyles2.root,
      appearance === "subtle" && (fg("platform-component-visual-refresh") ? subtleStyles2.rootRefreshed : subtleStyles2.root),
      styles12.linkDecorationUnset,
      isSelected && (fg("platform-component-visual-refresh") ? selectedStyles2.rootRefreshed : selectedStyles2.root),
      // TODO: remove me once we kill color fallbacks
      isSelected && appearance === "danger" && selectedStyles2.danger,
      // TODO: remove me once we kill color fallbacks
      isSelected && appearance === "warning" && selectedStyles2.warning,
      // TODO: remove me once we kill color fallbacks
      isSelected && appearance === "discovery" && selectedStyles2.discovery,
      isDisabled && styles12.disabled,
      spacing3 === "compact" && styles12.spacingCompact,
      hasIconBefore && styles12.buttonIconBefore,
      hasIconAfter && styles12.buttonIconAfter,
      shouldFitContainer && styles12.fullWidth
    )
  }), iconBefore && React46.createElement(content_default, {
    type: "icon",
    position: "before",
    isLoading: false
  }, React46.createElement(icon_renderer_default, {
    icon: iconBefore
  })), children && React46.createElement(content_default, {
    isLoading: false
  }, children), iconAfter && React46.createElement(content_default, {
    type: "icon",
    position: "after",
    isLoading: false
  }, React46.createElement(icon_renderer_default, {
    icon: iconAfter
  })));
};
var LinkButton = (0, import_react62.forwardRef)(LinkButtonBase);
LinkButton.displayName = "LinkButton";

// node_modules/@atlaskit/button/dist/esm/new-button/variants/icon/button.js
init_extends();
init_objectWithoutProperties();
var import_react96 = __toESM(require_react());

// node_modules/@atlaskit/tooltip/dist/esm/tooltip.js
init_extends();
init_slicedToArray();
init_defineProperty();
var import_react95 = __toESM(require_react());
var import_bind_event_listener8 = __toESM(require_dist());

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/ds-lib/dist/esm/utils/noop.js
function noop6() {
}

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-close-on-escape-press.js
var import_react63 = __toESM(require_react());
var import_bind_event_listener5 = __toESM(require_dist());
init_esm();

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/ds-lib/dist/esm/utils/keycodes.js
var ESCAPE = "Escape";

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-close-on-escape-press.js
function useCloseOnEscapePress(_ref) {
  var onClose = _ref.onClose, isDisabled = _ref.isDisabled;
  var escapePressed = (0, import_react63.useRef)(false);
  var onKeyDown = (0, import_react63.useCallback)(function(e) {
    if (isDisabled || escapePressed.current || e.key !== ESCAPE) {
      return;
    }
    escapePressed.current = true;
    onClose(e);
  }, [onClose, isDisabled]);
  var onKeyUp = (0, import_react63.useCallback)(function() {
    escapePressed.current = false;
  }, []);
  (0, import_react63.useEffect)(function() {
    if (isDisabled && fg("platform_only_attach_escape_handler_on_view")) {
      return;
    }
    return (0, import_bind_event_listener5.bindAll)(document, [{
      type: "keydown",
      listener: onKeyDown
    }, {
      type: "keyup",
      listener: onKeyUp
    }], {
      capture: false
    });
  }, [onKeyDown, onKeyUp, isDisabled]);
}

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-stable-ref.js
var import_react64 = __toESM(require_react());
function useStableRef(value) {
  var ref = (0, import_react64.useRef)(value);
  (0, import_react64.useEffect)(function() {
    ref.current = value;
  }, [value]);
  return ref;
}

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer.js
init_slicedToArray();
var import_react66 = __toESM(require_react());

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer-context.js
var import_react65 = __toESM(require_react());
var OpenLayerObserverContext = (0, import_react65.createContext)(null);

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer.js
var noNamespaceSymbol = Symbol("no-namespace");

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-notify-open-layer-observer.js
var import_react69 = __toESM(require_react());

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-open-layer-observer-namespace.js
var import_react68 = __toESM(require_react());

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer-namespace-context.js
var import_react67 = __toESM(require_react());
var OpenLayerObserverNamespaceContext = (0, import_react67.createContext)(null);

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-open-layer-observer-namespace.js
function useOpenLayerObserverNamespace() {
  var namespace = (0, import_react68.useContext)(OpenLayerObserverNamespaceContext);
  return namespace;
}

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-notify-open-layer-observer.js
function useNotifyOpenLayerObserver(_ref) {
  var isOpen = _ref.isOpen, onClose = _ref.onClose;
  var context = (0, import_react69.useContext)(OpenLayerObserverContext);
  var namespace = useOpenLayerObserverNamespace();
  (0, import_react69.useEffect)(function() {
    if (context === null) {
      return;
    }
    if (!isOpen) {
      return;
    }
    return context.onClose(onClose, {
      namespace
    });
  }, [context, isOpen, namespace, onClose]);
}

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-open-layer-observer.js
var import_react70 = __toESM(require_react());

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer-namespace-provider.js
var import_react71 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/utils/durations.js
var durations = {
  none: 0,
  small: 100,
  medium: 350,
  large: 700
};
var EXITING_MOTION_MULTIPLIER = 0.5;
var exitingDurations = {
  none: durations.none,
  small: durations.small * EXITING_MOTION_MULTIPLIER,
  medium: durations.medium * EXITING_MOTION_MULTIPLIER,
  large: durations.large * EXITING_MOTION_MULTIPLIER
};

// node_modules/@atlaskit/motion/dist/esm/utils/accessibility.js
init_slicedToArray();
var import_react72 = __toESM(require_react());
var import_bind_event_listener6 = __toESM(require_dist());
var isMatchMediaAvailable4 = function isMatchMediaAvailable5() {
  return typeof window !== "undefined" && "matchMedia" in window;
};
var isReducedMotion = function isReducedMotion2() {
  if (!isMatchMediaAvailable4()) {
    return false;
  }
  var _window$matchMedia2 = window.matchMedia("(prefers-reduced-motion: reduce)"), matches = _window$matchMedia2.matches;
  return matches;
};

// node_modules/@atlaskit/motion/dist/esm/entering/fade-in.js
var import_react79 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/entering/keyframes-motion.js
init_slicedToArray();
var import_react78 = __toESM(require_react());
init_runtime2();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/motion/dist/esm/entering/keyframes-motion.compiled.css";

// node_modules/@atlaskit/motion/dist/esm/utils/timer-hooks.js
var import_react73 = __toESM(require_react());
var getHookDeps = function getHookDeps2(opts) {
  switch (opts.cleanup) {
    case "next-effect":
      return void 0;
    case "unmount":
    default:
      return [];
  }
};
var useSetTimeout = function useSetTimeout2() {
  var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
    cleanup: "unmount"
  };
  var timeouts = (0, import_react73.useRef)([]);
  (0, import_react73.useEffect)(function() {
    return function() {
      if (timeouts.current.length) {
        timeouts.current.forEach(function(id) {
          return clearTimeout(id);
        });
        timeouts.current = [];
      }
    };
  }, getHookDeps(opts));
  return (0, import_react73.useCallback)(function(handler, timeout) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }
    var id = setTimeout.apply(void 0, [function() {
      timeouts.current = timeouts.current.filter(function(timeoutId) {
        return timeoutId !== id;
      });
      handler();
    }, timeout].concat(args));
    timeouts.current.push(id);
  }, []);
};

// node_modules/@atlaskit/motion/dist/esm/entering/exiting-persistence.js
init_slicedToArray();
var import_react74 = __toESM(require_react());
var emptyContext = {
  // Motions will always appear if not inside a exiting persistence component.
  appear: true,
  isExiting: false
};
var ExitingContext = (0, import_react74.createContext)(emptyContext);
var wrapChildWithContextProvider = function wrapChildWithContextProvider2(child) {
  var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : emptyContext;
  return import_react74.default.createElement(ExitingContext.Provider, {
    key: "".concat(child.key, "-provider"),
    value
  }, child);
};
var childrenToArray = function childrenToArray2(children) {
  var childrenAsArray = [];
  import_react74.Children.toArray(children).forEach(function(child) {
    if (typeof child !== "boolean" && Boolean(child)) {
      childrenAsArray.push(child);
    }
  });
  return childrenAsArray;
};
var spliceNewElementsIntoPrevious = function spliceNewElementsIntoPrevious2(current, previous) {
  var splicedChildren = previous.concat([]);
  var previousMap = childrenToObj(previous);
  for (var i = 0; i < current.length; i++) {
    var child = current[i];
    var childIsNew = !previousMap[child.key];
    if (childIsNew) {
      splicedChildren.splice(i + 1, 0, child);
    }
  }
  return splicedChildren;
};
var childrenToObj = function childrenToObj2(children) {
  return children.reduce(function(acc, child) {
    acc[child.key] = child;
    return acc;
  }, {});
};
var getMissingKeys = function getMissingKeys2(current, previous) {
  var currentMapKeys = new Set(current.map(function(child) {
    return child.key;
  }));
  var missing = /* @__PURE__ */ new Set();
  for (var i = 0; i < previous.length; i++) {
    var element = previous[i];
    var _key = element.key;
    if (!currentMapKeys.has(_key)) {
      missing.add(_key);
    }
  }
  return missing;
};
var ExitingPersistence = (0, import_react74.memo)(function(_ref) {
  var _ref$appear = _ref.appear, appear = _ref$appear === void 0 ? false : _ref$appear, children = _ref.children, exitThenEnter = _ref.exitThenEnter;
  var _useState = (0, import_react74.useState)([null, children]), _useState2 = _slicedToArray(_useState, 2), stateChildren = _useState2[0], setChildren = _useState2[1];
  var _useState3 = (0, import_react74.useState)([]), _useState4 = _slicedToArray(_useState3, 2), exitingChildren = _useState4[0], setExitingChildren = _useState4[1];
  var _useState5 = (0, import_react74.useState)(function() {
    return {
      appear,
      isExiting: false
    };
  }), _useState6 = _slicedToArray(_useState5, 2), defaultContext = _useState6[0], setDefaultContext = _useState6[1];
  (0, import_react74.useEffect)(function() {
    if (!defaultContext.appear) {
      setDefaultContext({
        appear: true,
        isExiting: false
      });
    }
  }, []);
  if (typeof stateChildren === "boolean") {
    return children;
  }
  var _stateChildren = _slicedToArray(stateChildren, 2), previousChildren = _stateChildren[0], currentChildren = _stateChildren[1];
  var previous = childrenToArray(previousChildren);
  var current = childrenToArray(currentChildren);
  if (currentChildren !== children) {
    setChildren([currentChildren, children]);
  }
  var missingKeys = getMissingKeys(current, previous);
  var isSomeChildRemoved = !!missingKeys.size;
  var visibleChildren = current;
  if (isSomeChildRemoved) {
    visibleChildren = spliceNewElementsIntoPrevious(current, previous);
  }
  if (exitThenEnter) {
    if (exitingChildren.length) {
      visibleChildren = exitingChildren;
    } else {
      var nextExitingChildren = visibleChildren.filter(function(child) {
        return missingKeys.has(child.key);
      });
      if (nextExitingChildren.length) {
        setExitingChildren(nextExitingChildren);
      }
    }
  }
  if (missingKeys.size) {
    visibleChildren = visibleChildren.map(function(child) {
      var isExiting = missingKeys.has(child.key);
      return wrapChildWithContextProvider(child, {
        appear: true,
        isExiting,
        onFinish: isExiting ? function() {
          missingKeys.delete(child.key);
          if (missingKeys.size === 0) {
            setChildren([null, children]);
            setExitingChildren([]);
          }
        } : void 0
      });
    });
  } else {
    visibleChildren = visibleChildren.map(function(child) {
      return wrapChildWithContextProvider(child, defaultContext);
    });
  }
  return visibleChildren;
});
var useExitingPersistence = function useExitingPersistence2() {
  return (0, import_react74.useContext)(ExitingContext);
};
ExitingPersistence.displayName = "ExitingPersistence";
var exiting_persistence_default = ExitingPersistence;

// node_modules/@atlaskit/motion/dist/esm/entering/staggered-entrance.js
init_slicedToArray();
var import_react77 = __toESM(require_react());

// node_modules/@atlaskit/ds-lib/dist/esm/utils/noop.js
function noop7() {
}

// node_modules/@atlaskit/motion/dist/esm/utils/use-layout-effect.js
var import_react75 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/utils/use-unique-id.js
var import_react76 = __toESM(require_react());
function useUniqueId() {
  var identifier = (0, import_react76.useRef)("");
  if (!identifier.current) {
    identifier.current = "_" + (Number(String(Math.random()).slice(2)) + Date.now() + Math.round(performance.now())).toString(36);
  }
  return identifier.current;
}

// node_modules/@atlaskit/motion/dist/esm/entering/staggered-entrance.js
var StaggeredEntranceContext = (0, import_react77.createContext)(function() {
  return {
    isReady: true,
    delay: 0,
    ref: noop7
  };
});
var useStaggeredEntrance = function useStaggeredEntrance2() {
  var indentifier = useUniqueId();
  var context = (0, import_react77.useContext)(StaggeredEntranceContext);
  return context(indentifier);
};

// node_modules/@atlaskit/motion/dist/esm/entering/keyframes-motion.js
var EnteringMotion = function EnteringMotion2(_ref) {
  var children = _ref.children, animationTimingFunction = _ref.animationTimingFunction, _ref$animationTimingF = _ref.animationTimingFunctionExiting, animationTimingFunctionExiting = _ref$animationTimingF === void 0 ? animationTimingFunction : _ref$animationTimingF, enteringAnimation = _ref.enteringAnimation, _ref$exitingAnimation = _ref.exitingAnimation, exitingAnimation = _ref$exitingAnimation === void 0 ? enteringAnimation : _ref$exitingAnimation, isPaused = _ref.isPaused, onFinishMotion = _ref.onFinish, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? "large" : _ref$duration;
  var staggered = useStaggeredEntrance();
  var _useExitingPersistenc = useExitingPersistence(), isExiting = _useExitingPersistenc.isExiting, onExitFinished = _useExitingPersistenc.onFinish, appear = _useExitingPersistenc.appear;
  var setTimeout2 = useSetTimeout();
  var paused = isPaused || !staggered.isReady;
  var delay = isExiting ? 0 : staggered.delay;
  var state = isExiting ? "exiting" : "entering";
  var _useState = (0, import_react78.useState)(appear), _useState2 = _slicedToArray(_useState, 2), hasAnimationStyles = _useState2[0], setHasAnimationStyles = _useState2[1];
  (0, import_react78.useEffect)(function() {
    var isCancelled = false;
    if (paused) {
      return;
    }
    if (!appear) {
      onFinishMotion && onFinishMotion(state);
      return;
    }
    var onAnimationEnd = function onAnimationEnd2() {
      if (state === "exiting") {
        onExitFinished === null || onExitFinished === void 0 || onExitFinished();
      }
      if (!isCancelled) {
        setHasAnimationStyles(false);
      }
      onFinishMotion === null || onFinishMotion === void 0 || onFinishMotion(state);
    };
    if (isReducedMotion()) {
      onAnimationEnd();
      return;
    }
    setHasAnimationStyles(true);
    setTimeout2(onAnimationEnd, isExiting ? exitingDurations[duration] : durations[duration] + delay);
    return function() {
      isCancelled = true;
    };
  }, [onExitFinished, state, isExiting, duration, delay, paused, setTimeout2]);
  return children({
    ref: staggered.ref,
    // @ts-expect-error: `ax` is not typed correctly
    className: hasAnimationStyles ? ax([ax(["_1o51eoah _1y0co91m _1bumglyw _sedtglyw"]), paused && ax(["_1y0ctrqk"]), duration === "small" && ax(["_5sag1yx9"]), duration === "medium" && ax(["_5sag1ttt"]), duration === "large" && ax(["_5sagpwmj"]), isExiting && duration === "small" && ax(["_5sag14ed"]), isExiting && duration === "medium" && ax(["_5sagluct"]), isExiting && duration === "large" && ax(["_5sag1ttt"]), isExiting && ax(["_ju255cps _1o51q7pw"]), !isExiting && animationTimingFunction === "linear" && ax(["_1pglp3kn"]), !isExiting && animationTimingFunction === "ease-out" && ax(["_1pgldkwg"]), !isExiting && animationTimingFunction === "ease-in" && ax(["_1pgl1nzg"]), !isExiting && animationTimingFunction === "ease-in-out" && ax(["_1pgl1fu8"]), isExiting && animationTimingFunction === "linear" && ax(["_1pglp3kn"]), isExiting && animationTimingFunctionExiting === "ease-out" && ax(["_1pgldkwg"]), isExiting && animationTimingFunctionExiting === "ease-in" && ax(["_1pgl1nzg"]), isExiting && animationTimingFunctionExiting === "ease-in-out" && ax(["_1pgl1fu8"]), (!isExiting && enteringAnimation === "fade-in" || isExiting && exitingAnimation === "fade-in") && ax(["_j7hq1cgr"]), (!isExiting && enteringAnimation === "fade-out" || isExiting && exitingAnimation === "fade-out") && ax(["_j7hq1lln"]), (!isExiting && enteringAnimation === "zoom-in" || isExiting && exitingAnimation === "zoom-in") && ax(["_j7hqe8p0"]), (!isExiting && enteringAnimation === "zoom-out" || isExiting && exitingAnimation === "zoom-out") && ax(["_j7hqy6ql"]), (!isExiting && enteringAnimation === "slide-in-from-top" || isExiting && exitingAnimation === "slide-in-from-top") && ax(["_j7hqqshu"]), (!isExiting && enteringAnimation === "slide-out-from-top" || isExiting && exitingAnimation === "slide-out-from-top") && ax(["_j7hq7ri4"]), (!isExiting && enteringAnimation === "slide-in-from-right" || isExiting && exitingAnimation === "slide-in-from-right") && ax(["_j7hqdfjr"]), (!isExiting && enteringAnimation === "slide-out-from-right" || isExiting && exitingAnimation === "slide-out-from-right") && ax(["_j7hqonfj"]), (!isExiting && enteringAnimation === "slide-in-from-bottom" || isExiting && exitingAnimation === "slide-in-from-bottom") && ax(["_j7hq1liq"]), (!isExiting && enteringAnimation === "slide-out-from-bottom" || isExiting && exitingAnimation === "slide-out-from-bottom") && ax(["_j7hqhnf1"]), (!isExiting && enteringAnimation === "slide-in-from-left" || isExiting && exitingAnimation === "slide-in-from-left") && ax(["_j7hq1bh1"]), (!isExiting && enteringAnimation === "slide-out-from-left" || isExiting && exitingAnimation === "slide-out-from-left") && ax(["_j7hqj08w"]), (!isExiting && enteringAnimation === "fade-in-from-top" || isExiting && exitingAnimation === "fade-in-from-top") && ax(["_j7hq2iua"]), (!isExiting && enteringAnimation === "fade-out-from-top" || isExiting && exitingAnimation === "fade-out-from-top") && ax(["_j7hq39va"]), (!isExiting && enteringAnimation === "fade-in-from-left" || isExiting && exitingAnimation === "fade-in-from-left") && ax(["_j7hq15m2"]), (!isExiting && enteringAnimation === "fade-out-from-left" || isExiting && exitingAnimation === "fade-out-from-left") && ax(["_j7hq1yiv"]), (!isExiting && enteringAnimation === "fade-in-from-bottom" || isExiting && exitingAnimation === "fade-in-from-bottom") && ax(["_j7hq1w00"]), (!isExiting && enteringAnimation === "fade-out-from-bottom" || isExiting && exitingAnimation === "fade-out-from-bottom") && ax(["_j7hqzy3z"]), (!isExiting && enteringAnimation === "fade-in-from-right" || isExiting && exitingAnimation === "fade-in-from-right") && ax(["_j7hqpqak"]), (!isExiting && enteringAnimation === "fade-out-from-right" || isExiting && exitingAnimation === "fade-out-from-right") && ax(["_j7hq1ebg"]), (!isExiting && enteringAnimation === "fade-in-from-top-constant" || isExiting && exitingAnimation === "fade-in-from-top-constant") && ax(["_j7hqm2e2"]), (!isExiting && enteringAnimation === "fade-out-from-top-constant" || isExiting && exitingAnimation === "fade-out-from-top-constant") && ax(["_j7hq97jn"]), (!isExiting && enteringAnimation === "fade-in-from-left-constant" || isExiting && exitingAnimation === "fade-in-from-left-constant") && ax(["_j7hqovgq"]), (!isExiting && enteringAnimation === "fade-out-from-left-constant" || isExiting && exitingAnimation === "fade-out-from-left-constant") && ax(["_j7hq15do"]), (!isExiting && enteringAnimation === "fade-in-from-bottom-constant" || isExiting && exitingAnimation === "fade-in-from-bottom-constant") && ax(["_j7hq797a"]), (!isExiting && enteringAnimation === "fade-out-from-bottom-constant" || isExiting && exitingAnimation === "fade-out-from-bottom-constant") && ax(["_j7hqwo7r"]), (!isExiting && enteringAnimation === "fade-in-from-right-constant" || isExiting && exitingAnimation === "fade-in-from-right-constant") && ax(["_j7hqt8u5"]), (!isExiting && enteringAnimation === "fade-out-from-right-constant" || isExiting && exitingAnimation === "fade-out-from-right-constant") && ax(["_j7hq1pgp"])]) : "",
    style: {
      animationDelay: "".concat(delay, "ms")
    }
  }, state);
};
var keyframes_motion_default = EnteringMotion;

// node_modules/@atlaskit/motion/dist/esm/entering/fade-in.js
var invertedDirection = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
};
var FadeIn = function FadeIn2(_ref) {
  var children = _ref.children, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? "large" : _ref$duration, entranceDirection = _ref.entranceDirection, exitDirection = _ref.exitDirection, _ref$distance = _ref.distance, distance = _ref$distance === void 0 ? "proportional" : _ref$distance, onFinish = _ref.onFinish, isPaused = _ref.isPaused;
  var invertedEntranceDirection = entranceDirection !== void 0 ? invertedDirection[entranceDirection] : void 0;
  var isExitDirect = Boolean(exitDirection || invertedEntranceDirection) ? "fade-out-from-".concat(exitDirection || invertedEntranceDirection).concat(distance === "proportional" ? "" : "-constant") : "fade-out";
  return import_react79.default.createElement(keyframes_motion_default, {
    duration,
    enteringAnimation: entranceDirection ? "fade-in-from-".concat(entranceDirection).concat(distance === "proportional" ? "" : "-constant") : "fade-in",
    exitingAnimation: isExitDirect,
    animationTimingFunction: "ease-in-out",
    onFinish,
    isPaused
  }, children);
};
var fade_in_default = FadeIn;

// node_modules/@atlaskit/motion/dist/esm/resizing/height.js
init_objectWithoutProperties();
init_slicedToArray();
var import_react82 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/utils/use-element-ref.js
var import_react80 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/utils/use-snapshot-before-update.js
var import_react81 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/entering/zoom-in.js
var import_react83 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/entering/slide-in.js
var import_react84 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/entering/shrink-out.js
init_slicedToArray();

// node_modules/@atlaskit/tooltip/dist/esm/tooltip.js
init_esm();

// node_modules/@atlaskit/popper/dist/esm/popper.js
init_slicedToArray();
var import_react85 = __toESM(require_react());

// node_modules/react-popper/lib/esm/Popper.js
var React59 = __toESM(require_react());

// node_modules/react-popper/lib/esm/Manager.js
var React56 = __toESM(require_react());
var ManagerReferenceNodeContext = React56.createContext();
var ManagerReferenceNodeSetterContext = React56.createContext();
function Manager(_ref) {
  var children = _ref.children;
  var _React$useState = React56.useState(null), referenceNode = _React$useState[0], setReferenceNode = _React$useState[1];
  var hasUnmounted = React56.useRef(false);
  React56.useEffect(function() {
    return function() {
      hasUnmounted.current = true;
    };
  }, []);
  var handleSetReferenceNode = React56.useCallback(function(node) {
    if (!hasUnmounted.current) {
      setReferenceNode(node);
    }
  }, []);
  return React56.createElement(ManagerReferenceNodeContext.Provider, {
    value: referenceNode
  }, React56.createElement(ManagerReferenceNodeSetterContext.Provider, {
    value: handleSetReferenceNode
  }, children));
}

// node_modules/react-popper/lib/esm/utils.js
var React57 = __toESM(require_react());
var unwrapArray = function unwrapArray2(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
};
var safeInvoke = function safeInvoke2(fn) {
  if (typeof fn === "function") {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return fn.apply(void 0, args);
  }
};
var setRef = function setRef2(ref, node) {
  if (typeof ref === "function") {
    return safeInvoke(ref, node);
  } else if (ref != null) {
    ref.current = node;
  }
};
var fromEntries = function fromEntries2(entries) {
  return entries.reduce(function(acc, _ref) {
    var key = _ref[0], value = _ref[1];
    acc[key] = value;
    return acc;
  }, {});
};
var useIsomorphicLayoutEffect = typeof window !== "undefined" && window.document && window.document.createElement ? React57.useLayoutEffect : React57.useEffect;

// node_modules/react-popper/lib/esm/usePopper.js
var React58 = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());
var import_react_fast_compare = __toESM(require_react_fast_compare());
var EMPTY_MODIFIERS = [];
var usePopper = function usePopper2(referenceElement, popperElement, options) {
  if (options === void 0) {
    options = {};
  }
  var prevOptions = React58.useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options.onFirstUpdate,
    placement: options.placement || "bottom",
    strategy: options.strategy || "absolute",
    modifiers: options.modifiers || EMPTY_MODIFIERS
  };
  var _React$useState = React58.useState({
    styles: {
      popper: {
        position: optionsWithDefaults.strategy,
        left: "0",
        top: "0"
      },
      arrow: {
        position: "absolute"
      }
    },
    attributes: {}
  }), state = _React$useState[0], setState = _React$useState[1];
  var updateStateModifier = React58.useMemo(function() {
    return {
      name: "updateState",
      enabled: true,
      phase: "write",
      fn: function fn(_ref) {
        var state2 = _ref.state;
        var elements = Object.keys(state2.elements);
        ReactDOM.flushSync(function() {
          setState({
            styles: fromEntries(elements.map(function(element) {
              return [element, state2.styles[element] || {}];
            })),
            attributes: fromEntries(elements.map(function(element) {
              return [element, state2.attributes[element]];
            }))
          });
        });
      },
      requires: ["computeStyles"]
    };
  }, []);
  var popperOptions = React58.useMemo(function() {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: "applyStyles",
        enabled: false
      }])
    };
    if ((0, import_react_fast_compare.default)(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = React58.useRef();
  useIsomorphicLayoutEffect(function() {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect(function() {
    if (referenceElement == null || popperElement == null) {
      return;
    }
    var createPopper2 = options.createPopper || createPopper;
    var popperInstance = createPopper2(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function() {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};

// node_modules/react-popper/lib/esm/Popper.js
var NOOP = function NOOP2() {
  return void 0;
};
var NOOP_PROMISE = function NOOP_PROMISE2() {
  return Promise.resolve(null);
};
var EMPTY_MODIFIERS2 = [];
function Popper(_ref) {
  var _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? "bottom" : _ref$placement, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? "absolute" : _ref$strategy, _ref$modifiers = _ref.modifiers, modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS2 : _ref$modifiers, referenceElement = _ref.referenceElement, onFirstUpdate = _ref.onFirstUpdate, innerRef = _ref.innerRef, children = _ref.children;
  var referenceNode = React59.useContext(ManagerReferenceNodeContext);
  var _React$useState = React59.useState(null), popperElement = _React$useState[0], setPopperElement = _React$useState[1];
  var _React$useState2 = React59.useState(null), arrowElement = _React$useState2[0], setArrowElement = _React$useState2[1];
  React59.useEffect(function() {
    setRef(innerRef, popperElement);
  }, [innerRef, popperElement]);
  var options = React59.useMemo(function() {
    return {
      placement,
      strategy,
      onFirstUpdate,
      modifiers: [].concat(modifiers, [{
        name: "arrow",
        enabled: arrowElement != null,
        options: {
          element: arrowElement
        }
      }])
    };
  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);
  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options), state = _usePopper.state, styles18 = _usePopper.styles, forceUpdate = _usePopper.forceUpdate, update = _usePopper.update;
  var childrenProps = React59.useMemo(function() {
    return {
      ref: setPopperElement,
      style: styles18.popper,
      placement: state ? state.placement : placement,
      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,
      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,
      arrowProps: {
        style: styles18.arrow,
        ref: setArrowElement
      },
      forceUpdate: forceUpdate || NOOP,
      update: update || NOOP_PROMISE
    };
  }, [setPopperElement, setArrowElement, placement, state, styles18, update, forceUpdate]);
  return unwrapArray(children)(childrenProps);
}

// node_modules/react-popper/lib/esm/Reference.js
var React60 = __toESM(require_react());
var import_warning = __toESM(require_warning());
function Reference(_ref) {
  var children = _ref.children, innerRef = _ref.innerRef;
  var setReferenceNode = React60.useContext(ManagerReferenceNodeSetterContext);
  var refHandler = React60.useCallback(function(node) {
    setRef(innerRef, node);
    safeInvoke(setReferenceNode, node);
  }, [innerRef, setReferenceNode]);
  React60.useEffect(function() {
    return function() {
      return setRef(innerRef, null);
    };
  }, []);
  React60.useEffect(function() {
    (0, import_warning.default)(Boolean(setReferenceNode), "`Reference` should not be used outside of a `Manager` component.");
  }, [setReferenceNode]);
  return unwrapArray(children)({
    ref: refHandler
  });
}

// node_modules/@atlaskit/popper/dist/esm/max-size.js
init_slicedToArray();
function getMaxSizeModifiers(_ref) {
  var viewportPadding2 = _ref.viewportPadding;
  return [{
    /**
     * Performing DOM measurements in the 'read' phase,
     * which is the convention for popper modifiers
     */
    name: "maxSizeData",
    enabled: true,
    phase: "read",
    fn: function fn(_ref2) {
      var state = _ref2.state, name = _ref2.name;
      if (!window.visualViewport) {
        return;
      }
      state.modifiersData[name] = {
        viewport: {
          width: window.visualViewport.width,
          height: window.visualViewport.height
        }
      };
    }
  }, {
    /**
     * Applying max size CSS
     */
    name: "maxSize",
    enabled: true,
    phase: "beforeWrite",
    requiresIfExists: ["offset", "preventOverflow", "flip"],
    fn: function fn(_ref3) {
      var _data$viewport, _data$viewport2, _state$modifiersData$2, _state$modifiersData;
      var state = _ref3.state;
      var data = state.modifiersData.maxSizeData;
      if (typeof (data === null || data === void 0 || (_data$viewport = data.viewport) === null || _data$viewport === void 0 ? void 0 : _data$viewport.width) !== "number" || typeof (data === null || data === void 0 || (_data$viewport2 = data.viewport) === null || _data$viewport2 === void 0 ? void 0 : _data$viewport2.height) !== "number") {
        return;
      }
      var viewport = data.viewport;
      var _state$modifiersData$ = state.modifiersData.popperOffsets, popperOffsets = _state$modifiersData$ === void 0 ? {
        x: 0,
        y: 0
      } : _state$modifiersData$;
      var _state$placement$spli = state.placement.split("-"), _state$placement$spli2 = _slicedToArray(_state$placement$spli, 1), basePlacement = _state$placement$spli2[0];
      var placementOffset = (_state$modifiersData$2 = (_state$modifiersData = state.modifiersData) === null || _state$modifiersData === void 0 || (_state$modifiersData = _state$modifiersData.offset) === null || _state$modifiersData === void 0 ? void 0 : _state$modifiersData[state.placement]) !== null && _state$modifiersData$2 !== void 0 ? _state$modifiersData$2 : {
        x: 0,
        y: 0
      };
      var maxWidth = viewport.width - 2 * viewportPadding2;
      var maxHeight = viewport.height - 2 * viewportPadding2;
      if (basePlacement === "top") {
        maxHeight = state.rects.reference.y + // Viewport-relative position of reference element
        placementOffset.y - // Space between popper and reference
        viewportPadding2;
      }
      if (basePlacement === "bottom") {
        maxHeight = viewport.height - popperOffsets.y - // Viewport-relative position of popper
        viewportPadding2;
      }
      if (basePlacement === "left") {
        maxWidth = state.rects.reference.x + // Viewport-relative position of reference element
        placementOffset.x - // Space between popper and reference
        viewportPadding2;
      }
      if (basePlacement === "right") {
        maxWidth = viewport.width - popperOffsets.x - // Viewport-relative position of popper
        viewportPadding2;
      }
      state.styles.popper.maxWidth = "".concat(maxWidth, "px");
      state.styles.popper.maxHeight = "".concat(maxHeight, "px");
    }
  }];
}

// node_modules/@atlaskit/popper/dist/esm/popper.js
var viewportPadding = 5;
var constantModifiers = [{
  name: "flip",
  options: {
    flipVariations: false,
    padding: viewportPadding,
    boundary: "clippingParents",
    rootBoundary: "viewport"
  }
}];
function defaultChildrenFn() {
  return null;
}
var defaultOffset = [0, 8];
function Popper2(_ref) {
  var _ref$children = _ref.children, children = _ref$children === void 0 ? defaultChildrenFn : _ref$children, _ref$offset = _ref.offset, offset = _ref$offset === void 0 ? defaultOffset : _ref$offset, _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? "bottom-start" : _ref$placement, _ref$referenceElement = _ref.referenceElement, referenceElement = _ref$referenceElement === void 0 ? void 0 : _ref$referenceElement, modifiers = _ref.modifiers, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? "fixed" : _ref$strategy, _ref$shouldFitViewpor = _ref.shouldFitViewport, shouldFitViewport = _ref$shouldFitViewpor === void 0 ? false : _ref$shouldFitViewpor;
  var _offset = _slicedToArray(offset, 2), offsetX = _offset[0], offsetY = _offset[1];
  var internalModifiers = (0, import_react85.useMemo)(function() {
    var preventOverflowModifier = {
      name: "preventOverflow",
      options: {
        padding: viewportPadding,
        rootBoundary: shouldFitViewport ? "viewport" : "document"
      }
    };
    var offsetModifier = {
      name: "offset",
      options: {
        offset: [offsetX, offsetY]
      }
    };
    var maxSizeModifiers = shouldFitViewport ? getMaxSizeModifiers({
      viewportPadding
    }) : [];
    return [].concat(constantModifiers, [preventOverflowModifier, offsetModifier], _toConsumableArray(maxSizeModifiers));
  }, [offsetX, offsetY, shouldFitViewport]);
  var mergedModifiers = (0, import_react85.useMemo)(function() {
    if (modifiers == null) {
      return internalModifiers;
    }
    return [].concat(_toConsumableArray(internalModifiers), _toConsumableArray(modifiers));
  }, [internalModifiers, modifiers]);
  return import_react85.default.createElement(
    Popper,
    {
      modifiers: mergedModifiers,
      placement,
      strategy,
      referenceElement
    },
    children
  );
}

// node_modules/@atlaskit/portal/dist/esm/portal.js
var import_react91 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/portal/dist/esm/internal/components/internal-portal.js
var import_react86 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@atlaskit/portal/dist/esm/internal/constants.js
var portalParentClassName = "atlaskit-portal-container";
var portalParentSelector = "body > .atlaskit-portal-container";
var portalClassName = "atlaskit-portal";

// node_modules/@atlaskit/portal/dist/esm/internal/utils/portal-dom-utils.js
var createContainer = function createContainer2(zIndex) {
  var container = document.createElement("div");
  container.className = portalClassName;
  container.style.zIndex = "".concat(zIndex);
  return container;
};
var getBody = function getBody2() {
  return document.body;
};
var getPortalParent = function getPortalParent2() {
  var parentElement = document.querySelector(portalParentSelector);
  if (!parentElement) {
    var _getBody;
    var parent = document.createElement("div");
    parent.className = portalParentClassName;
    parent.style.display = "flex";
    (_getBody = getBody()) === null || _getBody === void 0 || _getBody.appendChild(parent);
    return parent;
  }
  return parentElement;
};
var removePortalContainer = function removePortalContainer2(container) {
  getPortalParent().removeChild(container);
};
var appendPortalContainerIfNotAppended = function appendPortalContainerIfNotAppended2(container) {
  if (!container.parentElement) {
    getPortalParent().appendChild(container);
  }
};
var isDocumentDefined = function isDocumentDefined2() {
  return document !== void 0;
};
var createAtlaskitPortal = function createAtlaskitPortal2(zIndex) {
  if (isDocumentDefined()) {
    var atlaskitportal = document.createElement("div");
    atlaskitportal.className = portalClassName;
    atlaskitportal.style.zIndex = "".concat(zIndex);
    return atlaskitportal;
  }
};
var createPortalParent = function createPortalParent2() {
  if (isDocumentDefined()) {
    var parentElement = document.querySelector(portalParentSelector);
    if (!parentElement) {
      var _getBody2;
      var parent = document.createElement("div");
      parent.className = portalParentClassName;
      parent.style.display = "flex";
      (_getBody2 = getBody()) === null || _getBody2 === void 0 || _getBody2.appendChild(parent);
      return parent;
    }
    return parentElement;
  }
};

// node_modules/@atlaskit/portal/dist/esm/internal/components/internal-portal.js
function InternalPortal(props) {
  var zIndex = props.zIndex, children = props.children;
  var container = (0, import_react86.useMemo)(function() {
    return createContainer(zIndex);
  }, [zIndex]);
  appendPortalContainerIfNotAppended(container);
  (0, import_react86.useEffect)(function() {
    return function() {
      removePortalContainer(container);
    };
  }, [container]);
  return (0, import_react_dom.createPortal)(children, container);
}

// node_modules/@atlaskit/portal/dist/esm/internal/components/internal-portal-new.js
init_slicedToArray();
var import_react88 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/@atlaskit/portal/dist/esm/internal/hooks/use-isomorphic-layout-effect.js
var import_react87 = __toESM(require_react());
var useIsomorphicLayoutEffect2 = typeof window !== "undefined" ? import_react87.useLayoutEffect : import_react87.useEffect;

// node_modules/@atlaskit/portal/dist/esm/internal/components/internal-portal-new.js
function InternalPortalNew(props) {
  var zIndex = props.zIndex, children = props.children;
  var _useState = (0, import_react88.useState)(null), _useState2 = _slicedToArray(_useState, 2), atlaskitPortal = _useState2[0], setAtlaskitPortal = _useState2[1];
  useIsomorphicLayoutEffect2(function() {
    var tempPortalContainer = createAtlaskitPortal(zIndex);
    setAtlaskitPortal(tempPortalContainer);
    var portalParent = createPortalParent();
    if (!tempPortalContainer || !portalParent) {
      return;
    }
    portalParent.appendChild(tempPortalContainer);
    return function() {
      if (tempPortalContainer) {
        portalParent.removeChild(tempPortalContainer);
      }
      setAtlaskitPortal(null);
    };
  }, [zIndex]);
  var suspendedChildren = import_react88.default.createElement(import_react88.Suspense, {
    fallback: null
  }, children);
  return atlaskitPortal ? (0, import_react_dom2.createPortal)(suspendedChildren, atlaskitPortal) : null;
}

// node_modules/@atlaskit/portal/dist/esm/internal/hooks/use-is-subsequent-render.js
init_slicedToArray();
var import_react89 = __toESM(require_react());
var useIsSubsequentRender = function useIsSubsequentRender2(mountStrategy) {
  var _useState = (0, import_react89.useState)(false), _useState2 = _slicedToArray(_useState, 2), isSubsequentRender = _useState2[0], setIsSubsequentRender = _useState2[1];
  var _useState3 = (0, import_react89.useState)(function() {
    return mountStrategy === "layoutEffect" ? useIsomorphicLayoutEffect2 : import_react89.useEffect;
  }), _useState4 = _slicedToArray(_useState3, 1), useMountEffect = _useState4[0];
  useMountEffect(function() {
    setIsSubsequentRender(true);
  }, []);
  return isSubsequentRender;
};
var use_is_subsequent_render_default = useIsSubsequentRender;

// node_modules/@atlaskit/portal/dist/esm/internal/hooks/use-portal-event.js
var import_react90 = __toESM(require_react());

// node_modules/@atlaskit/portal/dist/esm/constants.js
var PORTAL_MOUNT_EVENT = "akPortalMount";
var PORTAL_UNMOUNT_EVENT = "akPortalUnmount";

// node_modules/@atlaskit/portal/dist/esm/internal/utils/portal-custom-event.js
var zIndexToName = {
  100: "card",
  200: "navigation",
  300: "dialog",
  400: "layer",
  500: "blanket",
  510: "modal",
  600: "flag",
  700: "spotlight",
  9999: "tooltip"
};
var getLayerName = function getLayerName2(zIndex) {
  return zIndexToName.hasOwnProperty(zIndex) ? zIndexToName[zIndex] : null;
};
var getEvent = function getEvent2(eventName, zIndex) {
  var detail = {
    layer: getLayerName(Number(zIndex)),
    zIndex
  };
  return new CustomEvent(eventName, {
    detail
  });
};
function firePortalEvent(eventName, zIndex) {
  var event = getEvent(eventName, zIndex);
  window.dispatchEvent(event);
}

// node_modules/@atlaskit/portal/dist/esm/internal/hooks/use-portal-event.js
var useFirePortalEvent = function useFirePortalEvent2(zIndex) {
  var zIndexNumber = Number(zIndex);
  (0, import_react90.useEffect)(function() {
    firePortalEvent(PORTAL_MOUNT_EVENT, zIndexNumber);
    return function() {
      firePortalEvent(PORTAL_UNMOUNT_EVENT, zIndexNumber);
    };
  }, [zIndexNumber]);
};
var use_portal_event_default = useFirePortalEvent;

// node_modules/@atlaskit/portal/dist/esm/portal.js
function Portal(_ref) {
  var _ref$zIndex = _ref.zIndex, zIndex = _ref$zIndex === void 0 ? 0 : _ref$zIndex, children = _ref.children, _ref$mountStrategy = _ref.mountStrategy, mountStrategy = _ref$mountStrategy === void 0 ? "effect" : _ref$mountStrategy;
  var isSubsequentRender = use_is_subsequent_render_default(mountStrategy);
  use_portal_event_default(zIndex);
  return !fg("platform_design_system_team_portal_logic_r18_fix") ? isSubsequentRender ? import_react91.default.createElement(InternalPortal, {
    zIndex
  }, children) : null : import_react91.default.createElement(InternalPortalNew, {
    zIndex
  }, children);
}

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/theme/dist/esm/colors.js
var N02 = "#FFFFFF";
var N800 = "#172B4D";

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/theme/dist/esm/constants.js
var layers = {
  card: function card() {
    return 100;
  },
  navigation: function navigation() {
    return 200;
  },
  dialog: function dialog() {
    return 300;
  },
  layer: function layer() {
    return 400;
  },
  blanket: function blanket() {
    return 500;
  },
  modal: function modal() {
    return 510;
  },
  flag: function flag() {
    return 600;
  },
  spotlight: function spotlight() {
    return 700;
  },
  tooltip: function tooltip() {
    return 9999;
  }
};

// node_modules/@atlaskit/tooltip/dist/esm/internal/drag-manager.js
var import_bind_event_listener7 = __toESM(require_dist());
var registrations = /* @__PURE__ */ new Set();
var cleanupEndEventListeners = null;
function onDragStart() {
  if (cleanupEndEventListeners) {
    return;
  }
  cleanupEndEventListeners = (0, import_bind_event_listener7.bindAll)(window, [{
    type: "dragend",
    listener: onDragEnd
  }, {
    type: "pointerdown",
    listener: onDragEnd
  }, {
    type: "pointermove",
    listener: /* @__PURE__ */ function() {
      var callCount = 0;
      return function listener() {
        if (callCount < 20) {
          callCount++;
          return;
        }
        onDragEnd();
      };
    }()
  }]);
  var clone = Array.from(registrations);
  clone.forEach(function(subscriber) {
    subscriber.onDragStart();
  });
}
function onDragEnd() {
  var _cleanupEndEventListe;
  (_cleanupEndEventListe = cleanupEndEventListeners) === null || _cleanupEndEventListe === void 0 || _cleanupEndEventListe();
  cleanupEndEventListeners = null;
  var clone = Array.from(registrations);
  clone.forEach(function(subscriber) {
    subscriber.onDragEnd();
  });
}
function bindStartEvents() {
  return (0, import_bind_event_listener7.bindAll)(window, [{
    type: "dragstart",
    listener: onDragStart
  }, {
    type: "dragenter",
    listener: onDragStart
  }]);
}
var cleanupStartEventListeners = null;
function register(registration) {
  if (!cleanupStartEventListeners) {
    cleanupStartEventListeners = bindStartEvents();
  }
  registrations.add(registration);
  registration.onRegister({
    isDragging: cleanupEndEventListeners !== null
  });
  return function unregister() {
    registrations.delete(registration);
    if (registrations.size === 0) {
      var _cleanupStartEventLis;
      (_cleanupStartEventLis = cleanupStartEventListeners) === null || _cleanupStartEventLis === void 0 || _cleanupStartEventLis();
      cleanupStartEventListeners = null;
    }
  };
}

// node_modules/@atlaskit/tooltip/dist/esm/internal/shared-schedule.js
var delayId = null;
function clearScheduled() {
  if (delayId != null) {
    window.clearTimeout(delayId);
    delayId = null;
  }
}
function scheduleTimeout(fn, delay) {
  clearScheduled();
  delayId = window.setTimeout(function() {
    delayId = null;
    fn();
  }, delay);
}

// node_modules/@atlaskit/tooltip/dist/esm/internal/tooltip-manager.js
var active = null;
function show(entry) {
  var phase = "waiting-to-show";
  function isActive() {
    return Boolean(active && active.entry === entry);
  }
  function cleanup() {
    if (isActive()) {
      clearScheduled();
      active = null;
    }
  }
  function done() {
    if (isActive()) {
      entry.done();
    }
    phase = "done";
    cleanup();
  }
  function immediatelyHideAndDone() {
    if (isActive()) {
      entry.hide({
        isImmediate: true
      });
    }
    done();
  }
  function keep() {
    if (!isActive()) {
      return;
    }
    if (phase === "waiting-to-hide") {
      phase = "shown";
      clearScheduled();
      return;
    }
    if (phase === "hide-animating") {
      phase = "shown";
      clearScheduled();
      entry.show({
        isImmediate: false
      });
      return;
    }
  }
  function requestHide(_ref) {
    var isImmediate = _ref.isImmediate;
    if (!isActive()) {
      return;
    }
    if (phase === "waiting-to-show") {
      immediatelyHideAndDone();
      return;
    }
    if (phase === "waiting-to-hide") {
      return;
    }
    if (isImmediate) {
      immediatelyHideAndDone();
      return;
    }
    phase = "waiting-to-hide";
    scheduleTimeout(function() {
      phase = "hide-animating";
      entry.hide({
        isImmediate: false
      });
    }, entry.delay);
  }
  function finishHideAnimation() {
    if (isActive() && phase === "hide-animating") {
      done();
    }
  }
  function isVisible() {
    return phase === "shown" || phase === "waiting-to-hide" || phase === "hide-animating";
  }
  function getInitialMouse() {
    if (entry.source.type === "mouse") {
      return entry.source.mouse;
    }
    return null;
  }
  function start() {
    var showImmediately = Boolean(active && active.isVisible());
    if (active) {
      clearScheduled();
      active.entry.hide({
        isImmediate: true
      });
      active.entry.done();
      active = null;
    }
    active = {
      entry,
      isVisible
    };
    function show2() {
      phase = "shown";
      entry.show({
        isImmediate: showImmediately
      });
    }
    if (showImmediately) {
      show2();
      return;
    }
    phase = "waiting-to-show";
    scheduleTimeout(show2, entry.delay);
  }
  start();
  var result = {
    keep,
    abort: cleanup,
    isActive,
    requestHide,
    finishHideAnimation,
    mousePosition: getInitialMouse()
  };
  return result;
}

// node_modules/@atlaskit/tooltip/node_modules/@atlaskit/ds-lib/dist/esm/utils/use-id.js
init_typeof();
var import_react92 = __toESM(require_react());
init_esm();
var _React$useId3;
var react18UseId3 = (_React$useId3 = import_react92.default.useId) !== null && _React$useId3 !== void 0 ? _React$useId3 : void 0;
function useId3() {
  if (react18UseId3 && fg("platform-dst-react-18-use-id")) {
    return react18UseId3();
  }
  return "uid".concat(useUID());
}
var IdProvider3 = (0, import_react92.forwardRef)(function(_ref, ref) {
  var children = _ref.children, _ref$postfix = _ref.postfix, postfix = _ref$postfix === void 0 ? "" : _ref$postfix, _ref$prefix = _ref.prefix, prefix2 = _ref$prefix === void 0 ? "" : _ref$prefix;
  var id = "".concat(prefix2).concat(useId3()).concat(postfix);
  (0, import_react92.useEffect)(function() {
    if (!ref) {
      return;
    }
    switch (_typeof(ref)) {
      case "function":
        ref(id);
        break;
      case "object":
        ref.current = id;
        break;
      default:
        throw new Error('Unreachable case for unsupported type of ref "'.concat(_typeof(ref), '"'));
    }
  }, [id, ref]);
  return import_react92.default.createElement(import_react92.default.Fragment, null, typeof children === "function" ? children({
    id
  }) : children);
});
function useIdSeed() {
  if (react18UseId3 && fg("platform-dst-react-18-use-id")) {
    var uid2 = react18UseId3();
    return function(id) {
      return "".concat(uid2, "-").concat(id.toString());
    };
  }
  return useUIDSeed();
}

// node_modules/@atlaskit/tooltip/dist/esm/internal/use-unique-id.js
function useUniqueId2(prefix2, shouldRenderId) {
  var seed = useIdSeed();
  return shouldRenderId ? "".concat(seed(prefix2)) : void 0;
}

// node_modules/@atlaskit/tooltip/dist/esm/tooltip-container.js
init_defineProperty();
var React66 = __toESM(require_react());
init_runtime2();
var import_react94 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/tooltip/dist/esm/tooltip-container.compiled.css";

// node_modules/@atlaskit/tooltip/dist/esm/tooltip-primitive.js
var React65 = __toESM(require_react());
init_runtime2();
var import_react93 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/tooltip/dist/esm/tooltip-primitive.compiled.css";
var TooltipPrimitive = (0, import_react93.forwardRef)(function TooltipPrimitive2(_ref, ref) {
  var style = _ref.style, className = _ref.className, children = _ref.children, placement = _ref.placement, testId = _ref.testId, onMouseOut = _ref.onMouseOut, onMouseOver = _ref.onMouseOver, id = _ref.id;
  return React65.createElement("div", {
    ref,
    style,
    "data-testid": testId ? "".concat(testId, "--wrapper") : void 0
  }, React65.createElement("div", {
    role: "tooltip",
    className: ax(["_80om73ad", className]),
    onMouseOut,
    onMouseOver,
    "data-placement": placement,
    "data-testid": testId,
    id
  }, children));
});
TooltipPrimitive.displayName = "TooltipPrimitive";
var tooltip_primitive_default = TooltipPrimitive;

// node_modules/@atlaskit/tooltip/dist/esm/tooltip-container.js
function ownKeys9(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread9(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys9(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys9(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var TooltipContainer = (0, import_react94.forwardRef)(function TooltipContainer2(_ref, ref) {
  var style = _ref.style, className = _ref.className, children = _ref.children, truncate = _ref.truncate, placement = _ref.placement, testId = _ref.testId, onMouseOut = _ref.onMouseOut, onMouseOver = _ref.onMouseOver, id = _ref.id;
  return React66.createElement(tooltip_primitive_default, {
    ref,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: ax(["_2rko1sit _11c8dcr7 _vchhusvi _p12fp3fh _bfhkpioe _syaz1i9p _152tze3t _1e02ze3t _1i4q1hna _85i5v77o _1q51v77o _y4ti12x7 _bozg12x7 _slp31hna", truncate && "_1reo15vq _18m915vq _p12f1pna _1bto1l2s _o5721q9c", className]),
    placement,
    testId,
    id,
    onMouseOut,
    onMouseOver,
    style: _objectSpread9(_objectSpread9({}, style), {}, {
      "--_yr7xfv": cssCustomPropertyValue("var(--ds-background-neutral-bold, ".concat(N800, ")")),
      "--_ywovvi": cssCustomPropertyValue("var(--ds-text-inverse, ".concat(N02, ")"))
    })
  }, children);
});
TooltipContainer.displayName = "TooltipContainer";
var tooltip_container_default = TooltipContainer;

// node_modules/@atlaskit/tooltip/dist/esm/utilities.js
function getMousePosition(mouseCoordinates) {
  var safeMouse = mouseCoordinates || {
    top: 0,
    left: 0
  };
  var getBoundingClientRect = function getBoundingClientRect2() {
    return {
      top: safeMouse.top,
      left: safeMouse.left,
      bottom: safeMouse.top,
      right: safeMouse.left,
      width: 0,
      height: 0
    };
  };
  return {
    getBoundingClientRect,
    clientWidth: 0,
    clientHeight: 0
  };
}

// node_modules/@atlaskit/tooltip/dist/esm/tooltip.js
function ownKeys10(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread10(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys10(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys10(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var tooltipZIndex = layers.tooltip();
var analyticsAttributes = {
  componentName: "tooltip",
  packageName: "@atlaskit/tooltip",
  packageVersion: "20.4.0"
};
var invertedDirection2 = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
};
var getDirectionFromPlacement = function getDirectionFromPlacement2(placement) {
  return placement.split("-")[0];
};
function Tooltip(_ref) {
  var children = _ref.children, _ref$position = _ref.position, position = _ref$position === void 0 ? "bottom" : _ref$position, _ref$mousePosition = _ref.mousePosition, mousePosition = _ref$mousePosition === void 0 ? "bottom" : _ref$mousePosition, content = _ref.content, _ref$truncate = _ref.truncate, truncate = _ref$truncate === void 0 ? false : _ref$truncate, _ref$component = _ref.component, Container = _ref$component === void 0 ? tooltip_container_default : _ref$component, _ref$tag = _ref.tag, TargetContainer = _ref$tag === void 0 ? "div" : _ref$tag, testId = _ref.testId, _ref$delay = _ref.delay, delay = _ref$delay === void 0 ? 300 : _ref$delay, _ref$onShow = _ref.onShow, onShow = _ref$onShow === void 0 ? noop6 : _ref$onShow, _ref$onHide = _ref.onHide, onHide = _ref$onHide === void 0 ? noop6 : _ref$onHide, canAppear = _ref.canAppear, _ref$hideTooltipOnCli = _ref.hideTooltipOnClick, hideTooltipOnClick = _ref$hideTooltipOnCli === void 0 ? false : _ref$hideTooltipOnCli, _ref$hideTooltipOnMou = _ref.hideTooltipOnMouseDown, hideTooltipOnMouseDown = _ref$hideTooltipOnMou === void 0 ? false : _ref$hideTooltipOnMou, analyticsContext = _ref.analyticsContext, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? "fixed" : _ref$strategy, _ref$ignoreTooltipPoi = _ref.ignoreTooltipPointerEvents, ignoreTooltipPointerEvents = _ref$ignoreTooltipPoi === void 0 ? false : _ref$ignoreTooltipPoi, _ref$isScreenReaderAn = _ref.isScreenReaderAnnouncementDisabled, isScreenReaderAnnouncementDisabled = _ref$isScreenReaderAn === void 0 ? false : _ref$isScreenReaderAn;
  var tooltipPosition = position === "mouse" ? mousePosition : position;
  var onShowHandler = usePlatformLeafSyntheticEventHandler(_objectSpread10({
    fn: onShow,
    action: "displayed",
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var onHideHandler = usePlatformLeafSyntheticEventHandler(_objectSpread10({
    fn: onHide,
    action: "hidden",
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var apiRef = (0, import_react95.useRef)(null);
  var _useState = (0, import_react95.useState)("hide"), _useState2 = _slicedToArray(_useState, 2), state = _useState2[0], setState = _useState2[1];
  var targetRef = (0, import_react95.useRef)(null);
  var containerRef = (0, import_react95.useRef)(null);
  var setImplicitRefFromChildren = function setImplicitRefFromChildren2(node) {
    containerRef.current = node;
    targetRef.current = node ? node.firstElementChild : null;
  };
  var setDirectRef = (0, import_react95.useCallback)(function(node) {
    targetRef.current = node;
  }, []);
  var stableState = useStableRef(state);
  var onShowHandlerStable = useStableRef(onShowHandler);
  var onHideHandlerStable = useStableRef(onHideHandler);
  var delayStable = useStableRef(delay);
  var canAppearStable = useStableRef(canAppear);
  var hasCalledShowHandler = (0, import_react95.useRef)(false);
  var start = (0, import_react95.useCallback)(function(api) {
    apiRef.current = api;
    hasCalledShowHandler.current = false;
  }, []);
  var done = (0, import_react95.useCallback)(function() {
    if (!apiRef.current) {
      return;
    }
    if (hasCalledShowHandler.current) {
      onHideHandlerStable.current();
    }
    apiRef.current = null;
    hasCalledShowHandler.current = false;
    setState("hide");
  }, [onHideHandlerStable]);
  var abort2 = (0, import_react95.useCallback)(function() {
    if (!apiRef.current) {
      return;
    }
    apiRef.current.abort();
    if (hasCalledShowHandler.current) {
      onHideHandlerStable.current();
    }
    apiRef.current = null;
  }, [onHideHandlerStable]);
  (0, import_react95.useEffect)(function mount() {
    return function unmount() {
      if (apiRef.current) {
        abort2();
      }
    };
  }, [abort2]);
  var isDraggingRef = (0, import_react95.useRef)(false);
  (0, import_react95.useEffect)(function() {
    return register({
      onRegister: function onRegister(_ref2) {
        var isDragging = _ref2.isDragging;
        isDraggingRef.current = isDragging;
      },
      onDragStart: function onDragStart2() {
        var _apiRef$current;
        (_apiRef$current = apiRef.current) === null || _apiRef$current === void 0 || _apiRef$current.requestHide({
          isImmediate: true
        });
        isDraggingRef.current = true;
      },
      onDragEnd: function onDragEnd2() {
        isDraggingRef.current = false;
      }
    });
  }, []);
  var tryShowTooltip = (0, import_react95.useCallback)(function(source2) {
    var _canAppearStable$curr;
    if (isDraggingRef.current) {
      return;
    }
    if (apiRef.current && !apiRef.current.isActive()) {
      abort2();
    }
    if (apiRef.current && apiRef.current.isActive()) {
      apiRef.current.keep();
      return;
    }
    if (canAppearStable.current && !((_canAppearStable$curr = canAppearStable.current) !== null && _canAppearStable$curr !== void 0 && _canAppearStable$curr.call(canAppearStable))) {
      return;
    }
    var entry = {
      source: source2,
      delay: delayStable.current,
      show: function show2(_ref3) {
        var isImmediate = _ref3.isImmediate;
        if (!hasCalledShowHandler.current) {
          hasCalledShowHandler.current = true;
          onShowHandlerStable.current();
        }
        setState(isImmediate ? "show-immediate" : "fade-in");
      },
      hide: function hide(_ref4) {
        var isImmediate = _ref4.isImmediate;
        if (isImmediate) {
          setState("hide");
        } else {
          setState("before-fade-out");
        }
      },
      done
    };
    var api = show(entry);
    start(api);
  }, [canAppearStable, delayStable, done, start, abort2, onShowHandlerStable]);
  var hideTooltipOnEsc = (0, import_react95.useCallback)(function() {
    var _apiRef$current2;
    (_apiRef$current2 = apiRef.current) === null || _apiRef$current2 === void 0 || _apiRef$current2.requestHide({
      isImmediate: true
    });
  }, [apiRef]);
  useCloseOnEscapePress({
    onClose: hideTooltipOnEsc,
    isDisabled: state === "hide" || state === "fade-out"
  });
  (0, import_react95.useEffect)(function() {
    if (state === "hide") {
      return noop6;
    }
    if (state === "before-fade-out") {
      setState("fade-out");
    }
    var unbind = (0, import_bind_event_listener8.bind)(window, {
      type: "scroll",
      listener: function listener() {
        if (apiRef.current) {
          apiRef.current.requestHide({
            isImmediate: true
          });
        }
      },
      options: {
        capture: true,
        passive: true,
        once: true
      }
    });
    return unbind;
  }, [state]);
  var onMouseDown = (0, import_react95.useCallback)(function() {
    if (hideTooltipOnMouseDown && apiRef.current) {
      apiRef.current.requestHide({
        isImmediate: true
      });
    }
  }, [hideTooltipOnMouseDown]);
  var onClick = (0, import_react95.useCallback)(function() {
    if (hideTooltipOnClick && apiRef.current) {
      apiRef.current.requestHide({
        isImmediate: true
      });
    }
  }, [hideTooltipOnClick]);
  var onMouseOver = (0, import_react95.useCallback)(function(event) {
    if (containerRef.current && event.target === containerRef.current) {
      return;
    }
    if (event.defaultPrevented) {
      return;
    }
    event.preventDefault();
    var source2 = position === "mouse" ? {
      type: "mouse",
      // TODO: ideally not recalculating this object each time
      mouse: getMousePosition({
        left: event.clientX,
        top: event.clientY
      })
    } : {
      type: "keyboard"
    };
    tryShowTooltip(source2);
  }, [position, tryShowTooltip]);
  var onMouseOut = (0, import_react95.useCallback)(function(event) {
    if (containerRef.current && event.target === containerRef.current) {
      return;
    }
    if (event.defaultPrevented) {
      return;
    }
    event.preventDefault();
    if (apiRef.current) {
      apiRef.current.requestHide({
        isImmediate: false
      });
    }
  }, []);
  var onMouseMove = position === "mouse" ? function(event) {
    var _apiRef$current3;
    if ((_apiRef$current3 = apiRef.current) !== null && _apiRef$current3 !== void 0 && _apiRef$current3.isActive()) {
      apiRef.current.mousePosition = getMousePosition({
        left: event.clientX,
        top: event.clientY
      });
    }
  } : void 0;
  var onMouseOverTooltip = (0, import_react95.useCallback)(function() {
    if (apiRef.current && apiRef.current.isActive()) {
      apiRef.current.keep();
      return;
    }
  }, []);
  var onFocus = (0, import_react95.useCallback)(function(e) {
    try {
      if (!e.target.matches(":focus-visible") && fg("platform-tooltip-focus-visible-new")) {
        return;
      }
    } catch (_) {
    }
    tryShowTooltip({
      type: "keyboard"
    });
  }, [tryShowTooltip]);
  var onBlur = (0, import_react95.useCallback)(function() {
    if (apiRef.current) {
      apiRef.current.requestHide({
        isImmediate: false
      });
    }
  }, []);
  var onAnimationFinished = (0, import_react95.useCallback)(function(transition) {
    if (transition === "exiting" && stableState.current === "fade-out" && apiRef.current) {
      apiRef.current.finishHideAnimation();
    }
  }, [stableState]);
  var CastTargetContainer = TargetContainer;
  var shouldRenderTooltipPopup = state !== "hide" && Boolean(content);
  var shouldRenderHiddenContent = !isScreenReaderAnnouncementDisabled && shouldRenderTooltipPopup;
  var shouldRenderTooltipChildren = state !== "hide" && state !== "fade-out";
  var handleOpenLayerObserverCloseSignal = (0, import_react95.useCallback)(function() {
    var _apiRef$current4;
    (_apiRef$current4 = apiRef.current) === null || _apiRef$current4 === void 0 || _apiRef$current4.requestHide({
      isImmediate: true
    });
  }, []);
  useNotifyOpenLayerObserver({
    // Layer is only visually open if both the tooltip popup (container) and children are rendered.
    isOpen: shouldRenderTooltipPopup && shouldRenderTooltipChildren,
    /**
     * We don't strictly need to provide an onClose callback at this time, as there is
     * already code that handles hiding the tooltip when a drag is started (and the only
     * usage right now is closing all layers when the user resizes the side nav).
     *
     * However, for future-proofing and semantic reasons, it makes sense to close the tooltip
     * whenever the open layer observer requests a close.
     */
    onClose: handleOpenLayerObserverCloseSignal
  });
  var getReferenceElement = function getReferenceElement2() {
    var _apiRef$current5;
    if (position === "mouse" && (_apiRef$current5 = apiRef.current) !== null && _apiRef$current5 !== void 0 && _apiRef$current5.mousePosition) {
      var _apiRef$current6;
      return (_apiRef$current6 = apiRef.current) === null || _apiRef$current6 === void 0 ? void 0 : _apiRef$current6.mousePosition;
    }
    return targetRef.current || void 0;
  };
  var tooltipIdForHiddenContent = useUniqueId2("tooltip", shouldRenderHiddenContent);
  var tooltipTriggerProps = {
    onMouseOver,
    onMouseOut,
    onMouseMove,
    onMouseDown,
    onClick,
    onFocus,
    onBlur
  };
  if (testId) {
    tooltipTriggerProps["data-testid"] = "".concat(testId, "--container");
  }
  var isChildrenAFunction = typeof children === "function";
  (0, import_react95.useEffect)(function() {
    if (isChildrenAFunction) {
      return;
    }
    var target = targetRef.current;
    if (!target || !tooltipIdForHiddenContent) {
      return;
    }
    target.setAttribute("aria-describedby", tooltipIdForHiddenContent);
    return function() {
      return target.removeAttribute("aria-describedby");
    };
  }, [isChildrenAFunction, tooltipIdForHiddenContent]);
  var hiddenContent = shouldRenderHiddenContent ? import_react95.default.createElement("span", {
    "data-testid": testId ? "".concat(testId, "-hidden") : void 0,
    hidden: true,
    id: tooltipIdForHiddenContent
  }, typeof content === "function" ? content({}) : content) : null;
  return import_react95.default.createElement(import_react95.default.Fragment, null, typeof children === "function" ? (
    // once we deprecate the wrapped approach, we can put the aria
    // attribute back into the tooltipTriggerProps and make it required
    // instead of optional in `types`
    import_react95.default.createElement(import_react95.default.Fragment, null, children(_objectSpread10(_objectSpread10({}, tooltipTriggerProps), {}, {
      "aria-describedby": tooltipIdForHiddenContent,
      ref: setDirectRef
    })), hiddenContent)
  ) : import_react95.default.createElement(CastTargetContainer, _extends({}, tooltipTriggerProps, {
    ref: setImplicitRefFromChildren,
    role: "presentation"
  }), children, hiddenContent), shouldRenderTooltipPopup ? import_react95.default.createElement(Portal, {
    zIndex: tooltipZIndex
  }, import_react95.default.createElement(Popper2, {
    placement: tooltipPosition,
    referenceElement: getReferenceElement(),
    strategy
  }, function(_ref5) {
    var ref = _ref5.ref, style = _ref5.style, update = _ref5.update, placement = _ref5.placement;
    var direction = position === "mouse" ? void 0 : invertedDirection2[getDirectionFromPlacement(placement)];
    return import_react95.default.createElement(exiting_persistence_default, {
      appear: true
    }, shouldRenderTooltipChildren && import_react95.default.createElement(fade_in_default, {
      distance: "constant",
      entranceDirection: direction,
      exitDirection: direction,
      onFinish: onAnimationFinished,
      duration: state !== "show-immediate" ? "medium" : "none"
    }, function(_ref6) {
      var className = _ref6.className;
      return import_react95.default.createElement(Container, {
        ref,
        className: "Tooltip ".concat(className),
        style: _objectSpread10(_objectSpread10({}, style), ignoreTooltipPointerEvents && {
          pointerEvents: "none"
        }),
        truncate,
        placement: tooltipPosition,
        testId: getReferenceElement() ? testId : testId && "".concat(testId, "--unresolved"),
        onMouseOut,
        onMouseOver: onMouseOverTooltip
      }, typeof content === "function" ? content({
        update
      }) : content);
    }));
  })) : null);
}
var tooltip_default = Tooltip;

// node_modules/@atlaskit/button/dist/esm/new-button/variants/icon/button.js
var _excluded12 = ["aria-label", "aria-labelledby", "analyticsContext", "appearance", "autoFocus", "icon", "interactionName", "isDisabled", "isLoading", "isSelected", "isTooltipDisabled", "label", "onClick", "onClickCapture", "onKeyDownCapture", "onKeyUpCapture", "onMouseDownCapture", "onMouseUpCapture", "onPointerDownCapture", "onPointerUpCapture", "onTouchEndCapture", "onTouchStartCapture", "shape", "spacing", "testId", "tooltip", "type"];
var _excluded28 = ["className", "css", "as", "style"];
var IconButton = import_react96.default.memo(import_react96.default.forwardRef(function Button3(_ref, ref) {
  var _tooltip$content;
  var preventedAriaLabel = _ref["aria-label"], ariaLabelledBy = _ref["aria-labelledby"], analyticsContext = _ref.analyticsContext, appearance = _ref.appearance, autoFocus = _ref.autoFocus, icon = _ref.icon, interactionName = _ref.interactionName, isDisabled = _ref.isDisabled, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, isSelected = _ref.isSelected, _ref$isTooltipDisable = _ref.isTooltipDisabled, isTooltipDisabled = _ref$isTooltipDisable === void 0 ? true : _ref$isTooltipDisable, label = _ref.label, _onClick = _ref.onClick, onClickCapture = _ref.onClickCapture, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUpCapture = _ref.onKeyUpCapture, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUpCapture = _ref.onMouseUpCapture, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUpCapture = _ref.onPointerUpCapture, onTouchEndCapture = _ref.onTouchEndCapture, onTouchStartCapture = _ref.onTouchStartCapture, shape3 = _ref.shape, spacing3 = _ref.spacing, testId = _ref.testId, tooltip3 = _ref.tooltip, _ref$type = _ref.type, type = _ref$type === void 0 ? "button" : _ref$type, unsafeRest = _objectWithoutProperties(_ref, _excluded12);
  var _className = unsafeRest.className, _css = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = _objectWithoutProperties(unsafeRest, _excluded28);
  if (isTooltipDisabled) {
    return import_react96.default.createElement(button_base_default, _extends({}, saferRest, {
      ref,
      appearance,
      autoFocus,
      isDisabled,
      isLoading,
      isSelected,
      isIconButton: true,
      isCircle: shape3 === "circle",
      hasIconBefore: !!icon,
      spacing: spacing3,
      ariaLabelledBy,
      onClick: _onClick,
      onClickCapture,
      onKeyDownCapture,
      onKeyUpCapture,
      onMouseDownCapture,
      onMouseUpCapture,
      onPointerDownCapture,
      onPointerUpCapture,
      onTouchStartCapture,
      onTouchEndCapture,
      testId,
      componentName: "IconButton",
      analyticsContext,
      type,
      interactionName
    }), import_react96.default.createElement(content_default, {
      type: "icon",
      isLoading
    }, import_react96.default.createElement(icon_renderer_default, {
      icon
    }), import_react96.default.createElement(visually_hidden_default, null, label)));
  }
  return import_react96.default.createElement(tooltip_default, {
    content: (_tooltip$content = tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.content) !== null && _tooltip$content !== void 0 ? _tooltip$content : label,
    testId: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.testId,
    position: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.position,
    delay: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.delay,
    onShow: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.onShow,
    onHide: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.onHide,
    mousePosition: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.mousePosition,
    analyticsContext: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.analyticsContext,
    strategy: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.strategy,
    tag: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.tag,
    truncate: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.truncate,
    component: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.component,
    hideTooltipOnClick: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.hideTooltipOnClick,
    hideTooltipOnMouseDown: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.hideTooltipOnMouseDown,
    ignoreTooltipPointerEvents: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.ignoreTooltipPointerEvents
  }, function(triggerProps) {
    return import_react96.default.createElement(button_base_default, _extends({}, saferRest, {
      appearance,
      autoFocus,
      isDisabled,
      isLoading,
      isSelected,
      isIconButton: true,
      isCircle: shape3 === "circle",
      hasIconBefore: false,
      spacing: spacing3,
      ariaLabelledBy,
      onClick: function onClick(e, analyticsEvent) {
        var _triggerProps$onClick;
        _onClick === null || _onClick === void 0 || _onClick(e, analyticsEvent);
        (_triggerProps$onClick = triggerProps.onClick) === null || _triggerProps$onClick === void 0 || _triggerProps$onClick.call(triggerProps, e);
      },
      onMouseOver: function onMouseOver(e) {
        var _triggerProps$onMouse, _saferRest$onMouseOve;
        (_triggerProps$onMouse = triggerProps.onMouseOver) === null || _triggerProps$onMouse === void 0 || _triggerProps$onMouse.call(triggerProps, e);
        (_saferRest$onMouseOve = saferRest.onMouseOver) === null || _saferRest$onMouseOve === void 0 || _saferRest$onMouseOve.call(saferRest, e);
      },
      onMouseOut: function onMouseOut(e) {
        var _triggerProps$onMouse2, _saferRest$onMouseOut;
        (_triggerProps$onMouse2 = triggerProps.onMouseOut) === null || _triggerProps$onMouse2 === void 0 || _triggerProps$onMouse2.call(triggerProps, e);
        (_saferRest$onMouseOut = saferRest.onMouseOut) === null || _saferRest$onMouseOut === void 0 || _saferRest$onMouseOut.call(saferRest, e);
      },
      onMouseMove: function onMouseMove(e) {
        var _triggerProps$onMouse3, _saferRest$onMouseMov;
        (_triggerProps$onMouse3 = triggerProps.onMouseMove) === null || _triggerProps$onMouse3 === void 0 || _triggerProps$onMouse3.call(triggerProps, e);
        (_saferRest$onMouseMov = saferRest.onMouseMove) === null || _saferRest$onMouseMov === void 0 || _saferRest$onMouseMov.call(saferRest, e);
      },
      onMouseDown: function onMouseDown(e) {
        var _triggerProps$onMouse4, _saferRest$onMouseDow;
        (_triggerProps$onMouse4 = triggerProps.onMouseDown) === null || _triggerProps$onMouse4 === void 0 || _triggerProps$onMouse4.call(triggerProps, e);
        (_saferRest$onMouseDow = saferRest.onMouseDown) === null || _saferRest$onMouseDow === void 0 || _saferRest$onMouseDow.call(saferRest, e);
      },
      onFocus: function onFocus(e) {
        var _triggerProps$onFocus, _saferRest$onFocus;
        (_triggerProps$onFocus = triggerProps.onFocus) === null || _triggerProps$onFocus === void 0 || _triggerProps$onFocus.call(triggerProps, e);
        (_saferRest$onFocus = saferRest.onFocus) === null || _saferRest$onFocus === void 0 || _saferRest$onFocus.call(saferRest, e);
      },
      onBlur: function onBlur(e) {
        var _triggerProps$onBlur, _saferRest$onBlur;
        (_triggerProps$onBlur = triggerProps.onBlur) === null || _triggerProps$onBlur === void 0 || _triggerProps$onBlur.call(triggerProps, e);
        (_saferRest$onBlur = saferRest.onBlur) === null || _saferRest$onBlur === void 0 || _saferRest$onBlur.call(saferRest, e);
      },
      ref: mergeRefs([ref, triggerProps === null || triggerProps === void 0 ? void 0 : triggerProps.ref].filter(Boolean)),
      onMouseDownCapture,
      onMouseUpCapture,
      onKeyDownCapture,
      onKeyUpCapture,
      onTouchStartCapture,
      onTouchEndCapture,
      onPointerDownCapture,
      onPointerUpCapture,
      onClickCapture,
      type,
      testId,
      analyticsContext,
      interactionName,
      componentName: "IconButton"
    }), import_react96.default.createElement(content_default, {
      type: "icon",
      isLoading
    }, import_react96.default.createElement(icon_renderer_default, {
      icon
    }), import_react96.default.createElement(visually_hidden_default, null, label)));
  });
}));
IconButton.displayName = "IconButton";

// node_modules/@atlaskit/button/dist/esm/new-button/variants/icon/link.js
init_extends();
init_objectWithoutProperties();
var React69 = __toESM(require_react());
init_runtime2();
var import_react97 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/button/dist/esm/new-button/variants/icon/link.compiled.css";
init_esm();
var _excluded13 = ["aria-label", "aria-labelledby", "analyticsContext", "appearance", "autoFocus", "href", "icon", "interactionName", "isDisabled", "isSelected", "isTooltipDisabled", "label", "onClick", "onClickCapture", "onKeyDownCapture", "onKeyUpCapture", "onMouseDownCapture", "onMouseUpCapture", "onPointerDownCapture", "onPointerUpCapture", "onTouchEndCapture", "onTouchStartCapture", "shape", "spacing", "testId", "tooltip"];
var _excluded29 = ["className", "css", "as", "style"];
var styles13 = {
  base: "_2rkosqtm _11c82smr _v5649dqc _189eidpf _1rjc12x7 _1e0c116y _vchhusvi _1bsb1wug _p12f1osq _kqswh2mm _4cvr1q9y _1bah1h6o _gy1p1b66 _1o9zidpf _4t3iviql _k48p1wq8 _y4tiutpp _bozgutpp _y3gn1h6o _s7n4nkob _14mj1kw7 _9v7aze3t _1tv3nqa1 _39yqe4h9 _11fnglyw _18postnw",
  linkDecorationUnset: "_4bfu1snc _1hmsagmp _ajmmvv82 _1a3b1r31 _4fprglyw _5goinqa1 _9oik1r31 _1bnxglyw _jf4cnqa1 _1nrm1r31 _c2waglyw _1iohnqa1",
  disabled: "_80om13gf _bfhksyzs _syaz1lh4 _aetrglyw _irr3syzs _30l31lh4 _1di6syzs _9h8h1lh4",
  spacingCompact: "_1rjcv77o _gy1p1b66 _y4tiutpp _bozgutpp _s7n4nkob _4t3i1k8s _1bsb1k8s",
  iconButton: "_4t3iviql _1bsbviql _y4tize3t _bozgze3t",
  circle: "_2rko14q2"
};
var defaultStyles3 = {
  root: "_bfhk1j54 _syaz10s3 _105310s3 _f8pj10s3 _irr3yw9d _30l310s3 _1di6ip91 _9h8h10s3",
  rootRefreshed: "_bfhksm61 _syaz1gjq _8l3mmuej _aetrb3bt _10531gjq _f8pj1gjq _irr3166n _30l31gjq _1di61dty _9h8h1gjq"
};
var primaryStyles3 = {
  root: "_bfhkomb0 _syaz15cr _105315cr _30l315cr _irr31wqm _9h8h15cr _1di617hq"
};
var discoveryStyles3 = {
  root: "_bfhk1vbi _syaz15cr _105315cr _30l315cr _irr37gr8 _9h8h15cr _1di61wu2"
};
var subtleStyles3 = {
  root: "_bfhkqtfy _syaz10s3 _105310s3 _f8pj10s3 _irr34mfv _30l310s3 _1di619qy _9h8h10s3",
  rootRefreshed: "_bfhkqtfy _syaz1gjq _10531gjq _f8pj1mjl _irr34mfv _30l31gjq _1di619qy _9h8h1gjq"
};
var selectedStyles3 = {
  root: "_bfhk7btw _syaz1pke _10531pke _f8pj1pke _irr3i1yw _30l3aqb7 _1di619ru _9h8haqb7",
  rootRefreshed: "_bfhkfg4m _syaz1ldt _8l3mcoux _aetrb3bt _10531ldt _f8pj1ldt _30l31ldt _9h8h1ldt",
  discovery: "_bfhk1g49 _syaz1pke _30l31pke _irr31g49 _9h8h1pke _1di61g49"
};
var LinkIconButtonBase = function LinkIconButtonBase2(_ref, ref) {
  var preventedAriaLabel = _ref["aria-label"], ariaLabelledBy = _ref["aria-labelledby"], analyticsContext = _ref.analyticsContext, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? "default" : _ref$appearance, _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus, href = _ref.href, icon = _ref.icon, interactionName = _ref.interactionName, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, _ref$isTooltipDisable = _ref.isTooltipDisabled, isTooltipDisabled = _ref$isTooltipDisable === void 0 ? true : _ref$isTooltipDisable, label = _ref.label, _onClick = _ref.onClick, onClickCapture = _ref.onClickCapture, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUpCapture = _ref.onKeyUpCapture, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUpCapture = _ref.onMouseUpCapture, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUpCapture = _ref.onPointerUpCapture, onTouchEndCapture = _ref.onTouchEndCapture, onTouchStartCapture = _ref.onTouchStartCapture, shape3 = _ref.shape, spacing3 = _ref.spacing, testId = _ref.testId, tooltip3 = _ref.tooltip, unsafeRest = _objectWithoutProperties(_ref, _excluded13);
  var _className = unsafeRest.className, _css = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = _objectWithoutProperties(unsafeRest, _excluded29);
  var localRef = (0, import_react97.useRef)(null);
  useAutoFocus(localRef, autoFocus);
  if (!isTooltipDisabled) {
    var _tooltip$content;
    return React69.createElement(tooltip_default, {
      content: (_tooltip$content = tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.content) !== null && _tooltip$content !== void 0 ? _tooltip$content : label,
      testId: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.testId,
      position: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.position,
      delay: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.delay,
      onShow: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.onShow,
      onHide: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.onHide,
      mousePosition: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.mousePosition,
      analyticsContext: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.analyticsContext,
      strategy: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.strategy,
      tag: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.tag,
      truncate: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.truncate,
      component: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.component,
      hideTooltipOnClick: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.hideTooltipOnClick,
      hideTooltipOnMouseDown: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.hideTooltipOnMouseDown,
      ignoreTooltipPointerEvents: tooltip3 === null || tooltip3 === void 0 ? void 0 : tooltip3.ignoreTooltipPointerEvents
    }, function(triggerProps) {
      return React69.createElement(anchor_default, _extends({}, saferRest, {
        "aria-labelledby": ariaLabelledBy,
        testId,
        componentName: "LinkIconButton",
        analyticsContext,
        interactionName,
        onMouseOver: function onMouseOver(e) {
          var _triggerProps$onMouse, _saferRest$onMouseOve;
          (_triggerProps$onMouse = triggerProps.onMouseOver) === null || _triggerProps$onMouse === void 0 || _triggerProps$onMouse.call(triggerProps, e);
          (_saferRest$onMouseOve = saferRest.onMouseOver) === null || _saferRest$onMouseOve === void 0 || _saferRest$onMouseOve.call(saferRest, e);
        },
        onMouseOut: function onMouseOut(e) {
          var _triggerProps$onMouse2, _saferRest$onMouseOut;
          (_triggerProps$onMouse2 = triggerProps.onMouseOut) === null || _triggerProps$onMouse2 === void 0 || _triggerProps$onMouse2.call(triggerProps, e);
          (_saferRest$onMouseOut = saferRest.onMouseOut) === null || _saferRest$onMouseOut === void 0 || _saferRest$onMouseOut.call(saferRest, e);
        },
        onMouseMove: function onMouseMove(e) {
          var _triggerProps$onMouse3, _saferRest$onMouseMov;
          (_triggerProps$onMouse3 = triggerProps.onMouseMove) === null || _triggerProps$onMouse3 === void 0 || _triggerProps$onMouse3.call(triggerProps, e);
          (_saferRest$onMouseMov = saferRest.onMouseMove) === null || _saferRest$onMouseMov === void 0 || _saferRest$onMouseMov.call(saferRest, e);
        },
        onMouseDown: function onMouseDown(e) {
          var _triggerProps$onMouse4, _saferRest$onMouseDow;
          (_triggerProps$onMouse4 = triggerProps.onMouseDown) === null || _triggerProps$onMouse4 === void 0 || _triggerProps$onMouse4.call(triggerProps, e);
          (_saferRest$onMouseDow = saferRest.onMouseDown) === null || _saferRest$onMouseDow === void 0 || _saferRest$onMouseDow.call(saferRest, e);
        },
        onFocus: function onFocus(e) {
          var _triggerProps$onFocus, _saferRest$onFocus;
          (_triggerProps$onFocus = triggerProps.onFocus) === null || _triggerProps$onFocus === void 0 || _triggerProps$onFocus.call(triggerProps, e);
          (_saferRest$onFocus = saferRest.onFocus) === null || _saferRest$onFocus === void 0 || _saferRest$onFocus.call(saferRest, e);
        },
        onBlur: function onBlur(e) {
          var _triggerProps$onBlur, _saferRest$onBlur;
          (_triggerProps$onBlur = triggerProps.onBlur) === null || _triggerProps$onBlur === void 0 || _triggerProps$onBlur.call(triggerProps, e);
          (_saferRest$onBlur = saferRest.onBlur) === null || _saferRest$onBlur === void 0 || _saferRest$onBlur.call(saferRest, e);
        },
        onClick: function onClick(event, analyticsEvent) {
          var _triggerProps$onClick;
          _onClick === null || _onClick === void 0 || _onClick(event, analyticsEvent);
          triggerProps === null || triggerProps === void 0 || (_triggerProps$onClick = triggerProps.onClick) === null || _triggerProps$onClick === void 0 || _triggerProps$onClick.call(triggerProps, event);
        },
        ref: mergeRefs([localRef, ref, triggerProps.ref].filter(Boolean)),
        xcss: cx2(
          styles13.base,
          appearance === "default" && (fg("platform-component-visual-refresh") ? defaultStyles3.rootRefreshed : defaultStyles3.root),
          appearance === "primary" && primaryStyles3.root,
          appearance === "discovery" && discoveryStyles3.root,
          appearance === "subtle" && (fg("platform-component-visual-refresh") ? subtleStyles3.rootRefreshed : subtleStyles3.root),
          styles13.linkDecorationUnset,
          isSelected && (fg("platform-component-visual-refresh") ? selectedStyles3.rootRefreshed : selectedStyles3.root),
          // TODO: remove me once we kill color fallbacks
          isSelected && appearance === "discovery" && selectedStyles3.discovery,
          isDisabled && styles13.disabled,
          spacing3 === "compact" && styles13.spacingCompact,
          styles13.iconButton,
          shape3 === "circle" && styles13.circle
        ),
        onMouseDownCapture,
        onMouseUpCapture,
        onKeyDownCapture,
        onKeyUpCapture,
        onTouchStartCapture,
        onTouchEndCapture,
        onPointerDownCapture,
        onPointerUpCapture,
        onClickCapture,
        href: isDisabled ? void 0 : href,
        role: isDisabled ? "link" : void 0,
        "aria-disabled": isDisabled === true ? true : void 0
      }), React69.createElement(content_default, {
        type: "icon",
        isLoading: false
      }, React69.createElement(icon_renderer_default, {
        icon
      }), React69.createElement(visually_hidden_default, null, label)));
    });
  }
  return React69.createElement(
    anchor_default,
    _extends({}, saferRest, {
      // aria-label={preventedAriaLabel}
      "aria-labelledby": ariaLabelledBy,
      ref: mergeRefs([localRef, ref]),
      xcss: cx2(
        styles13.base,
        appearance === "default" && (fg("platform-component-visual-refresh") ? defaultStyles3.rootRefreshed : defaultStyles3.root),
        appearance === "primary" && primaryStyles3.root,
        appearance === "discovery" && discoveryStyles3.root,
        appearance === "subtle" && (fg("platform-component-visual-refresh") ? subtleStyles3.rootRefreshed : subtleStyles3.root),
        styles13.linkDecorationUnset,
        isSelected && (fg("platform-component-visual-refresh") ? selectedStyles3.rootRefreshed : selectedStyles3.root),
        // TODO: remove me once we kill color fallbacks
        isSelected && appearance === "discovery" && selectedStyles3.discovery,
        isDisabled && styles13.disabled,
        styles13.iconButton,
        spacing3 === "compact" && styles13.spacingCompact,
        shape3 === "circle" && styles13.circle
      ),
      onClick: _onClick,
      onMouseDownCapture,
      onMouseUpCapture,
      onKeyDownCapture,
      onKeyUpCapture,
      onTouchStartCapture,
      onTouchEndCapture,
      onPointerDownCapture,
      onPointerUpCapture,
      onClickCapture,
      testId,
      href: isDisabled ? void 0 : href,
      role: isDisabled ? "link" : void 0,
      "aria-disabled": isDisabled === true ? true : void 0,
      componentName: "LinkIconButton",
      analyticsContext,
      interactionName
    }),
    React69.createElement(content_default, {
      type: "icon",
      isLoading: false
    }, React69.createElement(icon_renderer_default, {
      icon
    }), React69.createElement(visually_hidden_default, null, label))
  );
};
var WithRef = (0, import_react97.forwardRef)(LinkIconButtonBase);
var LinkIconButton = (0, import_react97.memo)(WithRef);

// node_modules/@atlaskit/button/dist/esm/new-button/containers/split-button/split-button.js
var React70 = __toESM(require_react());
init_runtime2();
init_esm();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/button/dist/esm/new-button/containers/split-button/split-button.compiled.css";

// node_modules/@atlaskit/button/dist/esm/new-button/containers/split-button/utils.js
init_slicedToArray();
var import_react98 = __toESM(require_react());

// node_modules/@atlaskit/ds-lib/dist/esm/utils/keycodes.js
var KEY_UP = "ArrowUp";
var KEY_DOWN = "ArrowDown";
var KEY_HOME = "Home";
var KEY_END = "End";
var KEY_TAB = "Tab";
var KEY_ENTER = "Enter";
var KEY_SPACE = "Space";

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-controlled.js
init_slicedToArray();
var import_react99 = __toESM(require_react());
function useControlled(propValue) {
  var getDefaultPropValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
    return propValue;
  };
  var isControlled = propValue !== void 0;
  var _useState = (0, import_react99.useState)(getDefaultPropValue), _useState2 = _slicedToArray(_useState, 2), valueState = _useState2[0], setValue = _useState2[1];
  var isControlledRef = (0, import_react99.useRef)(isControlled);
  (0, import_react99.useEffect)(function() {
    isControlledRef.current = isControlled;
  }, [isControlled]);
  var value = isControlled ? propValue : valueState;
  var setValueIfUncontrolled = (0, import_react99.useCallback)(function(newValue) {
    if (!isControlledRef.current) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-focus-event.js
init_slicedToArray();
var import_react100 = __toESM(require_react());
function useFocus() {
  var _useState = (0, import_react100.useState)(false), _useState2 = _slicedToArray(_useState, 2), isFocused = _useState2[0], setIsFocused = _useState2[1];
  var bindFocus = (0, import_react100.useRef)({
    onFocus: function onFocus() {
      return setIsFocused(true);
    },
    onBlur: function onBlur() {
      return setIsFocused(false);
    }
  });
  (0, import_react100.useEffect)(function() {
    return function() {
      return setIsFocused(false);
    };
  }, []);
  return {
    isFocused,
    bindFocus: bindFocus.current
  };
}

// node_modules/@atlaskit/dropdown-menu/dist/esm/dropdown-menu.js
var import_chevron_down = __toESM(require_chevron_down4());
init_esm();

// node_modules/@atlaskit/popup/dist/esm/popup.js
init_slicedToArray();
var React79 = __toESM(require_react());
init_runtime2();
var import_react121 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/popup/dist/esm/popup.compiled.css";

// node_modules/@atlaskit/layering/dist/esm/components/layering-context.js
init_defineProperty();
var import_react104 = __toESM(require_react());
init_esm();
function ownKeys12(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread12(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys12(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys12(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var LevelContext = (0, import_react104.createContext)(0);
var TopLevelContext = (0, import_react104.createContext)({
  topLevelRef: {
    current: null
  },
  layerList: {
    current: null
  },
  setTopLevel: noop7
});
var LevelProvider = function LevelProvider2(_ref) {
  var children = _ref.children, currentLevel = _ref.currentLevel;
  var _useContext = (0, import_react104.useContext)(TopLevelContext), setTopLevel = _useContext.setTopLevel, topLevelRef = _useContext.topLevelRef, layerList = _useContext.layerList;
  var id = (0, import_react104.useRef)(fg("layering-top-level-use-array") ? Math.random().toString(36) : "");
  if (!fg("layering-top-level-use-array")) {
    if (topLevelRef.current === null || currentLevel > topLevelRef.current) {
      setTopLevel(currentLevel);
    }
  }
  if (!fg("layering-top-level-use-array")) {
    (0, import_react104.useEffect)(function() {
      return function() {
        setTimeout(function() {
          setTopLevel(currentLevel - 1);
        }, 0);
      };
    }, [setTopLevel, currentLevel, topLevelRef]);
  }
  if (fg("layering-top-level-use-array")) {
    (0, import_react104.useEffect)(function() {
      var safeLayerList = layerList === null || layerList === void 0 ? void 0 : layerList.current;
      var safeId = id.current;
      if (!safeLayerList) {
        return;
      }
      safeLayerList.push(safeId);
      return function() {
        var index = safeLayerList.indexOf(safeId);
        if (index > -1) {
          safeLayerList.splice(index, 1);
        }
      };
    }, [layerList, id]);
  }
  return import_react104.default.createElement(LevelContext.Provider, {
    value: currentLevel
  }, children);
};
var LayeringProvider = function LayeringProvider2(_ref2) {
  var children = _ref2.children;
  var topLevelRef = (0, import_react104.useRef)(0);
  var layerList = (0, import_react104.useRef)([]);
  var value = (0, import_react104.useMemo)(function() {
    return _objectSpread12({
      topLevelRef,
      setTopLevel: function setTopLevel(level) {
        topLevelRef.current = level;
      }
    }, fg("layering-top-level-use-array") ? {
      layerList
    } : {});
  }, [topLevelRef]);
  return import_react104.default.createElement(TopLevelContext.Provider, {
    value
  }, children);
};
var Layering = function Layering2(_ref3) {
  var children = _ref3.children, _ref3$isDisabled = _ref3.isDisabled, isDisabled = _ref3$isDisabled === void 0 ? true : _ref3$isDisabled;
  var currentLevel = (0, import_react104.useContext)(LevelContext);
  if (isDisabled) {
    return import_react104.default.createElement(import_react104.default.Fragment, null, children);
  }
  var isNested = currentLevel > 0;
  var content = import_react104.default.createElement(LevelProvider, {
    currentLevel: currentLevel + 1
  }, children);
  return isNested ? content : import_react104.default.createElement(LayeringProvider, null, content);
};

// node_modules/@atlaskit/layering/dist/esm/hooks/index.js
init_defineProperty();
var import_react105 = __toESM(require_react());
var import_bind_event_listener9 = __toESM(require_dist());
init_esm();
function ownKeys13(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread13(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys13(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys13(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function useLayering() {
  var currentLevel = (0, import_react105.useContext)(LevelContext);
  var _useContext = (0, import_react105.useContext)(TopLevelContext), topLevelRef = _useContext.topLevelRef, layerList = _useContext.layerList;
  var isLayerDisabled = (0, import_react105.useCallback)(function() {
    if (fg("layering-top-level-use-array")) {
      var _layerList$current$le, _layerList$current;
      return ((_layerList$current$le = layerList === null || layerList === void 0 || (_layerList$current = layerList.current) === null || _layerList$current === void 0 ? void 0 : _layerList$current.length) !== null && _layerList$current$le !== void 0 ? _layerList$current$le : 0) !== currentLevel;
    }
    return !!topLevelRef.current && currentLevel !== topLevelRef.current;
  }, [currentLevel, topLevelRef, layerList]);
  return _objectSpread13({
    currentLevel,
    topLevelRef,
    isLayerDisabled
  }, fg("layering-top-level-use-array") ? {
    layerList
  } : {});
}

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer.js
init_slicedToArray();
var import_react107 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer-context.js
var import_react106 = __toESM(require_react());
var OpenLayerObserverContext2 = (0, import_react106.createContext)(null);

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer.js
var noNamespaceSymbol2 = Symbol("no-namespace");

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-notify-open-layer-observer.js
var import_react110 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-open-layer-observer-namespace.js
var import_react109 = __toESM(require_react());

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer-namespace-context.js
var import_react108 = __toESM(require_react());
var OpenLayerObserverNamespaceContext2 = (0, import_react108.createContext)(null);

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-open-layer-observer-namespace.js
function useOpenLayerObserverNamespace2() {
  var namespace = (0, import_react109.useContext)(OpenLayerObserverNamespaceContext2);
  return namespace;
}

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-notify-open-layer-observer.js
function useNotifyOpenLayerObserver2(_ref) {
  var isOpen = _ref.isOpen, onClose = _ref.onClose;
  var context = (0, import_react110.useContext)(OpenLayerObserverContext2);
  var namespace = useOpenLayerObserverNamespace2();
  (0, import_react110.useEffect)(function() {
    if (fg("platform_dst_open_layer_observer_close_layers")) {
      return;
    }
    if (context === null) {
      return;
    }
    if (!isOpen) {
      return;
    }
    context.increment();
    return function cleanup() {
      context.decrement();
    };
  }, [context, isOpen, namespace]);
  (0, import_react110.useEffect)(function() {
    if (!fg("platform_dst_open_layer_observer_close_layers")) {
      return;
    }
    if (context === null) {
      return;
    }
    if (!isOpen) {
      return;
    }
    return context.onClose(onClose, {
      namespace
    });
  }, [context, isOpen, namespace, onClose]);
}

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/use-open-layer-observer.js
var import_react111 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/layering/dist/esm/components/open-layer-observer/open-layer-observer-namespace-provider.js
var import_react112 = __toESM(require_react());

// node_modules/@atlaskit/popup/dist/esm/popup.js
init_esm();

// node_modules/@atlaskit/popup/dist/esm/popper-wrapper.js
init_slicedToArray();
init_extends();
init_objectWithoutProperties();
var React78 = __toESM(require_react());
var import_react117 = __toESM(require_react());
init_runtime2();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/popup/dist/esm/popper-wrapper.compiled.css";
init_esm();

// node_modules/@atlaskit/popup/dist/esm/reposition-on-update.js
var import_react113 = __toESM(require_react());
var RepositionOnUpdate = function RepositionOnUpdate2(_ref) {
  var children = _ref.children, update = _ref.update;
  var isFirstRenderRef = (0, import_react113.useRef)(true);
  (0, import_react113.useLayoutEffect)(function() {
    if (isFirstRenderRef.current) {
      isFirstRenderRef.current = false;
      return;
    }
    update();
  }, [update]);
  return import_react113.default.createElement(import_react113.Fragment, null, children);
};

// node_modules/@atlaskit/popup/dist/esm/use-close-manager.js
var import_react115 = __toESM(require_react());
var import_bind_event_listener10 = __toESM(require_dist());
init_esm();

// node_modules/@atlaskit/popup/dist/esm/utils/is-element-interactive.js
var interactiveTags = ["button", "a", "input", "select", "textarea"];
var isInteractiveElement = function isInteractiveElement2(element) {
  if (interactiveTags.includes(element.tagName.toLowerCase())) {
    return true;
  }
  if (element.getAttribute("tabindex") !== null || element.hasAttribute("contenteditable")) {
    return true;
  }
  return false;
};

// node_modules/@atlaskit/popup/dist/esm/utils/use-animation-frame.js
var import_react114 = __toESM(require_react());
var useAnimationFrame = function useAnimationFrame2() {
  var animationsRef = (0, import_react114.useRef)([]);
  var requestFrame = (0, import_react114.useCallback)(function(callback) {
    var id = requestAnimationFrame(callback);
    animationsRef.current.push(id);
    return id;
  }, []);
  var cancelFrame = (0, import_react114.useCallback)(function(id) {
    cancelAnimationFrame(id);
    animationsRef.current = animationsRef.current.filter(function(frameId) {
      return frameId !== id;
    });
  }, []);
  var cancelAllFrames = (0, import_react114.useCallback)(function() {
    animationsRef.current.forEach(function(id) {
      return cancelAnimationFrame(id);
    });
    animationsRef.current = [];
  }, []);
  return {
    requestFrame,
    cancelFrame,
    cancelAllFrames
  };
};

// node_modules/@atlaskit/popup/dist/esm/use-close-manager.js
var useCloseManager = function useCloseManager2(_ref) {
  var isOpen = _ref.isOpen, onClose = _ref.onClose, popupRef = _ref.popupRef, triggerRef = _ref.triggerRef, autoFocus = _ref.autoFocus, shouldDisableFocusTrap = _ref.shouldDisableFocusTrap, capture = _ref.shouldUseCaptureOnOutsideClick, shouldCloseOnTab = _ref.shouldCloseOnTab, shouldRenderToParent = _ref.shouldRenderToParent;
  var _useLayering = useLayering(), isLayerDisabled = _useLayering.isLayerDisabled, currentLevel = _useLayering.currentLevel;
  var _useAnimationFrame = useAnimationFrame(), requestFrame = _useAnimationFrame.requestFrame, cancelAllFrames = _useAnimationFrame.cancelAllFrames;
  (0, import_react115.useEffect)(function() {
    if (!isOpen || !popupRef) {
      return noop7;
    }
    var inIframe = window && window.self !== window.top && fg("fix-dropdown-close-outside-iframe");
    var closePopup = function closePopup2(event) {
      if (onClose) {
        var _currentLevel = null;
        if (event.target instanceof HTMLElement) {
          var _event$target$closest;
          _currentLevel = (_event$target$closest = event.target.closest("[data-ds--level]")) === null || _event$target$closest === void 0 ? void 0 : _event$target$closest.getAttribute("data-ds--level");
        }
        _currentLevel ? onClose(event, Number(_currentLevel)) : onClose(event);
      }
      if (shouldDisableFocusTrap && fg("platform_dst_popup-disable-focuslock")) {
        requestFrame(function() {
          triggerRef === null || triggerRef === void 0 || triggerRef.setAttribute("tabindex", "0");
          if (popupRef && autoFocus) {
            popupRef.setAttribute("tabindex", "0");
          }
        });
      }
    };
    var onClick = function onClick2(event) {
      var target = event.target;
      var doesDomNodeExist = document.body.contains(target);
      if (!doesDomNodeExist && !inIframe) {
        return;
      }
      if (isLayerDisabled()) {
        if (target instanceof HTMLElement) {
          var _target$closest;
          var layeredElement = (_target$closest = target.closest) === null || _target$closest === void 0 ? void 0 : _target$closest.call(target, "[data-ds--level]");
          if (layeredElement) {
            var closeType = layeredElement.getAttribute("[data-ds--close--type]");
            if (closeType === "single") {
              return;
            }
            var levelOfClickedLayer = layeredElement.getAttribute("data-ds--level");
            if (levelOfClickedLayer && Number(levelOfClickedLayer) > currentLevel) {
              return;
            }
          }
        }
      }
      var isClickOnPopup = popupRef && popupRef.contains(target);
      var isClickOnTrigger = triggerRef && triggerRef.contains(target);
      if (!isClickOnPopup && !isClickOnTrigger) {
        closePopup(event);
        if (document.activeElement && !isInteractiveElement(document.activeElement) && fg("platform_dst_popup-disable-focuslock")) {
          triggerRef === null || triggerRef === void 0 || triggerRef.focus();
        }
      }
    };
    var onKeyDown = function onKeyDown2(event) {
      if (fg("platform_dst_popup-disable-focuslock")) {
        var key = event.key, shiftKey = event.shiftKey;
        if (shiftKey && key === "Tab" && !shouldRenderToParent) {
          if (isLayerDisabled()) {
            return;
          }
          requestFrame(function() {
            var isPopupFocusOut = popupRef && !popupRef.contains(document.activeElement);
            if (isPopupFocusOut) {
              closePopup(event);
              if (currentLevel === 1) {
                triggerRef === null || triggerRef === void 0 || triggerRef.focus();
              }
            }
          });
          return;
        }
        if (key === "Tab") {
          var _document$activeEleme;
          if (shouldCloseOnTab) {
            if (isLayerDisabled()) {
              return;
            }
            closePopup(event);
            return;
          }
          if (isLayerDisabled() && (_document$activeEleme = document.activeElement) !== null && _document$activeEleme !== void 0 && _document$activeEleme.closest("[aria-modal]")) {
            return;
          }
          if (shouldDisableFocusTrap) {
            if (shouldRenderToParent) {
              requestFrame(function() {
                var isPopupFocusOut = popupRef && !popupRef.contains(document.activeElement);
                if (isPopupFocusOut) {
                  closePopup(event);
                }
              });
            } else {
              requestFrame(function() {
                if (!document.hasFocus()) {
                  closePopup(event);
                }
              });
            }
            return;
          }
        }
        if (isLayerDisabled()) {
          return;
        }
        if (key === "Escape" || key === "Esc") {
          if (triggerRef && autoFocus) {
            triggerRef.focus();
          }
          closePopup(event);
        }
      } else {
        if (isLayerDisabled()) {
          return;
        }
        var _key = event.key;
        if (_key === "Escape" || _key === "Esc" || shouldCloseOnTab && _key === "Tab") {
          closePopup(event);
        }
      }
    };
    var parentUnbind;
    if (inIframe && isOpen) {
      parentUnbind = (0, import_bind_event_listener10.bind)(window.parent.window, {
        type: "click",
        listener: onClick,
        options: {
          capture
        }
      });
    }
    var unbind = noop7;
    if (fg("popup-onclose-fix")) {
      setTimeout(function() {
        unbind = (0, import_bind_event_listener10.bindAll)(window, [{
          type: "click",
          listener: onClick,
          options: {
            capture
          }
        }, {
          type: "keydown",
          listener: onKeyDown
        }]);
      }, 0);
    } else {
      unbind = (0, import_bind_event_listener10.bindAll)(window, [{
        type: "click",
        listener: onClick,
        options: {
          capture
        }
      }, {
        type: "keydown",
        listener: onKeyDown
      }]);
    }
    var unbindBlur = noop7;
    unbindBlur = (0, import_bind_event_listener10.bind)(window, {
      type: "blur",
      listener: function onBlur(e) {
        if (isLayerDisabled() || !(document.activeElement instanceof HTMLIFrameElement)) {
          return;
        }
        closePopup(e);
      }
    });
    return function() {
      var _parentUnbind;
      if (fg("popup-onclose-fix")) {
        setTimeout(function() {
          unbind();
        }, 0);
      } else {
        unbind();
      }
      cancelAllFrames();
      (_parentUnbind = parentUnbind) === null || _parentUnbind === void 0 || _parentUnbind();
      unbindBlur();
    };
  }, [isOpen, onClose, popupRef, triggerRef, autoFocus, shouldDisableFocusTrap, capture, isLayerDisabled, shouldCloseOnTab, currentLevel, shouldRenderToParent, requestFrame, cancelAllFrames]);
};

// node_modules/@atlaskit/popup/dist/esm/use-focus-manager.js
var import_react116 = __toESM(require_react());
var import_focus_trap = __toESM(require_focus_trap());
init_esm();
var useFocusManager = function useFocusManager2(_ref) {
  var initialFocusRef = _ref.initialFocusRef, popupRef = _ref.popupRef, triggerRef = _ref.triggerRef, autoFocus = _ref.autoFocus, shouldCloseOnTab = _ref.shouldCloseOnTab, shouldDisableFocusTrap = _ref.shouldDisableFocusTrap, shouldReturnFocus = _ref.shouldReturnFocus, shouldRenderToParent = _ref.shouldRenderToParent;
  var _useAnimationFrame = useAnimationFrame(), requestFrame = _useAnimationFrame.requestFrame, cancelAllFrames = _useAnimationFrame.cancelAllFrames;
  var _useLayering = useLayering(), currentLevel = _useLayering.currentLevel;
  (0, import_react116.useEffect)(function() {
    if (!popupRef || shouldCloseOnTab) {
      return noop7;
    }
    if (shouldDisableFocusTrap && fg("platform_dst_popup-disable-focuslock")) {
      var isDropdown = popupRef.matches("[id^=ds--dropdown--]");
      var popups = document.querySelectorAll('[data-ds--level="'.concat(currentLevel - 1, '"]'));
      if (!(popups[popups.length - 1] && !shouldRenderToParent && isDropdown)) {
        requestFrame(function() {
          triggerRef === null || triggerRef === void 0 || triggerRef.setAttribute("tabindex", "-1");
          if (popupRef && autoFocus) {
            popupRef.setAttribute("tabindex", "-1");
          }
          (initialFocusRef || popupRef).focus();
        });
        return noop7;
      }
    }
    var trapConfig = {
      clickOutsideDeactivates: true,
      escapeDeactivates: true,
      initialFocus: initialFocusRef || popupRef,
      fallbackFocus: popupRef,
      returnFocusOnDeactivate: shouldReturnFocus
    };
    var focusTrap = (0, import_focus_trap.default)(popupRef, trapConfig);
    requestFrame(function() {
      focusTrap.activate();
    });
    return function() {
      cancelAllFrames();
      focusTrap.deactivate();
    };
  }, [popupRef, triggerRef, autoFocus, initialFocusRef, shouldCloseOnTab, shouldDisableFocusTrap, requestFrame, cancelAllFrames, shouldReturnFocus, shouldRenderToParent, currentLevel]);
};

// node_modules/@atlaskit/popup/dist/esm/popper-wrapper.js
var _excluded15 = ["shouldRenderToParent", "shouldFitContainer", "children", "appearance", "className"];
var wrapperStyles = {
  root: "_2rkoglpi _1e0c1ule _vchhusvi _1pby1nn1 _bfhk1bhr _16qs1cd0 _syaz1fxt _1q1l1bhr _nt751r31 _49pcglyw _1hvw1o36"
};
var focusRingStyles = {
  root: "_mizu194a _1ah31bk5 _ra3xnqa1 _128m1bk5 _1cvmnqa1 _4davt94y"
};
var DefaultPopupComponent = (0, import_react117.forwardRef)(function(props, ref) {
  var shouldRenderToParent = props.shouldRenderToParent, shouldFitContainer = props.shouldFitContainer, children = props.children, appearance = props.appearance, className = props.className, htmlAttributes = _objectWithoutProperties(props, _excluded15);
  return React78.createElement("div", _extends({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    className: ax([wrapperStyles.root, appearance === "UNSAFE_modal-below-sm" && "_dk5d1b66 _c71ldtre _kqsw1n9t _152t1b66", !shouldRenderToParent && "_1reo1wug _18m91wug", shouldFitContainer && "_1bsb1osq", className])
  }, htmlAttributes, {
    ref
  }), children);
});
function PopperWrapper(_ref) {
  var xcss = _ref.xcss, isOpen = _ref.isOpen, id = _ref.id, offset = _ref.offset, testId = _ref.testId, content = _ref.content, fallbackPlacements = _ref.fallbackPlacements, onClose = _ref.onClose, boundary = _ref.boundary, rootBoundary = _ref.rootBoundary, shouldFlip = _ref.shouldFlip, _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? "auto" : _ref$placement, _ref$popupComponent = _ref.popupComponent, PopupContainer = _ref$popupComponent === void 0 ? DefaultPopupComponent : _ref$popupComponent, _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus, triggerRef = _ref.triggerRef, shouldUseCaptureOnOutsideClick = _ref.shouldUseCaptureOnOutsideClick, shouldRenderToParent = _ref.shouldRenderToParent, shouldFitContainer = _ref.shouldFitContainer, shouldDisableFocusLock = _ref.shouldDisableFocusLock, _ref$shouldReturnFocu = _ref.shouldReturnFocus, shouldReturnFocus = _ref$shouldReturnFocu === void 0 ? true : _ref$shouldReturnFocu, strategy = _ref.strategy, role = _ref.role, label = _ref.label, titleId = _ref.titleId, modifiers = _ref.modifiers, shouldFitViewport = _ref.shouldFitViewport, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? "default" : _ref$appearance;
  var _useState = (0, import_react117.useState)(null), _useState2 = _slicedToArray(_useState, 2), popupRef = _useState2[0], setPopupRef = _useState2[1];
  var _useState3 = (0, import_react117.useState)(null), _useState4 = _slicedToArray(_useState3, 2), initialFocusRef = _useState4[0], setInitialFocusRef = _useState4[1];
  var shouldCloseOnTab = shouldRenderToParent && shouldDisableFocusLock;
  var shouldDisableFocusTrap = role !== "dialog";
  useFocusManager({
    initialFocusRef,
    popupRef,
    shouldCloseOnTab,
    triggerRef,
    autoFocus,
    shouldDisableFocusTrap,
    shouldReturnFocus
  });
  useCloseManager({
    isOpen,
    onClose,
    popupRef,
    triggerRef,
    shouldUseCaptureOnOutsideClick,
    shouldCloseOnTab,
    autoFocus,
    shouldDisableFocusTrap,
    shouldRenderToParent
  });
  var _useLayering = useLayering(), currentLevel = _useLayering.currentLevel;
  var mergedModifiers = (0, import_react117.useMemo)(function() {
    return [{
      name: "flip",
      enabled: shouldFlip,
      options: {
        rootBoundary,
        boundary,
        fallbackPlacements
      }
    }].concat(_toConsumableArray(modifiers || []));
  }, [shouldFlip, rootBoundary, boundary, fallbackPlacements, modifiers]);
  return React78.createElement(Popper2, {
    placement,
    offset,
    modifiers: mergedModifiers,
    strategy,
    shouldFitViewport
  }, function(_ref2) {
    var _ref3 = _ref2.ref, style = _ref2.style, placement2 = _ref2.placement, update = _ref2.update;
    var popupContainer = React78.createElement(
      PopupContainer,
      {
        className: ax([
          xcss,
          // @ts-expect-error: `ax` is not typed correctly
          !initialFocusRef && // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
          fg("platform-design-system-apply-popup-wrapper-focus") && focusRingStyles.root
        ]),
        appearance,
        id,
        "data-ds--level": currentLevel,
        "data-placement": placement2,
        "data-testid": testId,
        role,
        "aria-label": label,
        "aria-labelledby": titleId,
        ref: function ref(node) {
          if (node) {
            if (typeof _ref3 === "function") {
              _ref3(node);
            } else {
              _ref3.current = node;
            }
            setPopupRef(node);
          }
        },
        style: appearance === "UNSAFE_modal-below-sm" ? {} : style,
        tabIndex: autoFocus ? 0 : void 0,
        shouldRenderToParent,
        shouldFitContainer
      },
      React78.createElement(RepositionOnUpdate, {
        update
      }, content({
        update,
        isOpen,
        onClose,
        setInitialFocusRef
      }))
    );
    return React78.createElement(import_react117.Fragment, null, popupContainer, appearance === "UNSAFE_modal-below-sm" && React78.createElement("div", {
      className: ax(["_1r04idpf _kqsw1n9t _bfhk10xm"])
    }));
  });
}
var popper_wrapper_default = PopperWrapper;

// node_modules/@atlaskit/popup/dist/esm/use-appearance.js
init_slicedToArray();
var import_react118 = __toESM(require_react());
function usePopupAppearance(_ref) {
  var _appearance = _ref.appearance, _shouldRenderToParent = _ref.shouldRenderToParent;
  var mq = UNSAFE_useMediaQuery("below.sm", function(e) {
    setIsSmallViewport(!!e.matches);
  });
  var _useState = (0, import_react118.useState)(!!(mq !== null && mq !== void 0 && mq.matches)), _useState2 = _slicedToArray(_useState, 2), isSmallViewport = _useState2[0], setIsSmallViewport = _useState2[1];
  var appearance = _appearance === "UNSAFE_modal-below-sm" && isSmallViewport ? "UNSAFE_modal-below-sm" : "default";
  var shouldRenderToParent = _shouldRenderToParent && appearance === "default";
  return {
    appearance,
    shouldRenderToParent
  };
}

// node_modules/@atlaskit/popup/dist/esm/use-get-memoized-merged-trigger-ref.js
init_slicedToArray();
var import_react119 = __toESM(require_react());

// node_modules/memoize-one/dist/memoize-one.esm.js
var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === "number" && value !== value;
};
function isEqual2(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual2(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual2(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual3) {
  if (isEqual3 === void 0) {
    isEqual3 = areInputsEqual2;
  }
  var cache2 = null;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (cache2 && cache2.lastThis === this && isEqual3(newArgs, cache2.lastArgs)) {
      return cache2.lastResult;
    }
    var lastResult = resultFn.apply(this, newArgs);
    cache2 = {
      lastResult,
      lastArgs: newArgs,
      lastThis: this
    };
    return lastResult;
  }
  memoized.clear = function clear() {
    cache2 = null;
  };
  return memoized;
}

// node_modules/@atlaskit/popup/dist/esm/use-get-memoized-merged-trigger-ref.js
var useGetMemoizedMergedTriggerRef = function useGetMemoizedMergedTriggerRef2() {
  var _useState = (0, import_react119.useState)(function() {
    return memoizeOne(function(ref, setTriggerRef, isOpen) {
      return function(node) {
        if (node && isOpen) {
          if (typeof ref === "function") {
            ref(node);
          } else if (ref) {
            ref.current = node;
          }
          setTriggerRef(node);
        }
      };
    });
  }), _useState2 = _slicedToArray(_useState, 1), getMemoizedMergedTriggerRef = _useState2[0];
  return getMemoizedMergedTriggerRef;
};

// node_modules/@atlaskit/popup/dist/esm/use-get-memoized-merged-trigger-ref-new.js
init_slicedToArray();
var import_react120 = __toESM(require_react());
var useGetMemoizedMergedTriggerRefNew = function useGetMemoizedMergedTriggerRefNew2() {
  var _useState = (0, import_react120.useState)(function() {
    return memoizeOne(function(ref, setTriggerRef) {
      return function(node) {
        if (node) {
          if (typeof ref === "function") {
            ref(node);
          } else if (ref) {
            ref.current = node;
          }
          setTriggerRef(node);
        }
      };
    });
  }), _useState2 = _slicedToArray(_useState, 1), getMemoizedMergedTriggerRefNew = _useState2[0];
  return getMemoizedMergedTriggerRefNew;
};

// node_modules/@atlaskit/popup/dist/esm/popup.js
var defaultLayer = 400;
var wrapperStyles2 = {
  root: "_kqswh2mm"
};
var Popup = (0, import_react121.memo)(function(_ref) {
  var xcss = _ref.xcss, _ref$appearance = _ref.appearance, inAppearance = _ref$appearance === void 0 ? "default" : _ref$appearance, isOpen = _ref.isOpen, providedId = _ref.id, offset = _ref.offset, testId = _ref.testId, trigger = _ref.trigger, content = _ref.content, onClose = _ref.onClose, boundary = _ref.boundary, _ref$rootBoundary = _ref.rootBoundary, rootBoundary = _ref$rootBoundary === void 0 ? "viewport" : _ref$rootBoundary, _ref$shouldFlip = _ref.shouldFlip, shouldFlip = _ref$shouldFlip === void 0 ? true : _ref$shouldFlip, _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? "auto" : _ref$placement, fallbackPlacements = _ref.fallbackPlacements, PopupContainer = _ref.popupComponent, _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus, _ref$zIndex = _ref.zIndex, zIndex = _ref$zIndex === void 0 ? defaultLayer : _ref$zIndex, _ref$shouldUseCapture = _ref.shouldUseCaptureOnOutsideClick, shouldUseCaptureOnOutsideClick = _ref$shouldUseCapture === void 0 ? false : _ref$shouldUseCapture, _ref$shouldRenderToPa = _ref.shouldRenderToParent, inShouldRenderToParent = _ref$shouldRenderToPa === void 0 ? false : _ref$shouldRenderToPa, _ref$shouldFitContain = _ref.shouldFitContainer, shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain, _ref$shouldDisableFoc = _ref.shouldDisableFocusLock, shouldDisableFocusLock = _ref$shouldDisableFoc === void 0 ? false : _ref$shouldDisableFoc, _ref$shouldReturnFocu = _ref.shouldReturnFocus, shouldReturnFocus = _ref$shouldReturnFocu === void 0 ? true : _ref$shouldReturnFocu, strategy = _ref.strategy, role = _ref.role, label = _ref.label, titleId = _ref.titleId, modifiers = _ref.modifiers, shouldFitViewport = _ref.shouldFitViewport;
  var _useState = (0, import_react121.useState)(null), _useState2 = _slicedToArray(_useState, 2), triggerRef = _useState2[0], setTriggerRef = _useState2[1];
  var getMergedTriggerRef = useGetMemoizedMergedTriggerRef();
  var getMergedTriggerRefNew = useGetMemoizedMergedTriggerRefNew();
  var generatedId = useId();
  var _usePopupAppearance = usePopupAppearance({
    appearance: inAppearance,
    shouldRenderToParent: inShouldRenderToParent
  }), appearance = _usePopupAppearance.appearance, shouldRenderToParent = _usePopupAppearance.shouldRenderToParent;
  var id = providedId || generatedId;
  var handleOpenLayerObserverCloseSignal = (0, import_react121.useCallback)(function() {
    onClose === null || onClose === void 0 || onClose(null);
  }, [onClose]);
  useNotifyOpenLayerObserver2({
    isOpen,
    onClose: handleOpenLayerObserverCloseSignal
  });
  var renderPopperWrapper = React79.createElement(Layering, {
    isDisabled: false
  }, React79.createElement(popper_wrapper_default, {
    xcss,
    appearance,
    content,
    isOpen,
    placement,
    fallbackPlacements,
    boundary,
    rootBoundary,
    shouldFlip,
    offset,
    popupComponent: PopupContainer,
    id,
    testId,
    onClose,
    autoFocus,
    shouldUseCaptureOnOutsideClick,
    shouldRenderToParent: shouldRenderToParent || shouldFitContainer,
    shouldFitContainer,
    shouldDisableFocusLock,
    shouldReturnFocus,
    triggerRef,
    strategy: shouldFitContainer ? "absolute" : strategy,
    role,
    label,
    titleId,
    modifiers,
    shouldFitViewport
  }));
  var popupContent = React79.createElement(Manager, null, React79.createElement(Reference, null, function(_ref2) {
    var ref = _ref2.ref;
    return trigger({
      ref: !fg("platform-design-system-popup-ref") ? getMergedTriggerRef(ref, setTriggerRef, isOpen) : getMergedTriggerRefNew(ref, setTriggerRef),
      "aria-controls": isOpen ? id : void 0,
      "aria-expanded": isOpen,
      "aria-haspopup": role === "dialog" && fg("platform_dst_popup-disable-focuslock") ? "dialog" : true
    });
  }), isOpen && (shouldRenderToParent || shouldFitContainer ? renderPopperWrapper : React79.createElement(Portal, {
    zIndex
  }, renderPopperWrapper)));
  if (shouldFitContainer) {
    return React79.createElement(box_default, {
      xcss: wrapperStyles2.root
    }, popupContent);
  }
  return popupContent;
});

// node_modules/@atlaskit/popup/dist/esm/index.js
var esm_default3 = Popup;

// node_modules/@atlaskit/theme/dist/esm/constants.js
var gridSize = function gridSize2() {
  return 8;
};
var layers2 = {
  card: function card2() {
    return 100;
  },
  navigation: function navigation2() {
    return 200;
  },
  dialog: function dialog2() {
    return 300;
  },
  layer: function layer2() {
    return 400;
  },
  blanket: function blanket2() {
    return 500;
  },
  modal: function modal2() {
    return 510;
  },
  flag: function flag2() {
    return 600;
  },
  spotlight: function spotlight2() {
    return 700;
  },
  tooltip: function tooltip2() {
    return 9999;
  }
};

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/focus-manager.js
init_slicedToArray();
var import_react122 = __toESM(require_react());
var import_bind_event_listener11 = __toESM(require_dist());

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/utils/handle-focus.js
init_defineProperty();
init_esm();

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/utils/use-generated-id.js
var PREFIX = "ds--dropdown--";
function useGeneratedId() {
  var id = useId();
  return "".concat(PREFIX).concat(id);
}

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/utils/handle-focus.js
var actionMap = _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, KEY_DOWN, "next"), KEY_UP, "prev"), KEY_HOME, "first"), KEY_END, "last");
var getNextFocusableElement = function getNextFocusableElement2(refs, currentFocusedIdx) {
  if (fg("dropdown-menu-disabled-navigation-fix")) {
    for (var i = 0; i < refs.length - 1; i++) {
      if (currentFocusedIdx + 1 === refs.length) {
        currentFocusedIdx = 0;
      } else {
        currentFocusedIdx++;
      }
      var element = refs[currentFocusedIdx].current;
      var isValid = !!element && !element.hasAttribute("disabled");
      if (isValid) {
        return element;
      }
    }
  } else {
    while (currentFocusedIdx + 1 < refs.length) {
      var _element = refs[++currentFocusedIdx].current;
      var _isValid = !!_element && !_element.hasAttribute("disabled");
      if (_isValid) {
        return _element;
      }
    }
  }
};
var getPrevFocusableElement = function getPrevFocusableElement2(refs, currentFocusedIdx) {
  if (fg("dropdown-menu-disabled-navigation-fix")) {
    for (var i = 0; i < refs.length - 1; i++) {
      if (currentFocusedIdx === 0) {
        currentFocusedIdx = refs.length - 1;
      } else {
        currentFocusedIdx--;
      }
      var element = refs[currentFocusedIdx].current;
      var isValid = !!element && !element.hasAttribute("disabled");
      if (isValid) {
        return element;
      }
    }
  } else {
    while (currentFocusedIdx > 0) {
      var _element2 = refs[--currentFocusedIdx].current;
      var _isValid2 = !!_element2 && !_element2.hasAttribute("disabled");
      if (_isValid2) {
        return _element2;
      }
    }
  }
};
function handleFocus(refs, isLayerDisabled, onClose) {
  return function(e) {
    var _refs$current;
    var currentRefs = (_refs$current = refs.current) !== null && _refs$current !== void 0 ? _refs$current : [];
    var currentFocusedIdx = currentRefs.findIndex(function(_ref) {
      var _document$activeEleme;
      var el = _ref.current;
      return el && ((_document$activeEleme = document.activeElement) === null || _document$activeEleme === void 0 ? void 0 : _document$activeEleme.isSameNode(el));
    });
    if (fg("platform_dst_popup-disable-focuslock")) {
      var _document$activeEleme2;
      var isNestedDropdown = !!((_document$activeEleme2 = document.activeElement) !== null && _document$activeEleme2 !== void 0 && _document$activeEleme2.closest("[id^=".concat(PREFIX, "]")));
      if (isLayerDisabled() && isNestedDropdown) {
        if (e.key === KEY_TAB && !e.shiftKey) {
          onClose(e);
        }
        return;
      }
    } else {
      if (isLayerDisabled()) {
        if (e.key === KEY_TAB && !e.shiftKey) {
          onClose(e);
        }
        return;
      }
    }
    var action = actionMap[e.key];
    switch (action) {
      case "next":
        e.preventDefault();
        if (fg("dropdown-menu-disabled-navigation-fix")) {
          var _nextFocusableElement = getNextFocusableElement(currentRefs, currentFocusedIdx);
          _nextFocusableElement === null || _nextFocusableElement === void 0 || _nextFocusableElement.focus();
          break;
        }
        if (currentFocusedIdx < currentRefs.length - 1) {
          var _nextFocusableElement2 = getNextFocusableElement(currentRefs, currentFocusedIdx);
          _nextFocusableElement2 === null || _nextFocusableElement2 === void 0 || _nextFocusableElement2.focus();
        } else {
          var firstFocusableElement = getNextFocusableElement(currentRefs, -1);
          firstFocusableElement === null || firstFocusableElement === void 0 || firstFocusableElement.focus();
        }
        break;
      case "prev":
        e.preventDefault();
        if (fg("dropdown-menu-disabled-navigation-fix")) {
          var _prevFocusableElement = getPrevFocusableElement(currentRefs, currentFocusedIdx);
          _prevFocusableElement === null || _prevFocusableElement === void 0 || _prevFocusableElement.focus();
          break;
        }
        if (currentFocusedIdx > 0) {
          var _prevFocusableElement2 = getPrevFocusableElement(currentRefs, currentFocusedIdx);
          _prevFocusableElement2 === null || _prevFocusableElement2 === void 0 || _prevFocusableElement2.focus();
        } else {
          var lastFocusableElement = getPrevFocusableElement(currentRefs, currentRefs.length);
          lastFocusableElement === null || lastFocusableElement === void 0 || lastFocusableElement.focus();
        }
        break;
      case "first":
        e.preventDefault();
        var nextFocusableElement = getNextFocusableElement(currentRefs, -1);
        nextFocusableElement === null || nextFocusableElement === void 0 || nextFocusableElement.focus();
        break;
      case "last":
        e.preventDefault();
        var prevFocusableElement = getPrevFocusableElement(currentRefs, currentRefs.length);
        prevFocusableElement === null || prevFocusableElement === void 0 || prevFocusableElement.focus();
        break;
      default:
        return;
    }
  };
}

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/focus-manager.js
var FocusManagerContext = (0, import_react122.createContext)({
  menuItemRefs: [],
  registerRef: noop7
});
var FocusManager = function FocusManager2(_ref) {
  var children = _ref.children, onClose = _ref.onClose;
  var menuItemRefs = (0, import_react122.useRef)([]);
  var _useState = (0, import_react122.useState)(0), _useState2 = _slicedToArray(_useState, 2), refresh = _useState2[0], setRefresh = _useState2[1];
  var registerMode = (0, import_react122.useRef)("ordered");
  registerMode.current = "ordered";
  var registerRef = (0, import_react122.useCallback)(
    function(ref) {
      if (menuItemRefs.current.includes(ref)) {
        return;
      }
      switch (registerMode.current) {
        case "ordered":
          menuItemRefs.current.push(ref);
          break;
        case "unordered":
          registerMode.current = "regenerate";
          menuItemRefs.current = [];
          setRefresh(refresh + 1);
          break;
        case "regenerate":
          break;
        default:
          throw new Error("Unexpected case of ".concat(registerMode.current));
      }
    },
    // Updating register ref on force reload will cause `useRegisterItemWithFocusManager` to re-register
    [refresh]
  );
  var _useLayering = useLayering(), isLayerDisabled = _useLayering.isLayerDisabled;
  (0, import_react122.useEffect)(function() {
    if (registerMode.current === "ordered") {
      registerMode.current = "unordered";
    }
  });
  (0, import_react122.useEffect)(function() {
    return (0, import_bind_event_listener11.bind)(window, {
      type: "keydown",
      listener: handleFocus(menuItemRefs, isLayerDisabled, onClose)
    });
  }, [isLayerDisabled, onClose]);
  var contextValue = {
    menuItemRefs: menuItemRefs.current,
    registerRef
  };
  return import_react122.default.createElement(FocusManagerContext.Provider, {
    value: contextValue
  }, children);
};
var focus_manager_default = FocusManager;

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/menu-wrapper.js
var React82 = __toESM(require_react());
init_runtime2();
var import_react124 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/menu-wrapper.compiled.css";

// node_modules/@atlaskit/menu/dist/esm/menu-section/menu-group.js
init_extends();
init_objectWithoutProperties();
var React81 = __toESM(require_react());
init_runtime2();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/menu/dist/esm/menu-section/menu-group.compiled.css";

// node_modules/@atlaskit/menu/dist/esm/internal/components/menu-context.js
var import_react123 = __toESM(require_react());
var SpacingContext = (0, import_react123.createContext)("cozy");
var SELECTION_STYLE_CONTEXT_DO_NOT_USE = (0, import_react123.createContext)("border");

// node_modules/@atlaskit/menu/dist/esm/menu-section/menu-group.js
var _excluded16 = ["isLoading", "maxWidth", "minWidth", "minHeight", "maxHeight", "testId", "role", "spacing", "className"];
var MenuGroup = function MenuGroup2(_ref) {
  var isLoading = _ref.isLoading, maxWidth = _ref.maxWidth, minWidth = _ref.minWidth, minHeight = _ref.minHeight, maxHeight = _ref.maxHeight, testId = _ref.testId, role = _ref.role, _ref$spacing = _ref.spacing, spacing3 = _ref$spacing === void 0 ? "cozy" : _ref$spacing, UNSAFE_className = _ref.className, rest = _objectWithoutProperties(_ref, _excluded16);
  return React81.createElement(SpacingContext.Provider, {
    value: spacing3
  }, React81.createElement(SELECTION_STYLE_CONTEXT_DO_NOT_USE.Provider, {
    value: "border"
  }, React81.createElement("div", _extends({
    "aria-busy": isLoading,
    style: {
      minWidth,
      maxWidth,
      minHeight,
      maxHeight
    },
    "data-testid": testId,
    role,
    className: ax(["_1reo1wug _18m91wug _1e0c1txw _kqswpfqs _2lx21bp4", UNSAFE_className])
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest))));
};
var menu_group_default = MenuGroup;

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/utils/is-checkbox-item.js
function isCheckboxItem(element) {
  var role = element.getAttribute("role");
  return role === "checkbox" || role === "menuitemcheckbox";
}

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/utils/is-radio-item.js
function isCheckboxItem2(element) {
  var role = element.getAttribute("role");
  return role === "radio" || role === "menuitemradio";
}

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/menu-wrapper.js
var styles14 = {
  spinnerContainer: "_1e0c1txw _1ul91lit _1bah1h6o _ca0qv47k _u5f3v47k _n3tdv47k _19bvv47k"
};
var LoadingIndicator = function LoadingIndicator2(_ref) {
  var _ref$statusLabel = _ref.statusLabel, statusLabel = _ref$statusLabel === void 0 ? "Loading" : _ref$statusLabel, testId = _ref.testId;
  return React82.createElement(box_default, {
    xcss: styles14.spinnerContainer,
    role: "menuitem"
  }, React82.createElement(spinner_default, {
    size: "small",
    label: statusLabel,
    testId
  }));
};
var MenuWrapper = function MenuWrapper2(_ref2) {
  var children = _ref2.children, isLoading = _ref2.isLoading, maxHeight = _ref2.maxHeight, maxWidth = _ref2.maxWidth, onClose = _ref2.onClose, onUpdate = _ref2.onUpdate, statusLabel = _ref2.statusLabel, setInitialFocusRef = _ref2.setInitialFocusRef, shouldRenderToParent = _ref2.shouldRenderToParent, spacing3 = _ref2.spacing, testId = _ref2.testId, isTriggeredUsingKeyboard = _ref2.isTriggeredUsingKeyboard, autoFocus = _ref2.autoFocus;
  var _useContext = (0, import_react124.useContext)(FocusManagerContext), menuItemRefs = _useContext.menuItemRefs;
  var closeOnMenuItemClick = function closeOnMenuItemClick2(e) {
    var isTargetMenuItemOrDescendant = menuItemRefs.some(function(menuItemRef) {
      var menuItem = menuItemRef.current;
      if (!menuItem) {
        return false;
      }
      var isCheckboxOrRadio = isCheckboxItem(menuItem) || isCheckboxItem2(menuItem);
      return menuItem.contains(e.target) && !isCheckboxOrRadio;
    });
    if (isTargetMenuItemOrDescendant && onClose) {
      onClose(e);
    }
  };
  (0, import_react124.useLayoutEffect)(function() {
    onUpdate();
  }, [isLoading, onUpdate]);
  (0, import_react124.useEffect)(function() {
    var _menuItemRefs$map$fin;
    var firstFocusableRef = (_menuItemRefs$map$fin = menuItemRefs.map(function(_ref3) {
      var current = _ref3.current;
      return current;
    }).find(function(el) {
      return !!el && !el.hasAttribute("disabled");
    })) !== null && _menuItemRefs$map$fin !== void 0 ? _menuItemRefs$map$fin : null;
    if (shouldRenderToParent && (isTriggeredUsingKeyboard || autoFocus)) {
      firstFocusableRef === null || firstFocusableRef === void 0 || firstFocusableRef.focus();
    }
    setInitialFocusRef === null || setInitialFocusRef === void 0 || setInitialFocusRef(firstFocusableRef);
  }, [menuItemRefs, setInitialFocusRef, autoFocus, shouldRenderToParent, isTriggeredUsingKeyboard]);
  return React82.createElement(menu_group_default, {
    isLoading,
    maxHeight,
    maxWidth,
    onClick: closeOnMenuItemClick,
    role: "menu",
    spacing: spacing3,
    testId: testId && "".concat(testId, "--menu-group")
  }, isLoading ? React82.createElement(LoadingIndicator, {
    statusLabel,
    testId: testId && "".concat(testId, "--loading-indicator")
  }) : children);
};
var menu_wrapper_default = MenuWrapper;

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/context/selection-store.js
var import_react125 = __toESM(require_react());
var SelectionStoreContext = (0, import_react125.createContext)({
  setItemState: noop7,
  getItemState: function getItemState() {
    return void 0;
  },
  setGroupState: noop7,
  getGroupState: function getGroupState() {
    return {};
  }
});
var SelectionStore = function SelectionStore2(props) {
  var children = props.children;
  var store = (0, import_react125.useRef)({});
  var context = (0, import_react125.useMemo)(function() {
    return {
      setItemState: function setItemState(group, id, value) {
        if (!store.current[group]) {
          store.current[group] = {};
        }
        store.current[group][id] = value;
      },
      getItemState: function getItemState2(group, id) {
        if (!store.current[group]) {
          return void 0;
        }
        return store.current[group][id];
      },
      setGroupState: function setGroupState(group, value) {
        store.current[group] = value;
      },
      getGroupState: function getGroupState2(group) {
        return store.current[group] || {};
      }
    };
  }, []);
  return import_react125.default.createElement(SelectionStoreContext.Provider, {
    value: context
  }, children);
};
var selection_store_default = SelectionStore;

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/hooks/use-register-item-with-focus-manager.js
var import_react126 = __toESM(require_react());
init_esm();
function useRegisterItemWithFocusManager() {
  var hasPopup = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  var _useContext = (0, import_react126.useContext)(FocusManagerContext), registerRef = _useContext.registerRef;
  var itemRef = (0, import_react126.useRef)(null);
  (0, import_react126.useEffect)(function() {
    if (hasPopup && fg("select-avoid-duplicated-registered-ref")) {
      return;
    }
    registerRef(itemRef);
  }, [registerRef, hasPopup]);
  return itemRef;
}
var use_register_item_with_focus_manager_default = useRegisterItemWithFocusManager;

// node_modules/@atlaskit/dropdown-menu/dist/esm/dropdown-menu.js
var _excluded17 = ["ref", "aria-controls", "aria-expanded", "aria-haspopup"];
function ownKeys14(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread14(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys14(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys14(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var gridSize3 = gridSize();
var MAX_HEIGHT = "calc(100vh - ".concat(gridSize3 * 2, "px)");
var opposites = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left",
  start: "end",
  auto: "auto",
  end: "start"
};
var getFallbackPlacements = function getFallbackPlacements2(placement) {
  var placementPieces = placement.split("-");
  var mainAxis = placementPieces[0];
  if (!["top", "bottom"].includes(mainAxis)) {
    return void 0;
  } else if (placementPieces.length === 2 && ["start", "end"].includes(placementPieces[1])) {
    var crossAxis = placementPieces[1];
    return ["".concat(mainAxis), "".concat(mainAxis, "-").concat(opposites[crossAxis]), "".concat(opposites[mainAxis], "-").concat(crossAxis), "".concat(opposites[mainAxis]), "".concat(opposites[mainAxis], "-").concat(opposites[crossAxis]), "auto"];
  } else {
    return ["".concat(mainAxis, "-start"), "".concat(mainAxis, "-end"), "".concat(opposites[mainAxis]), "".concat(opposites[mainAxis], "-start"), "".concat(opposites[mainAxis], "-end"), "auto"];
  }
};
function isKeyboardEvent(event) {
  return event !== null && (event instanceof KeyboardEvent || "nativeEvent" in event && event.nativeEvent instanceof KeyboardEvent);
}
var DropdownMenu = function DropdownMenu2(_ref) {
  var _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus, children = _ref.children, _ref$defaultOpen = _ref.defaultOpen, defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, isOpen = _ref.isOpen, _ref$onOpenChange = _ref.onOpenChange, onOpenChange = _ref$onOpenChange === void 0 ? noop7 : _ref$onOpenChange, _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? "bottom-start" : _ref$placement, _ref$shouldFitContain = _ref.shouldFitContainer, shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain, _ref$shouldFlip = _ref.shouldFlip, shouldFlip = _ref$shouldFlip === void 0 ? true : _ref$shouldFlip, _ref$shouldRenderToPa = _ref.shouldRenderToParent, shouldRenderToParent = _ref$shouldRenderToPa === void 0 ? false : _ref$shouldRenderToPa, returnFocusRef = _ref.returnFocusRef, spacing3 = _ref.spacing, statusLabel = _ref.statusLabel, testId = _ref.testId, _trigger = _ref.trigger, _ref$zIndex = _ref.zIndex, zIndex = _ref$zIndex === void 0 ? layers2.modal() : _ref$zIndex, label = _ref.label, interactionName = _ref.interactionName, strategy = _ref.strategy;
  var _useControlledState = useControlled(isOpen, function() {
    return defaultOpen;
  }), _useControlledState2 = _slicedToArray(_useControlledState, 2), isLocalOpen = _useControlledState2[0], setLocalIsOpen = _useControlledState2[1];
  var triggerRef = (0, import_react127.useRef)(null);
  var _useState = (0, import_react127.useState)(false), _useState2 = _slicedToArray(_useState, 2), isTriggeredUsingKeyboard = _useState2[0], setTriggeredUsingKeyboard = _useState2[1];
  var id = useGeneratedId();
  var itemRef = use_register_item_with_focus_manager_default();
  var fallbackPlacements = (0, import_react127.useMemo)(function() {
    return getFallbackPlacements(placement);
  }, [placement]);
  var handleTriggerClicked = (0, import_react127.useCallback)(
    // TODO: event is an `any` and is being cast incorrectly
    // This means that the public type for `onOpenChange` is incorrect
    // current: (event: React.MouseEvent | React.KeyboardEvent) => void;
    // correct: (event: React.MouseEvent | KeyboardEvent) => void;
    // https://product-fabric.atlassian.net/browse/DSP-4692
    function(event) {
      var newValue = !isLocalOpen;
      var clientX = event.clientX, clientY = event.clientY, type = event.type, detail = event.detail;
      if (type === "keydown") {
        setTriggeredUsingKeyboard(true);
      } else if (clientX === 0 || clientY === 0) {
        setTriggeredUsingKeyboard(true);
      } else if (detail === 0) {
        setTriggeredUsingKeyboard(true);
      } else {
        var _itemRef$current;
        itemRef === null || itemRef === void 0 || (_itemRef$current = itemRef.current) === null || _itemRef$current === void 0 || _itemRef$current.focus();
        setTriggeredUsingKeyboard(false);
      }
      setLocalIsOpen(newValue);
      onOpenChange({
        isOpen: newValue,
        event
      });
    },
    [isLocalOpen, setLocalIsOpen, onOpenChange, itemRef]
  );
  var handleOnClose = (0, import_react127.useCallback)(function(event, currentLevel) {
    var _event$target$closest, _event$target;
    var isTabOrEscapeKey = isKeyboardEvent(event) && (event.key === "Tab" || event.key === "Escape");
    if (event !== null && !isTabOrEscapeKey && event.target instanceof HTMLElement && (_event$target$closest = (_event$target = event.target).closest) !== null && _event$target$closest !== void 0 && _event$target$closest.call(_event$target, "[id^=".concat(PREFIX, "] [aria-haspopup]"))) {
      var _itemRef$current2;
      if (!currentLevel) {
        return;
      }
      var toCloseLevel = (_itemRef$current2 = itemRef.current) === null || _itemRef$current2 === void 0 ? void 0 : _itemRef$current2.dataset["ds-Level"];
      if (toCloseLevel && Number(toCloseLevel) < currentLevel) {
        return;
      }
    }
    if (returnFocusRef) {
      requestAnimationFrame(function() {
        var _returnFocusRef$curre;
        (_returnFocusRef$curre = returnFocusRef.current) === null || _returnFocusRef$curre === void 0 || _returnFocusRef$curre.focus();
      });
    } else if (isKeyboardEvent(event) && (event.key === "Tab" && event.shiftKey || event.key === "Escape")) {
      requestAnimationFrame(function() {
        var _itemRef$current3;
        (_itemRef$current3 = itemRef.current) === null || _itemRef$current3 === void 0 || _itemRef$current3.focus();
      });
    } else if (triggerRef.current) {
      var _event$target$closest2, _event$target2;
      var isClickOutsideMenu = (event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement && ((_event$target$closest2 = (_event$target2 = event.target).closest) === null || _event$target$closest2 === void 0 ? void 0 : _event$target$closest2.call(_event$target2, '[role="menu"]')) === null;
      var shouldPreventFocus = isClickOutsideMenu && document.activeElement !== document.body && // except if clicking on the body
      fg("platform_design_system_team_dropdown_return_focus");
      if (!shouldPreventFocus) {
        requestAnimationFrame(function() {
          var _triggerRef$current;
          (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 || _triggerRef$current.focus();
        });
      }
    }
    var newValue = false;
    setLocalIsOpen(newValue);
    onOpenChange({
      isOpen: newValue,
      event
    });
  }, [itemRef, onOpenChange, returnFocusRef, setLocalIsOpen]);
  var _useFocus = useFocus(), isFocused = _useFocus.isFocused, bindFocus = _useFocus.bindFocus;
  (0, import_react127.useEffect)(function() {
    if (!isFocused) {
      return noop7;
    }
    if (isLocalOpen) {
      return noop7;
    }
    return (0, import_bind_event_listener12.bind)(window, {
      type: "keydown",
      listener: function openOnKeyDown(e) {
        var isNestedTriggerButton;
        if (e.target instanceof HTMLElement) {
          isNestedTriggerButton = e.target.closest("[id^=".concat(PREFIX, "] [aria-haspopup]"));
        }
        if (e.key === KEY_DOWN && !isNestedTriggerButton) {
          e.preventDefault();
          handleTriggerClicked(e);
        } else if ((e.code === KEY_SPACE || e.key === KEY_ENTER) && e.detail === 0) {
          setTriggeredUsingKeyboard(true);
        } else if (e.key === KEY_TAB && isNestedTriggerButton) {
          handleOnClose(e);
        }
      }
    });
  }, [isFocused, isLocalOpen, handleTriggerClicked, handleOnClose]);
  var conditionalProps = shouldFitContainer ? {
    shouldFitContainer,
    // When shouldFitContainer is true, `fixed` positions are not allowed
    strategy: strategy !== "fixed" ? strategy : void 0
  } : {
    shouldRenderToParent,
    strategy
  };
  return import_react127.default.createElement(selection_store_default, null, import_react127.default.createElement(esm_default3, _extends({
    id: isLocalOpen ? id : void 0,
    shouldFlip,
    isOpen: isLocalOpen,
    shouldReturnFocus: (
      // If returnFocusRef is provided, we **don't** want to return focus to the trigger.
      // Otherwise, Popup will focus on the dropdown trigger after the `returnFocusRef` element is focused.
      returnFocusRef === void 0
    ),
    onClose: handleOnClose,
    zIndex,
    placement,
    fallbackPlacements,
    testId: testId && "".concat(testId, "--content"),
    shouldUseCaptureOnOutsideClick: true
  }, conditionalProps, {
    shouldDisableFocusLock: true,
    trigger: function trigger(_ref2) {
      var ref = _ref2.ref, ariaControls = _ref2["aria-controls"], ariaExpanded = _ref2["aria-expanded"], ariaHasPopup = _ref2["aria-haspopup"], rest = _objectWithoutProperties(_ref2, _excluded17);
      if (typeof _trigger === "function") {
        return _trigger(_objectSpread14(_objectSpread14(_objectSpread14({
          "aria-controls": ariaControls,
          "aria-expanded": ariaExpanded,
          "aria-haspopup": ariaHasPopup
        }, rest), bindFocus), {}, {
          triggerRef: mergeRefs([ref, triggerRef, itemRef]),
          isSelected: isLocalOpen,
          onClick: handleTriggerClicked,
          testId: testId && "".concat(testId, "--trigger")
        }));
      }
      return import_react127.default.createElement(button_default, _extends({}, bindFocus, {
        ref: mergeRefs([ref, triggerRef, itemRef]),
        "aria-controls": ariaControls,
        "aria-expanded": ariaExpanded,
        "aria-haspopup": ariaHasPopup,
        isSelected: isLocalOpen,
        iconAfter: import_chevron_down.default,
        onClick: handleTriggerClicked,
        testId: testId && "".concat(testId, "--trigger"),
        "aria-label": label
      }, fg("platform_button_item-add-ufo-metrics") && {
        interactionName
      }), _trigger);
    },
    content: function content(_ref3) {
      var setInitialFocusRef = _ref3.setInitialFocusRef, update = _ref3.update;
      return import_react127.default.createElement(focus_manager_default, {
        onClose: handleOnClose
      }, import_react127.default.createElement(menu_wrapper_default, {
        spacing: spacing3,
        maxHeight: MAX_HEIGHT,
        maxWidth: shouldFitContainer ? void 0 : 800,
        onClose: handleOnClose,
        onUpdate: update,
        isLoading,
        statusLabel,
        setInitialFocusRef: isTriggeredUsingKeyboard || autoFocus ? setInitialFocusRef : void 0,
        shouldRenderToParent: shouldRenderToParent || shouldFitContainer,
        isTriggeredUsingKeyboard,
        autoFocus,
        testId: testId && "".concat(testId, "--menu-wrapper")
      }, children));
    }
  })));
};
var dropdown_menu_default = DropdownMenu;

// node_modules/@atlaskit/dropdown-menu/dist/esm/dropdown-menu-item-group.js
init_extends();
init_objectWithoutProperties();
var import_react140 = __toESM(require_react());

// node_modules/@atlaskit/menu/dist/esm/menu-item/button-item.js
init_extends();
init_objectWithoutProperties();
var React86 = __toESM(require_react());
init_runtime2();
var import_react129 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/menu/dist/esm/internal/components/menu-item-primitive.js
var React85 = __toESM(require_react());
var import_react128 = __toESM(require_react());
init_runtime2();
init_esm();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/menu/dist/esm/internal/components/menu-item-primitive.compiled.css";
var renderTitle = function renderTitle2(Component8, props) {
  return (
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    React85.createElement(Component8, props)
  );
};
var styles15 = {
  root: "_19itidpf _12ji1r31 _1qu2glyw _12y3idpf _4bfu1r31 _1hmsglyw _ajmmnqa1 _kqswh2mm _1e0c1txw _vchhusvi _1bsb1osq _1tke1ylp _19pkze3t _2hwxze3t _otyrze3t _18u0ze3t _4cvr1h6o _uiztglyw _80omtlke _ymio1r31 _ypr0glyw _zcxs1o36 _nt75194a _mizu194a _1bg411pw _1ah311pw _49pcnqa1 _ra3xnqa1 _1hvw1bk5 _128m1bk5 _9oik1r31 _1bnxglyw _jf4cnqa1 _1cvmnqa1 _4davt94y",
  beforeAfterElementOld: "_1e0c1txw _4cvr1h6o _1bah1h6o _1o9zidpf",
  beforeAfterElement: "_1e0c1txw _1ul91tcg _1tke1tcg _4cvr1h6o _1bah1h6o _1o9zidpf",
  content: "_12ji1r31 _1qu2glyw _12y31o36 _1reo15vq _18m915vq _1e0c1txw _2lx21bp4 _1bah1h6o _16jlkb7n _y3gn1e5h",
  truncate: "_1reo15vq _18m915vq _1e0c1ule _1bto1l2s _o5721q9c",
  title: "_11c82smr",
  wordBreak: "_1nmz1hna",
  description: "_11c8dcr7 _syaz1wmz",
  disabledDescription: "_syaz2oi6",
  unselected: "_bfhkqtfy _syaz1r31 _10531r31 _irr31dko _30l31r31 _1di61dko _9h8h1r31",
  disabled: "_80om13gf _bfhkqtfy _syaz2oi6 _irr3qtfy _30l32oi6 _1di6qtfy _9h8h2oi6",
  selectedBorder: "_1mp4yh40 _1cs8stnw _1rus67is _1kt9b3bt _1fkrze3t _iajmze3t _z5wtze3t",
  selectedNotch: "_rfx315o9 _1mp41y44 _1cs8stnw _1rus67is _1kt9b3bt _1fkrutpp _iajmutpp _z5wtze3t",
  selected: "_bfhk1q4k _syazhu5v _1053hu5v _irr32seo _30l316ov _1di6guph _9h8hhu5v",
  selectedOld: "_30l3hu5v"
};
var spacingMapStyles = {
  cozy: "_1rjcu2gc _18zrpxbi",
  compact: "_1rjc1b66 _18zrutpp _1tkezwfg"
};
var gapMap = {
  compact: "space.100",
  cozy: "space.150"
};
var MenuItemPrimitive = function MenuItemPrimitive2(_ref) {
  var children = _ref.children, title = _ref.title, description = _ref.description, iconAfter = _ref.iconAfter, iconBefore = _ref.iconBefore, UNSAFE_externalClassName = _ref.className, _ref$shouldTitleWrap = _ref.shouldTitleWrap, shouldTitleWrap = _ref$shouldTitleWrap === void 0 ? false : _ref$shouldTitleWrap, _ref$shouldDescriptio = _ref.shouldDescriptionWrap, shouldDescriptionWrap = _ref$shouldDescriptio === void 0 ? false : _ref$shouldDescriptio, _ref$isDisabled = _ref.isDisabled, isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled, _ref$isSelected = _ref.isSelected, isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected, _ref$isTitleHeading = _ref.isTitleHeading, isTitleHeading = _ref$isTitleHeading === void 0 ? false : _ref$isTitleHeading, testId = _ref.testId;
  var spacing3 = (0, import_react128.useContext)(SpacingContext);
  var selectionStyle = (0, import_react128.useContext)(SELECTION_STYLE_CONTEXT_DO_NOT_USE);
  var UNSAFE_className = UNSAFE_externalClassName;
  return function() {
    return children({
      className: ax([ax([styles15.root, spacingMapStyles[spacing3], !isDisabled && !isSelected && styles15.unselected, !isDisabled && isSelected && styles15.selected, !fg("platform_fix_a11y_selected_and_hovered_state_color") && !isDisabled && isSelected && styles15.selectedOld, !isDisabled && isSelected && selectionStyle === "border" && styles15.selectedBorder, !isDisabled && isSelected && selectionStyle === "notch" && styles15.selectedNotch, isDisabled && styles15.disabled]), UNSAFE_className]),
      children: React85.createElement(inline_default, {
        as: "span",
        spread: "space-between",
        alignBlock: "center",
        space: gapMap[spacing3],
        grow: "fill",
        testId: testId && "".concat(testId, "--container")
      }, iconBefore && React85.createElement("span", {
        "data-item-elem-before": true,
        "data-testid": testId && "".concat(testId, "--icon-before"),
        className: ax([fg("platform_ads_component_no_icon_spacing_support") && styles15.beforeAfterElement, !fg("platform_ads_component_no_icon_spacing_support") && styles15.beforeAfterElementOld])
      }, iconBefore), title && React85.createElement("div", {
        className: ax([styles15.content])
      }, renderTitle(isTitleHeading ? "h2" : "span", {
        children: title,
        className: ax([styles15.title, shouldTitleWrap ? styles15.wordBreak : styles15.truncate]),
        "data-item-title": true
      }), description && React85.createElement("span", {
        "data-item-description": true,
        className: ax([styles15.description, isDisabled && styles15.disabledDescription, shouldDescriptionWrap && styles15.wordBreak, !shouldDescriptionWrap && styles15.truncate])
      }, description)), iconAfter && React85.createElement("span", {
        "data-item-elem-after": true,
        "data-testid": testId && "".concat(testId, "--icon-after"),
        className: ax([fg("platform_ads_component_no_icon_spacing_support") && styles15.beforeAfterElement, !fg("platform_ads_component_no_icon_spacing_support") && styles15.beforeAfterElementOld])
      }, iconAfter))
    });
  }();
};
var menu_item_primitive_default = MenuItemPrimitive;

// node_modules/@atlaskit/menu/dist/esm/menu-item/button-item.js
var _excluded18 = ["children", "description", "iconAfter", "iconBefore", "isDisabled", "isSelected", "onClick", "testId", "onMouseDown", "shouldTitleWrap", "shouldDescriptionWrap", "className", "interactionName"];
var ButtonItem = (0, import_react129.memo)((0, import_react129.forwardRef)(
  // Type needed on props to extract types with extract react types.
  function(props, ref) {
    var children = props.children, description = props.description, iconAfter = props.iconAfter, iconBefore = props.iconBefore, _props$isDisabled = props.isDisabled, isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled, _props$isSelected = props.isSelected, isSelected = _props$isSelected === void 0 ? false : _props$isSelected, onClick = props.onClick, testId = props.testId, onMouseDown = props.onMouseDown, shouldTitleWrap = props.shouldTitleWrap, shouldDescriptionWrap = props.shouldDescriptionWrap, UNSAFE_className = props.className, interactionName = props.interactionName, rest = _objectWithoutProperties(props, _excluded18);
    var onMouseDownHandler = onMouseDown;
    var interactionContext = (0, import_react129.useContext)(esm_default2);
    var handleClick = (0, import_react129.useCallback)(function(e) {
      interactionContext === null || interactionContext === void 0 || interactionContext.tracePress(interactionName, e.timeStamp);
      onClick === null || onClick === void 0 || onClick(e);
    }, [onClick, interactionContext, interactionName]);
    if (!children) {
      return null;
    }
    return React86.createElement(
      menu_item_primitive_default,
      _extends({
        className: UNSAFE_className
      }, rest, {
        iconBefore,
        iconAfter,
        isDisabled,
        isSelected,
        isTitleHeading: false,
        description,
        title: children,
        shouldTitleWrap,
        shouldDescriptionWrap,
        testId: testId && "".concat(testId, "--primitive")
      }),
      function(_ref) {
        var children2 = _ref.children, className = _ref.className;
        return React86.createElement("button", _extends({
          "data-testid": testId
        }, rest, {
          // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
          className,
          ref,
          disabled: isDisabled,
          onClick: fg("platform_button_item-add-ufo-metrics") ? handleClick : onClick,
          onMouseDown: onMouseDownHandler,
          type: "button"
        }), children2);
      }
    );
  }
));
var button_item_default = ButtonItem;

// node_modules/@atlaskit/menu/dist/esm/menu-item/link-item.js
init_extends();
init_objectWithoutProperties();
var React90 = __toESM(require_react());
init_runtime2();
var import_react135 = __toESM(require_react());

// node_modules/@atlaskit/app-provider/dist/esm/app-provider.js
var import_react133 = __toESM(require_react());

// node_modules/@atlaskit/app-provider/dist/esm/router-link-provider/index.js
var import_react130 = __toESM(require_react());
var RouterLinkProviderContext2 = (0, import_react130.createContext)({});

// node_modules/@atlaskit/app-provider/dist/esm/theme-provider.js
init_asyncToGenerator();
init_defineProperty();
init_slicedToArray();
var import_regenerator8 = __toESM(require_regenerator());
var import_react132 = __toESM(require_react());
var import_bind_event_listener15 = __toESM(require_dist());
init_esm();

// node_modules/@atlaskit/tokens/dist/esm/get-token.js
init_esm();

// node_modules/@atlaskit/tokens/dist/esm/get-token-value.js
init_esm();

// node_modules/@atlaskit/tokens/dist/esm/set-global-theme.js
init_asyncToGenerator();
var import_regenerator6 = __toESM(require_regenerator());
init_esm();

// node_modules/@atlaskit/tokens/dist/esm/utils/configure-page.js
init_slicedToArray();
init_esm();

// node_modules/@atlaskit/tokens/dist/esm/get-theme-html-attrs.js
init_defineProperty();
init_esm();

// node_modules/@atlaskit/tokens/dist/esm/theme-state-transformer.js
init_typeof();
init_slicedToArray();
var themeKinds2 = ["light", "dark", "spacing", "typography", "shape"];
var customThemeOptions2 = "UNSAFE_themeOptions";
var isThemeKind3 = function isThemeKind4(themeKind) {
  return themeKinds2.find(function(kind) {
    return kind === themeKind;
  }) !== void 0;
};
var isThemeIds3 = function isThemeIds4(themeId) {
  return themeIds2.find(function(id) {
    return id === themeId;
  }) !== void 0;
};
var isColorMode3 = function isColorMode4(modeId) {
  return ["light", "dark", "auto"].includes(modeId);
};
var themeStringToObject3 = function themeStringToObject4(themeState) {
  return themeState.split(" ").map(function(theme) {
    return theme.split(/:([^]*)/);
  }).reduce(function(themeObject, _ref) {
    var _ref2 = _slicedToArray(_ref, 2), kind = _ref2[0], id = _ref2[1];
    if (kind === "colorMode" && isColorMode3(id)) {
      themeObject[kind] = id;
    }
    if (isThemeKind3(kind) && isThemeIds3(id)) {
      themeObject[kind] = id;
    }
    if (kind === customThemeOptions2) {
      try {
        themeObject[customThemeOptions2] = JSON.parse(id);
      } catch (e) {
        new Error("Invalid custom theme string");
      }
    }
    return themeObject;
  }, {});
};
var themeObjectToString3 = function themeObjectToString4(themeState) {
  return Object.entries(themeState).reduce(function(themeString, _ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), kind = _ref4[0], id = _ref4[1];
    if (
      // colorMode theme state
      kind === "colorMode" && typeof id === "string" && isColorMode3(id) || // custom theme state
      kind === customThemeOptions2 && _typeof(id) === "object" || // other theme states
      isThemeKind3(kind) && typeof id === "string" && isThemeIds3(id)
    ) {
      return themeString + "".concat(themeString ? " " : "") + "".concat(kind, ":").concat(_typeof(id) === "object" ? JSON.stringify(id) : id);
    }
    return themeString;
  }, "");
};

// node_modules/@atlaskit/tokens/dist/esm/get-theme-html-attrs.js
function ownKeys15(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread15(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys15(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys15(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var defaultColorMode2 = "light";
var defaultContrastMode2 = "no-preference";
var getThemeHtmlAttrs3 = function getThemeHtmlAttrs4() {
  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$colorMode = _ref.colorMode, colorMode = _ref$colorMode === void 0 ? themeStateDefaults2["colorMode"] : _ref$colorMode, _ref$dark = _ref.dark, dark3 = _ref$dark === void 0 ? themeStateDefaults2["dark"] : _ref$dark, _ref$light = _ref.light, light3 = _ref$light === void 0 ? themeStateDefaults2["light"] : _ref$light, _ref$contrastMode = _ref.contrastMode, contrastMode = _ref$contrastMode === void 0 ? themeStateDefaults2["contrastMode"] : _ref$contrastMode, _ref$shape = _ref.shape, shape3 = _ref$shape === void 0 ? themeStateDefaults2["shape"] : _ref$shape, _ref$spacing = _ref.spacing, spacing3 = _ref$spacing === void 0 ? themeStateDefaults2["spacing"] : _ref$spacing, _ref$typography = _ref.typography, typography2 = _ref$typography === void 0 ? themeStateDefaults2["typography"]() : _ref$typography, _ref$UNSAFE_themeOpti = _ref.UNSAFE_themeOptions, UNSAFE_themeOptions = _ref$UNSAFE_themeOpti === void 0 ? themeStateDefaults2["UNSAFE_themeOptions"] : _ref$UNSAFE_themeOpti;
  var themeAttribute = themeObjectToString3({
    dark: dark3,
    light: light3,
    shape: shape3,
    spacing: spacing3,
    typography: typography2
  });
  var result = _defineProperty(_defineProperty({}, THEME_DATA_ATTRIBUTE2, themeAttribute), COLOR_MODE_ATTRIBUTE2, colorMode === "auto" ? defaultColorMode2 : colorMode);
  if (fg("platform_increased-contrast-themes")) {
    result = _objectSpread15(_objectSpread15({}, result), {}, _defineProperty({}, CONTRAST_MODE_ATTRIBUTE2, contrastMode === "auto" ? defaultContrastMode2 : contrastMode));
  }
  if (UNSAFE_themeOptions && isValidBrandHex2(UNSAFE_themeOptions.brandColor)) {
    var optionString = JSON.stringify(UNSAFE_themeOptions);
    var uniqueId = hash2(optionString);
    result[CUSTOM_THEME_ATTRIBUTE2] = uniqueId;
  }
  return result;
};
var get_theme_html_attrs_default2 = getThemeHtmlAttrs3;

// node_modules/@atlaskit/tokens/dist/esm/utils/color-mode-listeners.js
init_classCallCheck();
init_createClass();
init_defineProperty();
var import_bind_event_listener13 = __toESM(require_dist());

// node_modules/@atlaskit/tokens/dist/esm/utils/theme-loading.js
init_asyncToGenerator();
var import_regenerator5 = __toESM(require_regenerator());
init_esm();

// node_modules/@atlaskit/tokens/dist/esm/artifacts/theme-import-map.js
var themeImportsMap2 = {
  "light": function light2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-light" */
      "./atlassian-light-XCYIARQZ.js"
    );
  },
  "light-future": function lightFuture2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-light-future" */
      "./atlassian-light-future-27UHIN75.js"
    );
  },
  "light-increased-contrast": function lightIncreasedContrast2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-light-increased-contrast" */
      "./atlassian-light-increased-contrast-7K2K5TJ4.js"
    );
  },
  "dark": function dark2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-dark" */
      "./atlassian-dark-ZH5PKLYK.js"
    );
  },
  "dark-future": function darkFuture2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-dark-future" */
      "./atlassian-dark-future-THYUGSJ3.js"
    );
  },
  "dark-increased-contrast": function darkIncreasedContrast2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-dark-increased-contrast" */
      "./atlassian-dark-increased-contrast-VKHXGWII.js"
    );
  },
  "legacy-light": function legacyLight2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-legacy-light" */
      "./atlassian-legacy-light-42VHXSE6.js"
    );
  },
  "legacy-dark": function legacyDark2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-legacy-dark" */
      "./atlassian-legacy-dark-5D6TU6FQ.js"
    );
  },
  "spacing": function spacing2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-spacing" */
      "./atlassian-spacing-5XJYXVF2.js"
    );
  },
  "typography-adg3": function typographyAdg32() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-typography-adg3" */
      "./atlassian-typography-adg3-CUXOWXHG.js"
    );
  },
  "shape": function shape2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-shape" */
      "./atlassian-shape-7WQQMOWT.js"
    );
  },
  "typography-modernized": function typographyModernized2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-typography-modernized" */
      "./atlassian-typography-modernized-Y2MAVWEY.js"
    );
  },
  "typography-refreshed": function typographyRefreshed2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-typography-refreshed" */
      "./atlassian-typography-refreshed-7EPH5NYZ.js"
    );
  },
  "light-brand-refresh": function lightBrandRefresh2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-light-brand-refresh" */
      "./atlassian-light-brand-refresh-ZLTFWJH7.js"
    );
  },
  "dark-brand-refresh": function darkBrandRefresh2() {
    return import(
      /* webpackChunkName: "@atlaskit-internal_atlassian-dark-brand-refresh" */
      "./atlassian-dark-brand-refresh-N33KZ3ES.js"
    );
  }
};
var theme_import_map_default2 = themeImportsMap2;

// node_modules/@atlaskit/tokens/dist/esm/utils/theme-loading.js
var loadAndAppendThemeCss2 = function() {
  var _ref = _asyncToGenerator(import_regenerator5.default.mark(function _callee(themeId) {
    var themeCss, style;
    return import_regenerator5.default.wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (!document.head.querySelector("style[".concat(THEME_DATA_ATTRIBUTE2, '="').concat(themeId, '"]:not([').concat(CUSTOM_THEME_ATTRIBUTE2, "])"))) {
            _context.next = 2;
            break;
          }
          return _context.abrupt("return");
        case 2:
          if (themeId) {
            _context.next = 4;
            break;
          }
          return _context.abrupt("return");
        case 4:
          _context.next = 6;
          return loadThemeCss2(themeId);
        case 6:
          themeCss = _context.sent;
          style = document.createElement("style");
          style.textContent = themeCss;
          style.dataset.theme = themeId;
          document.head.appendChild(style);
        case 11:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function loadAndAppendThemeCss3(_x) {
    return _ref.apply(this, arguments);
  };
}();
var loadThemeCss2 = function() {
  var _ref2 = _asyncToGenerator(import_regenerator5.default.mark(function _callee2(themeId) {
    var _yield$themeImportMap, themeCss;
    return import_regenerator5.default.wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          if ((themeId === "light" || themeId === "dark") && fg("platform-component-visual-refresh")) {
            themeId += "-brand-refresh";
          }
          _context2.next = 3;
          return theme_import_map_default2[themeId]();
        case 3:
          _yield$themeImportMap = _context2.sent;
          themeCss = _yield$themeImportMap.default;
          return _context2.abrupt("return", themeCss);
        case 6:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function loadThemeCss3(_x2) {
    return _ref2.apply(this, arguments);
  };
}();
var darkModeMediaQuery2 = "(prefers-color-scheme: dark)";
var moreContrastMediaQuery2 = "(prefers-contrast: more)";

// node_modules/@atlaskit/tokens/dist/esm/utils/color-mode-listeners.js
var isMatchMediaAvailable6 = typeof window !== "undefined" && "matchMedia" in window;
function checkNativeListener3(e) {
  var element = document.documentElement;
  element.setAttribute(COLOR_MODE_ATTRIBUTE2, e.matches ? "dark" : "light");
}
var darkModeMql2 = isMatchMediaAvailable6 && window.matchMedia(darkModeMediaQuery2);
var ColorModeObserver2 = function() {
  function ColorModeObserver3() {
    _classCallCheck(this, ColorModeObserver3);
    _defineProperty(this, "unbindThemeChangeListener", null);
  }
  return _createClass(ColorModeObserver3, [{
    key: "getColorMode",
    value: function getColorMode() {
      if (!darkModeMql2) {
        return "light";
      }
      return darkModeMql2 !== null && darkModeMql2 !== void 0 && darkModeMql2.matches ? "dark" : "light";
    }
  }, {
    key: "bind",
    value: function bind9() {
      if (darkModeMql2 && this.unbindThemeChangeListener === null) {
        this.unbindThemeChangeListener = (0, import_bind_event_listener13.bind)(darkModeMql2, {
          type: "change",
          listener: checkNativeListener3
        });
      }
    }
  }, {
    key: "unbind",
    value: function unbind() {
      if (this.unbindThemeChangeListener) {
        this.unbindThemeChangeListener();
        this.unbindThemeChangeListener = null;
      }
    }
  }]);
}();
var SingletonColorModeObserver2 = new ColorModeObserver2();
var color_mode_listeners_default2 = SingletonColorModeObserver2;

// node_modules/@atlaskit/tokens/dist/esm/utils/contrast-mode-listeners.js
init_classCallCheck();
init_createClass();
init_defineProperty();
var import_bind_event_listener14 = __toESM(require_dist());
var isMatchMediaAvailable7 = typeof window !== "undefined" && "matchMedia" in window;
function checkNativeListener4(e) {
  var element = document.documentElement;
  element.setAttribute(CONTRAST_MODE_ATTRIBUTE2, e.matches ? "more" : "no-preference");
}
var contrastModeMql2 = isMatchMediaAvailable7 && window.matchMedia(moreContrastMediaQuery2);
var ContrastModeObserver2 = function() {
  function ContrastModeObserver3() {
    _classCallCheck(this, ContrastModeObserver3);
    _defineProperty(this, "unbindContrastChangeListener", null);
  }
  return _createClass(ContrastModeObserver3, [{
    key: "getContrastMode",
    value: function getContrastMode() {
      if (!contrastModeMql2) {
        return "no-preference";
      }
      return contrastModeMql2 !== null && contrastModeMql2 !== void 0 && contrastModeMql2.matches ? "more" : "no-preference";
    }
  }, {
    key: "bind",
    value: function bind9() {
      if (contrastModeMql2 && this.unbindContrastChangeListener === null) {
        this.unbindContrastChangeListener = (0, import_bind_event_listener14.bind)(contrastModeMql2, {
          type: "change",
          listener: checkNativeListener4
        });
      }
    }
  }, {
    key: "unbind",
    value: function unbind() {
      if (this.unbindContrastChangeListener) {
        this.unbindContrastChangeListener();
        this.unbindContrastChangeListener = null;
      }
    }
  }]);
}();
var SingletonContrastModeObserver2 = new ContrastModeObserver2();
var contrast_mode_listeners_default2 = SingletonContrastModeObserver2;

// node_modules/@atlaskit/tokens/dist/esm/utils/configure-page.js
function configurePage2(themeState) {
  if (themeState.colorMode === "auto") {
    themeState.colorMode = color_mode_listeners_default2.getColorMode();
    color_mode_listeners_default2.bind();
  } else {
    color_mode_listeners_default2.unbind();
  }
  if (fg("platform_increased-contrast-themes")) {
    if (themeState.contrastMode === "auto") {
      themeState.contrastMode = contrast_mode_listeners_default2.getContrastMode();
      contrast_mode_listeners_default2.bind();
    } else {
      contrast_mode_listeners_default2.unbind();
    }
  }
  var themeAttributes = get_theme_html_attrs_default2(themeState);
  Object.entries(themeAttributes).forEach(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];
    document.documentElement.setAttribute(key, value);
  });
  return function() {
    color_mode_listeners_default2.unbind();
    if (fg("platform_increased-contrast-themes")) {
      contrast_mode_listeners_default2.unbind();
    }
  };
}

// node_modules/@atlaskit/tokens/dist/esm/utils/get-theme-preferences.js
init_esm();

// node_modules/@atlaskit/tokens/dist/esm/utils/get-increased-contrast-theme.js
init_slicedToArray();
function getIncreasedContrastTheme2(themeId) {
  var _Object$entries$find;
  return (_Object$entries$find = Object.entries(theme_config_default2).find(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), increasesContrastFor = _ref2[1].increasesContrastFor;
    return increasesContrastFor === themeId;
  })) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[1].id;
}

// node_modules/@atlaskit/tokens/dist/esm/utils/get-theme-preferences.js
var getThemePreferences3 = function getThemePreferences4(themeState) {
  var colorMode = themeState.colorMode, contrastMode = themeState.contrastMode, dark3 = themeState.dark, light3 = themeState.light, shape3 = themeState.shape, spacing3 = themeState.spacing, typography2 = themeState.typography;
  var autoColorModeThemes = [light3, dark3];
  var themePreferences = [];
  if (colorMode === "auto") {
    if (contrastMode !== "no-preference" && fg("platform_increased-contrast-themes")) {
      autoColorModeThemes.forEach(function(normalTheme) {
        var increasedContrastTheme2 = getIncreasedContrastTheme2(normalTheme);
        if (increasedContrastTheme2) {
          autoColorModeThemes.push(increasedContrastTheme2);
        }
      });
    }
    themePreferences.push.apply(themePreferences, autoColorModeThemes);
  } else {
    themePreferences.push(themeState[colorMode]);
    if (contrastMode !== "no-preference" && fg("platform_increased-contrast-themes")) {
      var increasedContrastTheme = getIncreasedContrastTheme2(themeState[colorMode]);
      if (increasedContrastTheme) {
        themePreferences.push(increasedContrastTheme);
      }
    }
  }
  [shape3, spacing3, typography2].forEach(function(themeId) {
    if (themeId) {
      themePreferences.push(themeId);
    }
  });
  return _toConsumableArray(new Set(themePreferences));
};
var getThemeOverridePreferences3 = function getThemeOverridePreferences4(_themeState) {
  var themeOverridePreferences = [];
  return _toConsumableArray(new Set(themeOverridePreferences));
};

// node_modules/@atlaskit/tokens/dist/esm/set-global-theme.js
function _createForOfIteratorHelper2(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray2(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u) throw o;
    }
  } };
}
function _unsupportedIterableToArray2(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray2(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray2(r, a) : void 0;
  }
}
function _arrayLikeToArray2(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
var setGlobalTheme2 = function() {
  var _ref = _asyncToGenerator(import_regenerator6.default.mark(function _callee3() {
    var _ref2, _ref2$colorMode, colorMode, _ref2$contrastMode, contrastMode, _ref2$dark, dark3, _ref2$light, light3, _ref2$shape, shape3, _ref2$spacing, spacing3, _ref2$typography, typography2, _ref2$UNSAFE_themeOpt, UNSAFE_themeOptions, themeLoader, themeState, themePreferences, loadingStrategy, loadingTasks, mode, attrOfMissingCustomStyles, themeOverridePreferences, _iterator, _step, themeId, autoUnbind, _args3 = arguments;
    return import_regenerator6.default.wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _ref2 = _args3.length > 0 && _args3[0] !== void 0 ? _args3[0] : {}, _ref2$colorMode = _ref2.colorMode, colorMode = _ref2$colorMode === void 0 ? themeStateDefaults2["colorMode"] : _ref2$colorMode, _ref2$contrastMode = _ref2.contrastMode, contrastMode = _ref2$contrastMode === void 0 ? themeStateDefaults2["contrastMode"] : _ref2$contrastMode, _ref2$dark = _ref2.dark, dark3 = _ref2$dark === void 0 ? themeStateDefaults2["dark"] : _ref2$dark, _ref2$light = _ref2.light, light3 = _ref2$light === void 0 ? themeStateDefaults2["light"] : _ref2$light, _ref2$shape = _ref2.shape, shape3 = _ref2$shape === void 0 ? themeStateDefaults2["shape"] : _ref2$shape, _ref2$spacing = _ref2.spacing, spacing3 = _ref2$spacing === void 0 ? themeStateDefaults2["spacing"] : _ref2$spacing, _ref2$typography = _ref2.typography, typography2 = _ref2$typography === void 0 ? themeStateDefaults2["typography"]() : _ref2$typography, _ref2$UNSAFE_themeOpt = _ref2.UNSAFE_themeOptions, UNSAFE_themeOptions = _ref2$UNSAFE_themeOpt === void 0 ? themeStateDefaults2["UNSAFE_themeOptions"] : _ref2$UNSAFE_themeOpt;
          themeLoader = _args3.length > 1 ? _args3[1] : void 0;
          if (!fg("platform_increased-contrast-themes")) {
            if (light3 === "light-increased-contrast") {
              light3 = "light";
            }
            if (dark3 === "dark-increased-contrast") {
              dark3 = "dark";
            }
          }
          themeState = {
            colorMode,
            contrastMode,
            dark: dark3,
            light: light3,
            shape: shape3,
            spacing: spacing3,
            typography: typography2,
            UNSAFE_themeOptions: themeLoader ? void 0 : UNSAFE_themeOptions
          };
          themePreferences = getThemePreferences3(themeState);
          loadingStrategy = themeLoader ? themeLoader : loadAndAppendThemeCss2;
          loadingTasks = themePreferences.map(function() {
            var _ref3 = _asyncToGenerator(import_regenerator6.default.mark(function _callee(themeId2) {
              return import_regenerator6.default.wrap(function _callee$(_context) {
                while (1) switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return loadingStrategy(themeId2);
                  case 2:
                    return _context.abrupt("return", _context.sent);
                  case 3:
                  case "end":
                    return _context.stop();
                }
              }, _callee);
            }));
            return function(_x) {
              return _ref3.apply(this, arguments);
            };
          }());
          if (!themeLoader && UNSAFE_themeOptions && isValidBrandHex2(UNSAFE_themeOptions === null || UNSAFE_themeOptions === void 0 ? void 0 : UNSAFE_themeOptions.brandColor)) {
            mode = colorMode || themeStateDefaults2["colorMode"];
            attrOfMissingCustomStyles = findMissingCustomStyleElements2(UNSAFE_themeOptions, mode);
            if (attrOfMissingCustomStyles.length > 0) {
              loadingTasks.push(_asyncToGenerator(import_regenerator6.default.mark(function _callee2() {
                var _yield$import, loadAndAppendCustomThemeCss;
                return import_regenerator6.default.wrap(function _callee2$(_context2) {
                  while (1) switch (_context2.prev = _context2.next) {
                    case 0:
                      _context2.next = 2;
                      return import(
                        /* webpackChunkName: "@atlaskit-internal_atlassian-custom-theme" */
                        "./custom-theme-CCUSANCP.js"
                      );
                    case 2:
                      _yield$import = _context2.sent;
                      loadAndAppendCustomThemeCss = _yield$import.loadAndAppendCustomThemeCss;
                      loadAndAppendCustomThemeCss({
                        colorMode: attrOfMissingCustomStyles.length === 2 ? "auto" : (
                          // only load the missing custom theme styles
                          attrOfMissingCustomStyles[0]
                        ),
                        UNSAFE_themeOptions
                      });
                    case 5:
                    case "end":
                      return _context2.stop();
                  }
                }, _callee2);
              }))());
            }
          }
          _context3.next = 10;
          return Promise.all(loadingTasks);
        case 10:
          themeOverridePreferences = getThemeOverridePreferences3(themeState);
          _iterator = _createForOfIteratorHelper2(themeOverridePreferences);
          _context3.prev = 12;
          _iterator.s();
        case 14:
          if ((_step = _iterator.n()).done) {
            _context3.next = 20;
            break;
          }
          themeId = _step.value;
          _context3.next = 18;
          return loadingStrategy(themeId);
        case 18:
          _context3.next = 14;
          break;
        case 20:
          _context3.next = 25;
          break;
        case 22:
          _context3.prev = 22;
          _context3.t0 = _context3["catch"](12);
          _iterator.e(_context3.t0);
        case 25:
          _context3.prev = 25;
          _iterator.f();
          return _context3.finish(25);
        case 28:
          autoUnbind = configurePage2(themeState);
          return _context3.abrupt("return", autoUnbind);
        case 30:
        case "end":
          return _context3.stop();
      }
    }, _callee3, null, [[12, 22, 25, 28]]);
  }));
  return function setGlobalTheme3() {
    return _ref.apply(this, arguments);
  };
}();

// node_modules/@atlaskit/tokens/dist/esm/get-theme-styles.js
init_asyncToGenerator();
var import_regenerator7 = __toESM(require_regenerator());
init_esm();
var getThemeStyles2 = function() {
  var _ref = _asyncToGenerator(import_regenerator7.default.mark(function _callee3(preferences) {
    var themePreferences, themeOverridePreferences, themeState, results;
    return import_regenerator7.default.wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          themeOverridePreferences = [];
          if (preferences === "all") {
            themePreferences = themeIdsWithOverrides2;
            if (!fg("platform_increased-contrast-themes")) {
              themePreferences = themePreferences.filter(function(n) {
                return n !== "light-increased-contrast" && n !== "dark-increased-contrast";
              });
            }
            themePreferences = themePreferences.filter(function(n) {
              return n !== "light-brand-refresh" && n !== "dark-brand-refresh";
            });
          } else {
            themeState = {
              colorMode: (preferences === null || preferences === void 0 ? void 0 : preferences.colorMode) || themeStateDefaults2["colorMode"],
              contrastMode: (preferences === null || preferences === void 0 ? void 0 : preferences.contrastMode) || themeStateDefaults2["contrastMode"],
              dark: (preferences === null || preferences === void 0 ? void 0 : preferences.dark) || themeStateDefaults2["dark"],
              light: (preferences === null || preferences === void 0 ? void 0 : preferences.light) || themeStateDefaults2["light"],
              shape: (preferences === null || preferences === void 0 ? void 0 : preferences.shape) || themeStateDefaults2["shape"],
              spacing: (preferences === null || preferences === void 0 ? void 0 : preferences.spacing) || themeStateDefaults2["spacing"],
              typography: (preferences === null || preferences === void 0 ? void 0 : preferences.typography) || themeStateDefaults2["typography"]()
            };
            themePreferences = getThemePreferences3(themeState);
            themeOverridePreferences = getThemeOverridePreferences3(themeState);
          }
          _context3.next = 4;
          return Promise.all([].concat(_toConsumableArray([].concat(_toConsumableArray(themePreferences), _toConsumableArray(themeOverridePreferences)).map(function() {
            var _ref2 = _asyncToGenerator(import_regenerator7.default.mark(function _callee(themeId) {
              var css4;
              return import_regenerator7.default.wrap(function _callee$(_context) {
                while (1) switch (_context.prev = _context.next) {
                  case 0:
                    _context.prev = 0;
                    _context.next = 3;
                    return loadThemeCss2(themeId);
                  case 3:
                    css4 = _context.sent;
                    return _context.abrupt("return", {
                      id: themeId,
                      attrs: {
                        "data-theme": themeId
                      },
                      css: css4
                    });
                  case 7:
                    _context.prev = 7;
                    _context.t0 = _context["catch"](0);
                    return _context.abrupt("return", void 0);
                  case 10:
                  case "end":
                    return _context.stop();
                }
              }, _callee, null, [[0, 7]]);
            }));
            return function(_x2) {
              return _ref2.apply(this, arguments);
            };
          }())), [
            // Add custom themes if they're present
            _asyncToGenerator(import_regenerator7.default.mark(function _callee2() {
              var _preferences$UNSAFE_t;
              var _yield$import, getCustomThemeStyles, customThemeStyles;
              return import_regenerator7.default.wrap(function _callee2$(_context2) {
                while (1) switch (_context2.prev = _context2.next) {
                  case 0:
                    if (!(preferences !== "all" && preferences !== null && preferences !== void 0 && preferences.UNSAFE_themeOptions && isValidBrandHex2(preferences === null || preferences === void 0 || (_preferences$UNSAFE_t = preferences.UNSAFE_themeOptions) === null || _preferences$UNSAFE_t === void 0 ? void 0 : _preferences$UNSAFE_t.brandColor))) {
                      _context2.next = 15;
                      break;
                    }
                    _context2.prev = 1;
                    _context2.next = 4;
                    return import(
                      /* webpackChunkName: "@atlaskit-internal_atlassian-custom-theme" */
                      "./custom-theme-CCUSANCP.js"
                    );
                  case 4:
                    _yield$import = _context2.sent;
                    getCustomThemeStyles = _yield$import.getCustomThemeStyles;
                    _context2.next = 8;
                    return getCustomThemeStyles({
                      colorMode: (preferences === null || preferences === void 0 ? void 0 : preferences.colorMode) || themeStateDefaults2["colorMode"],
                      UNSAFE_themeOptions: preferences === null || preferences === void 0 ? void 0 : preferences.UNSAFE_themeOptions
                    });
                  case 8:
                    customThemeStyles = _context2.sent;
                    return _context2.abrupt("return", customThemeStyles);
                  case 12:
                    _context2.prev = 12;
                    _context2.t0 = _context2["catch"](1);
                    return _context2.abrupt("return", void 0);
                  case 15:
                  case "end":
                    return _context2.stop();
                }
              }, _callee2, null, [[1, 12]]);
            }))()
          ]));
        case 4:
          results = _context3.sent;
          return _context3.abrupt("return", results.flat().filter(function(theme) {
            return theme !== void 0;
          }));
        case 6:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function getThemeStyles3(_x) {
    return _ref.apply(this, arguments);
  };
}();

// node_modules/@atlaskit/tokens/dist/esm/get-ssr-auto-script.js
init_esm();

// node_modules/@atlaskit/tokens/dist/esm/use-theme-observer.js
init_slicedToArray();
var import_react131 = __toESM(require_react());

// node_modules/@atlaskit/tokens/dist/esm/get-global-theme.js
init_defineProperty();
function ownKeys16(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread16(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys16(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys16(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var isThemeColorMode3 = function isThemeColorMode4(colorMode) {
  return themeColorModes2.find(function(mode) {
    return mode === colorMode;
  }) !== void 0;
};
var getGlobalTheme3 = function getGlobalTheme4() {
  if (typeof document === "undefined") {
    return {};
  }
  var element = document.documentElement;
  var colorMode = element.getAttribute(COLOR_MODE_ATTRIBUTE2) || "";
  var theme = element.getAttribute(THEME_DATA_ATTRIBUTE2) || "";
  return _objectSpread16(_objectSpread16({}, themeStringToObject3(theme)), isThemeColorMode3(colorMode) && {
    colorMode
  });
};
var get_global_theme_default2 = getGlobalTheme3;

// node_modules/@atlaskit/tokens/dist/esm/theme-mutation-observer.js
init_classCallCheck();
init_createClass();
init_defineProperty();
var ThemeMutationObserver2 = function() {
  function ThemeMutationObserver3(callback) {
    _classCallCheck(this, ThemeMutationObserver3);
    _defineProperty(this, "legacyObserver", null);
    this.callback = callback;
    ThemeMutationObserver3.callbacks.add(callback);
  }
  return _createClass(ThemeMutationObserver3, [{
    key: "observe",
    value: function observe() {
      if (!ThemeMutationObserver3.observer) {
        ThemeMutationObserver3.observer = new MutationObserver(function() {
          var theme = get_global_theme_default2();
          ThemeMutationObserver3.callbacks.forEach(function(callback) {
            return callback(theme);
          });
        });
        ThemeMutationObserver3.observer.observe(document.documentElement, {
          attributeFilter: [THEME_DATA_ATTRIBUTE2, COLOR_MODE_ATTRIBUTE2]
        });
      }
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      if (this.callback) {
        ThemeMutationObserver3.callbacks.delete(this.callback);
      }
      if (ThemeMutationObserver3.callbacks.size === 0 && ThemeMutationObserver3.observer) {
        ThemeMutationObserver3.observer.disconnect();
        ThemeMutationObserver3.observer = null;
      }
    }
  }]);
}();
_defineProperty(ThemeMutationObserver2, "observer", null);
_defineProperty(ThemeMutationObserver2, "callbacks", /* @__PURE__ */ new Set());

// node_modules/@atlaskit/app-provider/dist/esm/theme-provider.js
var ColorModeContext2 = (0, import_react132.createContext)(void 0);
var SetColorModeContext2 = (0, import_react132.createContext)(void 0);
var ThemeContext2 = (0, import_react132.createContext)(void 0);
var SetThemeContext2 = (0, import_react132.createContext)(void 0);
var isMatchMediaAvailable8 = typeof window !== "undefined" && "matchMedia" in window;
var prefersDarkModeMql2 = isMatchMediaAvailable8 ? window.matchMedia("(prefers-color-scheme: dark)") : void 0;

// node_modules/@atlaskit/app-provider/dist/esm/app-provider.js
var InsideAppProviderContext2 = (0, import_react133.createContext)(false);

// node_modules/@atlaskit/app-provider/dist/esm/router-link-provider/hooks/use-router-link.js
var import_react134 = __toESM(require_react());
var useRouterLink3 = function useRouterLink4() {
  var _useContext = (0, import_react134.useContext)(RouterLinkProviderContext2), routerLinkComponent = _useContext.routerLinkComponent;
  if (routerLinkComponent) {
    return routerLinkComponent;
  }
};
var use_router_link_default2 = useRouterLink3;

// node_modules/@atlaskit/menu/dist/esm/menu-item/link-item.js
init_esm();
var _excluded19 = ["children", "href", "description", "iconAfter", "iconBefore", "isDisabled", "isSelected", "onClick", "testId", "onMouseDown", "shouldTitleWrap", "shouldDescriptionWrap", "className", "UNSAFE_shouldDisableRouterLink", "UNSAFE_isDraggable", "interactionName"];
var IS_EXTERNAL_LINK_REGEX2 = /^(?:(http|https):\/\/)/;
var IS_NON_HTTP_BASED2 = /^(((mailto|tel|sms):)|(#))/;
var preventEvent = function preventEvent2(e) {
  e.preventDefault();
};
var LinkItem = (0, import_react135.memo)((0, import_react135.forwardRef)(
  // Type needed on props to extract types with extract react types.
  function(props, ref) {
    var children = props.children, href = props.href, description = props.description, iconAfter = props.iconAfter, iconBefore = props.iconBefore, _props$isDisabled = props.isDisabled, isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled, _props$isSelected = props.isSelected, isSelected = _props$isSelected === void 0 ? false : _props$isSelected, onClick = props.onClick, testId = props.testId, onMouseDown = props.onMouseDown, shouldTitleWrap = props.shouldTitleWrap, shouldDescriptionWrap = props.shouldDescriptionWrap, UNSAFE_className = props.className, UNSAFE_shouldDisableRouterLink = props.UNSAFE_shouldDisableRouterLink, UNSAFE_isDraggable = props.UNSAFE_isDraggable, interactionName = props.interactionName, rest = _objectWithoutProperties(props, _excluded19);
    var onMouseDownHandler = onMouseDown;
    var RouterLink = use_router_link_default2();
    var interactionContext = (0, import_react135.useContext)(esm_default2);
    var handleClick = (0, import_react135.useCallback)(function(e) {
      interactionContext === null || interactionContext === void 0 || interactionContext.tracePress(interactionName, e.timeStamp);
      onClick === null || onClick === void 0 || onClick(e);
    }, [onClick, interactionContext, interactionName]);
    if (!children) {
      return null;
    }
    var isExternal = typeof href === "string" && IS_EXTERNAL_LINK_REGEX2.test(href);
    var isNonHttpBased = typeof href === "string" && IS_NON_HTTP_BASED2.test(href);
    var isEmptyHref = href == null || href === "";
    var isRouterLink = !UNSAFE_shouldDisableRouterLink && RouterLink && !isExternal && !isNonHttpBased && !isEmptyHref;
    var Component8 = isRouterLink ? RouterLink : "a";
    return React90.createElement(menu_item_primitive_default, _extends({}, rest, {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      className: UNSAFE_className,
      iconBefore,
      iconAfter,
      isSelected,
      isDisabled,
      isTitleHeading: false,
      description,
      shouldTitleWrap,
      shouldDescriptionWrap,
      title: children,
      testId: testId && "".concat(testId, "--primitive")
    }), function(_ref) {
      var children2 = _ref.children, className = _ref.className;
      return React90.createElement(Component8, _extends({
        "data-testid": testId,
        "data-is-router-link": testId ? isRouterLink ? "true" : "false" : void 0,
        "data-vc": "link-item"
      }, rest, {
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
        className,
        href: isDisabled ? void 0 : href
      }, UNSAFE_isDraggable ? {} : {
        draggable: false,
        onDragStart: preventEvent
      }, {
        onMouseDown: isDisabled ? preventEvent : onMouseDownHandler,
        onClick: isDisabled ? preventEvent : fg("platform_button_item-add-ufo-metrics") ? handleClick : onClick,
        "aria-current": isSelected ? "page" : void 0,
        "aria-disabled": isDisabled,
        ref
      }), children2);
    });
  }
));
var link_item_default = LinkItem;

// node_modules/@atlaskit/menu/dist/esm/menu-item/custom-item.js
init_extends();
init_objectWithoutProperties();
var React91 = __toESM(require_react());
init_runtime2();
var import_react136 = __toESM(require_react());
init_esm();
var _excluded20 = ["component", "isDisabled", "isSelected", "isTitleHeading", "onClick", "testId", "children", "description", "iconAfter", "iconBefore", "onMouseDown", "shouldTitleWrap", "shouldDescriptionWrap", "className", "UNSAFE_isDraggable", "interactionName"];
var preventEvent3 = function preventEvent4(e) {
  e.preventDefault();
};
var CustomItem = (0, import_react136.memo)(
  (0, import_react136.forwardRef)(function(_ref, ref) {
    var Component8 = _ref.component, _ref$isDisabled = _ref.isDisabled, isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled, _ref$isSelected = _ref.isSelected, isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected, _ref$isTitleHeading = _ref.isTitleHeading, isTitleHeading = _ref$isTitleHeading === void 0 ? false : _ref$isTitleHeading, onClick = _ref.onClick, testId = _ref.testId, children = _ref.children, description = _ref.description, iconAfter = _ref.iconAfter, iconBefore = _ref.iconBefore, onMouseDown = _ref.onMouseDown, shouldTitleWrap = _ref.shouldTitleWrap, shouldDescriptionWrap = _ref.shouldDescriptionWrap, UNSAFE_className = _ref.className, UNSAFE_isDraggable = _ref.UNSAFE_isDraggable, interactionName = _ref.interactionName, rest = _objectWithoutProperties(_ref, _excluded20);
    var onMouseDownHandler = onMouseDown;
    var interactionContext = (0, import_react136.useContext)(esm_default2);
    var handleClick = (0, import_react136.useCallback)(function(e) {
      interactionContext === null || interactionContext === void 0 || interactionContext.tracePress(interactionName, e.timeStamp);
      onClick === null || onClick === void 0 || onClick(e);
    }, [onClick, interactionContext, interactionName]);
    if (!Component8) {
      return null;
    }
    return React91.createElement(
      menu_item_primitive_default,
      _extends({
        className: UNSAFE_className
      }, rest, {
        description,
        iconAfter,
        title: children,
        iconBefore,
        isSelected,
        isDisabled,
        isTitleHeading,
        shouldTitleWrap,
        shouldDescriptionWrap,
        testId: testId && "".concat(testId, "--primitive")
      }),
      function(_ref2) {
        var children2 = _ref2.children, className = _ref2.className;
        return React91.createElement(Component8, _extends({
          "data-testid": testId
        }, rest, {
          // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
          className,
          ref
        }, UNSAFE_isDraggable ? {} : {
          draggable: false,
          onDragStart: preventEvent3
        }, {
          onMouseDown: isDisabled ? preventEvent3 : onMouseDownHandler,
          onClick: isDisabled ? preventEvent3 : fg("platform_button_item-add-ufo-metrics") ? handleClick : onClick,
          tabIndex: isDisabled ? -1 : void 0,
          "aria-disabled": isDisabled
        }), children2);
      }
    );
  })
  // Dirty hack to get generics working with forward ref [2/2]
);
var custom_item_default = CustomItem;

// node_modules/@atlaskit/menu/dist/esm/menu-item/skeleton-item.js
init_defineProperty();
var React92 = __toESM(require_react());
init_runtime2();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/menu/dist/esm/menu-item/skeleton-item.compiled.css";

// node_modules/@atlaskit/menu/dist/esm/menu-item/heading-item.js
init_extends();
init_objectWithoutProperties();
var React93 = __toESM(require_react());
init_runtime2();
var import_react137 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/menu/dist/esm/menu-item/heading-item.compiled.css";
var _excluded21 = ["children", "testId", "headingLevel", "id", "className"];
var HeadingItem = (0, import_react137.memo)(function(_ref) {
  var children = _ref.children, testId = _ref.testId, _ref$headingLevel = _ref.headingLevel, headingLevel = _ref$headingLevel === void 0 ? 2 : _ref$headingLevel, id = _ref.id, UNSAFE_className = _ref.className, rest = _objectWithoutProperties(_ref, _excluded21);
  return React93.createElement("div", _extends({
    role: "heading",
    "aria-level": headingLevel,
    "data-testid": testId,
    "data-ds--menu--heading-item": true,
    id,
    className: ax(["_11c81vhk _1rjcze3t _18zrpxbi _syaz1vvm", UNSAFE_className])
  }, rest, {
    style: {
      "--_bbz764": cssCustomPropertyValue("var(--ds-text-subtle, ".concat(N300, ")"))
    }
  }), children);
});
var heading_item_default = HeadingItem;

// node_modules/@atlaskit/menu/dist/esm/menu-item/skeleton-heading-item.js
init_defineProperty();
var React94 = __toESM(require_react());
init_runtime2();
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/menu/dist/esm/menu-item/skeleton-heading-item.compiled.css";

// node_modules/@atlaskit/menu/dist/esm/menu-section/section.js
init_extends();
init_objectWithoutProperties();
var React95 = __toESM(require_react());
init_runtime2();
var import_react138 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/menu/dist/esm/menu-section/section.compiled.css";
var _excluded30 = ["children", "title", "titleId", "testId", "isScrollable", "hasSeparator", "id", "isList", "isSideNavSection", "className"];
var itemHeadingTopMargin = 20;
var itemHeadingContentHeight = 16;
var skeletonHeadingHeight = 8;
var skeletonHeadingMarginOffset = 3;
var skeletonHeadingTopMargin = itemHeadingTopMargin + (itemHeadingContentHeight - skeletonHeadingHeight) - skeletonHeadingMarginOffset;
var styles16 = {
  root: "_1ywu1ule _cfu11ule _1qdgi2wt _kfgti2wt _aetrb3bt _1kt9b3bt _1p3hi2wt _1l6bgktf _osbldlk8 _auo4rdoj _hp2110yn _1mfv8jkm _1bg41n1a",
  scrollable: "_1reo1wug _18m91wug _1o9zkb7n",
  unscrollable: "_1o9zidpf",
  thinSeparator: "_mqm21imm",
  noSeparator: "_n7cnyjp0",
  sideNavSectionHeading: "_18zru2gc"
};
var Section = (0, import_react138.forwardRef)(function(_ref, ref) {
  var children = _ref.children, title = _ref.title, titleId = _ref.titleId, testId = _ref.testId, isScrollable = _ref.isScrollable, hasSeparator = _ref.hasSeparator, id = _ref.id, _ref$isList = _ref.isList, isList = _ref$isList === void 0 ? false : _ref$isList, _ref$isSideNavSection = _ref.isSideNavSection, isSideNavSection = _ref$isSideNavSection === void 0 ? false : _ref$isSideNavSection, UNSAFE_className = _ref.className, rest = _objectWithoutProperties(_ref, _excluded30);
  var content = isList ? React95.createElement("ul", {
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      margin: 0,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      padding: 0
    }
  }, import_react138.Children.map(import_react138.Children.toArray(children), function(child, index) {
    return React95.createElement("li", {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      style: {
        listStyleType: "none",
        margin: 0,
        padding: 0
      },
      key: index
    }, child);
  })) : children;
  var childrenMarkup = title !== void 0 ? React95.createElement(import_react138.Fragment, null, React95.createElement(heading_item_default, {
    testId: testId && "".concat(testId, "--heading"),
    "aria-hidden": true,
    className: ax([isSideNavSection && styles16.sideNavSectionHeading])
  }, title), content) : React95.createElement(import_react138.Fragment, null, content);
  return React95.createElement("div", _extends({}, rest, {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: ax([styles16.root, isScrollable ? styles16.scrollable : styles16.unscrollable, hasSeparator ? styles16.thinSeparator : styles16.noSeparator, UNSAFE_className]),
    id,
    "aria-label": title,
    "aria-labelledby": titleId,
    "data-testid": testId,
    role: "group",
    "data-section": true,
    ref
  }), childrenMarkup);
});
var section_default = Section;

// node_modules/@atlaskit/menu/dist/esm/menu-section/popup-menu-group.js
init_extends();
init_objectWithoutProperties();
var React96 = __toESM(require_react());
init_runtime2();

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/group-title.js
init_runtime2();
var import_react139 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/group-title.compiled.css";
var styles17 = {
  heading: "_11c81vhk _1rjcze3t _18zrpxbi _syaz1gjq"
};
var GroupTitle = function GroupTitle2(_ref) {
  var id = _ref.id, title = _ref.title;
  return import_react139.default.createElement(box_default, {
    "data-ds--menu--heading-item": true,
    role: "menuitem",
    id,
    "aria-hidden": "true",
    xcss: styles17.heading
  }, title);
};
var group_title_default = GroupTitle;

// node_modules/@atlaskit/dropdown-menu/dist/esm/dropdown-menu-item-group.js
var _excluded31 = ["children", "id", "isList", "isScrollable", "title", "testId", "hasSeparator"];
var DropdownMenuItemGroup = (0, import_react140.forwardRef)(function(_ref, ref) {
  var children = _ref.children, id = _ref.id, isList = _ref.isList, isScrollable = _ref.isScrollable, title = _ref.title, testId = _ref.testId, hasSeparator = _ref.hasSeparator, rest = _objectWithoutProperties(_ref, _excluded31);
  var uid2 = useId();
  var titleId = "dropdown-menu-item-group-title-".concat(uid2);
  return import_react140.default.createElement(section_default, _extends({
    id,
    ref,
    isList,
    isScrollable,
    hasSeparator,
    testId,
    titleId: title ? titleId : void 0
  }, rest), title && import_react140.default.createElement(group_title_default, {
    id: titleId,
    title
  }), children);
});
var dropdown_menu_item_group_default = DropdownMenuItemGroup;

// node_modules/@atlaskit/dropdown-menu/dist/esm/dropdown-menu-item.js
init_extends();
init_objectWithoutProperties();
var import_react141 = __toESM(require_react());
init_esm();
var _excluded32 = ["children", "component", "description", "elemAfter", "elemBefore", "href", "isDisabled", "isSelected", "onClick", "rel", "shouldDescriptionWrap", "shouldTitleWrap", "target", "testId", "UNSAFE_shouldDisableRouterLink", "returnFocusRef", "interactionName", "role"];
var DropdownMenuItem = (0, import_react141.forwardRef)(function(_ref, ref) {
  var children = _ref.children, component = _ref.component, description = _ref.description, elemAfter = _ref.elemAfter, elemBefore = _ref.elemBefore, href = _ref.href, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, onClick = _ref.onClick, rel = _ref.rel, _ref$shouldDescriptio = _ref.shouldDescriptionWrap, shouldDescriptionWrap = _ref$shouldDescriptio === void 0 ? true : _ref$shouldDescriptio, _ref$shouldTitleWrap = _ref.shouldTitleWrap, shouldTitleWrap = _ref$shouldTitleWrap === void 0 ? true : _ref$shouldTitleWrap, target = _ref.target, testId = _ref.testId, UNSAFE_shouldDisableRouterLink = _ref.UNSAFE_shouldDisableRouterLink, returnFocusRef = _ref.returnFocusRef, interactionName = _ref.interactionName, role = _ref.role, rest = _objectWithoutProperties(_ref, _excluded32);
  var itemRef = use_register_item_with_focus_manager_default(!!rest["aria-haspopup"]);
  var handleItemClick = (0, import_react141.useCallback)(function(event) {
    if (returnFocusRef !== null && returnFocusRef !== void 0 && returnFocusRef.current) {
      returnFocusRef.current.focus();
    }
    if (onClick) {
      onClick(event);
    }
  }, [onClick, returnFocusRef]);
  if (component) {
    return import_react141.default.createElement(custom_item_default, _extends({
      component,
      description,
      iconAfter: elemAfter,
      iconBefore: elemBefore,
      isDisabled,
      isSelected,
      onClick: handleItemClick,
      ref: mergeRefs([ref, itemRef]),
      shouldDescriptionWrap,
      shouldTitleWrap,
      testId,
      href,
      target,
      rel
    }, fg("platform_button_item-add-ufo-metrics") && {
      interactionName
    }, rest), children);
  } else if (href) {
    return import_react141.default.createElement(link_item_default, _extends({
      description,
      href,
      iconAfter: elemAfter,
      iconBefore: elemBefore,
      isDisabled,
      isSelected,
      onClick: handleItemClick,
      ref: mergeRefs([ref, itemRef]),
      rel,
      role: "menuitem",
      shouldDescriptionWrap,
      shouldTitleWrap,
      target,
      testId,
      UNSAFE_shouldDisableRouterLink
    }, fg("platform_button_item-add-ufo-metrics") && {
      interactionName
    }, rest), children);
  } else {
    return import_react141.default.createElement(button_item_default, _extends({
      description,
      iconAfter: elemAfter,
      iconBefore: elemBefore,
      isDisabled,
      isSelected,
      onClick: handleItemClick,
      ref: mergeRefs([ref, itemRef]),
      role: role || "menuitem",
      shouldDescriptionWrap,
      shouldTitleWrap,
      testId,
      target,
      rel
    }, fg("platform_button_item-add-ufo-metrics") && {
      interactionName
    }, rest), children);
  }
});
var dropdown_menu_item_default = DropdownMenuItem;

// node_modules/@atlaskit/dropdown-menu/dist/esm/checkbox/dropdown-item-checkbox.js
init_extends();
init_slicedToArray();
init_objectWithoutProperties();
var import_react146 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/checkbox-icon.js
var import_react143 = __toESM(require_react());

// node_modules/@atlaskit/icon/dist/esm/components/svg.js
var React100 = __toESM(require_react());
init_runtime2();
var import_react142 = __toESM(require_react());
import "C:/ANI/CODE/LazyIdli/ForgeAPpFe/new_version_play_os_frontend_common/node_modules/@atlaskit/icon/dist/esm/components/svg.compiled.css";
var sizeStyles2 = {
  small: "_1bsb7vkz _4t3i7vkz",
  medium: "_1bsb1tcg _4t3i1tcg",
  large: "_1bsbzwfg _4t3izwfg",
  xlarge: "_1bsbckbl _4t3ickbl"
};
var SVG = (0, import_react142.memo)(function SVG2(_ref) {
  var _ref$size = _ref.size, size = _ref$size === void 0 ? "medium" : _ref$size, label = _ref.label, _ref$primaryColor = _ref.primaryColor, primaryColor = _ref$primaryColor === void 0 ? "currentColor" : _ref$primaryColor, secondaryColor = _ref.secondaryColor, testId = _ref.testId, children = _ref.children;
  return React100.createElement("svg", {
    viewBox: "0 0 24 24",
    style: {
      color: primaryColor,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      fill: secondaryColor
    },
    "data-testid": testId,
    "aria-label": label || void 0,
    role: label ? "img" : "presentation",
    className: ax(["_1reo15vq _18m915vq _lswuvuon _lcxvglyw _vc881r31", sizeStyles2[size]])
  }, children);
});
var svg_default = SVG;

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/checkbox-icon.js
init_esm();
var CheckboxIcon = function CheckboxIcon2(_ref) {
  var checked = _ref.checked;
  return import_react143.default.createElement(svg_default, {
    label: "",
    size: "medium",
    primaryColor: checked ? "var(--ds-background-selected-bold, ".concat(B400, ")") : "var(--ds-background-input, ".concat(N10, ")"),
    secondaryColor: checked ? "var(--ds-icon-inverse, ".concat(N10, ")") : "transparent"
  }, import_react143.default.createElement(
    "g",
    {
      fillRule: "evenodd"
    },
    // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    fg("platform-visual-refresh-icons") ? import_react143.default.createElement(import_react143.default.Fragment, null, import_react143.default.createElement("rect", {
      stroke: checked ? "var(--ds-border-selected, ".concat(B400, ")") : "var(--ds-border-input, ".concat(N100, ")"),
      x: "5.5",
      y: "5.5",
      width: "13",
      height: "13",
      rx: "1.5",
      fill: "currentColor"
    }), import_react143.default.createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.3262 9.48011L15.1738 8.51984L10.75 13.8284L8.82616 11.5198L7.67383 12.4801L10.1738 15.4801C10.3163 15.6511 10.5274 15.75 10.75 15.75C10.9726 15.75 11.1837 15.6511 11.3262 15.4801L16.3262 9.48011Z",
      fill: "inherit"
    })) : import_react143.default.createElement(import_react143.default.Fragment, null, import_react143.default.createElement("rect", {
      fill: "currentColor",
      x: "6",
      y: "6",
      width: "12",
      height: "12",
      rx: "2",
      stroke: checked ? "var(--ds-border-selected, ".concat(B400, ")") : "var(--ds-border-input, ".concat(N100, ")"),
      strokeWidth: 1
    }), import_react143.default.createElement("path", {
      d: "M9.707 11.293a1 1 0 10-1.414 1.414l2 2a1 1 0 001.414 0l4-4a1 1 0 10-1.414-1.414L11 12.586l-1.293-1.293z",
      fill: "inherit"
    }))
  ));
};
var checkbox_icon_default = CheckboxIcon;

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/hooks/use-checkbox-state.js
init_slicedToArray();
var import_react145 = __toESM(require_react());

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/context/checkbox-group-context.js
var import_react144 = __toESM(require_react());
var CheckboxGroupContext = (0, import_react144.createContext)("");

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/hooks/use-checkbox-state.js
var useCheckboxState = function useCheckboxState2(_ref) {
  var isSelected = _ref.isSelected, id = _ref.id, defaultSelected = _ref.defaultSelected;
  var _useContext = (0, import_react145.useContext)(SelectionStoreContext), setItemState = _useContext.setItemState, getItemState2 = _useContext.getItemState;
  var groupId = (0, import_react145.useContext)(CheckboxGroupContext);
  var persistedIsSelected = getItemState2(groupId, id);
  var _useState = (0, import_react145.useState)(
    // Initial state is set depending on value being defined or not.
    // This state is only utilised if the checkbox is uncontrolled.
    function() {
      return persistedIsSelected !== void 0 ? persistedIsSelected : defaultSelected || false;
    }
  ), _useState2 = _slicedToArray(_useState, 2), localIsSelected = _useState2[0], setLocalIsSelected = _useState2[1];
  var setLocalState = (0, import_react145.useCallback)(function(newValue) {
    var nextValue = newValue(persistedIsSelected);
    setLocalIsSelected(nextValue);
    setItemState(groupId, id, nextValue);
  }, [setItemState, persistedIsSelected, groupId, id]);
  if (typeof isSelected === "boolean") {
    return [isSelected, function() {
      return false;
    }];
  }
  if (persistedIsSelected === void 0) {
    setItemState(groupId, id, defaultSelected || false);
  }
  return [localIsSelected, setLocalState];
};
var use_checkbox_state_default = useCheckboxState;

// node_modules/@atlaskit/dropdown-menu/dist/esm/checkbox/dropdown-item-checkbox.js
var _excluded33 = ["children", "defaultSelected", "description", "id", "isDisabled", "isSelected", "onClick", "shouldDescriptionWrap", "shouldTitleWrap", "testId", "interactionName"];
var DropdownItemCheckbox = function DropdownItemCheckbox2(_ref) {
  var children = _ref.children, defaultSelected = _ref.defaultSelected, description = _ref.description, id = _ref.id, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, _ref$onClick = _ref.onClick, providedOnClick = _ref$onClick === void 0 ? noop7 : _ref$onClick, _ref$shouldDescriptio = _ref.shouldDescriptionWrap, shouldDescriptionWrap = _ref$shouldDescriptio === void 0 ? true : _ref$shouldDescriptio, _ref$shouldTitleWrap = _ref.shouldTitleWrap, shouldTitleWrap = _ref$shouldTitleWrap === void 0 ? true : _ref$shouldTitleWrap, testId = _ref.testId, interactionName = _ref.interactionName, rest = _objectWithoutProperties(_ref, _excluded33);
  if (typeof process !== "undefined" && true && typeof isSelected !== "undefined" && typeof defaultSelected !== "undefined") {
    console.warn("[DropdownItemCheckbox] You've used both `defaultSelected` and `isSelected` props. This is dangerous and can lead to unexpected results. Use one or the other depending if you want to control the components state yourself.");
  }
  var _useCheckboxState = use_checkbox_state_default({
    id,
    isSelected,
    defaultSelected
  }), _useCheckboxState2 = _slicedToArray(_useCheckboxState, 2), selected = _useCheckboxState2[0], setSelected = _useCheckboxState2[1];
  var onClickHandler = (0, import_react146.useCallback)(function(event) {
    setSelected(function(selected2) {
      return !selected2;
    });
    providedOnClick(event);
  }, [providedOnClick, setSelected]);
  var itemRef = use_register_item_with_focus_manager_default();
  return import_react146.default.createElement(SELECTION_STYLE_CONTEXT_DO_NOT_USE.Provider, {
    value: "none"
  }, import_react146.default.createElement(button_item_default, _extends({
    "aria-checked": selected,
    description,
    iconBefore: import_react146.default.createElement(checkbox_icon_default, {
      checked: selected
    }),
    id,
    isDisabled,
    isSelected: selected,
    onClick: onClickHandler,
    ref: itemRef,
    role: "menuitemcheckbox",
    shouldDescriptionWrap,
    shouldTitleWrap,
    testId
  }, fg("platform_button_item-add-ufo-metrics") && {
    interactionName
  }, rest), children));
};
var dropdown_item_checkbox_default = DropdownItemCheckbox;

// node_modules/@atlaskit/dropdown-menu/dist/esm/checkbox/dropdown-item-checkbox-group.js
init_extends();
init_objectWithoutProperties();
var import_react147 = __toESM(require_react());
var _excluded34 = ["children", "hasSeparator", "id", "isList", "isScrollable", "testId", "title"];
var DropdownItemCheckboxGroup = function DropdownItemCheckboxGroup2(_ref) {
  var children = _ref.children, hasSeparator = _ref.hasSeparator, id = _ref.id, isList = _ref.isList, isScrollable = _ref.isScrollable, testId = _ref.testId, title = _ref.title, rest = _objectWithoutProperties(_ref, _excluded34);
  var uid2 = useId();
  var titleId = "dropdown-menu-item-checkbox-group-title-".concat(uid2);
  return import_react147.default.createElement(CheckboxGroupContext.Provider, {
    value: id
  }, import_react147.default.createElement(section_default, _extends({
    hasSeparator,
    id,
    isList,
    isScrollable,
    testId,
    titleId: title ? titleId : void 0
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest), title && import_react147.default.createElement(group_title_default, {
    id: titleId,
    title
  }), children));
};
var dropdown_item_checkbox_group_default = DropdownItemCheckboxGroup;

// node_modules/@atlaskit/dropdown-menu/dist/esm/radio/dropdown-item-radio.js
init_extends();
init_slicedToArray();
init_objectWithoutProperties();
var import_react151 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/components/radio-icon.js
var import_react148 = __toESM(require_react());
init_esm();
var RadioIcon = function RadioIcon2(_ref) {
  var checked = _ref.checked;
  return import_react148.default.createElement(svg_default, {
    label: "",
    size: "medium",
    primaryColor: checked ? "var(--ds-background-selected-bold, ".concat(B400, ")") : "var(--ds-background-input, ".concat(N10, ")"),
    secondaryColor: checked ? "var(--ds-icon-inverse, ".concat(N10, ")") : "transparent"
  }, import_react148.default.createElement(
    "g",
    {
      fillRule: "evenodd"
    },
    // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    fg("platform-visual-refresh-icons") ? import_react148.default.createElement(import_react148.default.Fragment, null, import_react148.default.createElement("circle", {
      cx: "12",
      cy: "12",
      r: "7.5",
      fill: "currentColor",
      stroke: checked ? "var(--ds-border-selected, ".concat(B400, ")") : "var(--ds-border-input, ".concat(N100, ")"),
      strokeWidth: "1"
    }), import_react148.default.createElement("circle", {
      cx: "12",
      cy: "12",
      r: "3",
      fill: "inherit"
    })) : import_react148.default.createElement(import_react148.default.Fragment, null, import_react148.default.createElement("circle", {
      fill: "currentColor",
      cx: "12",
      cy: "12",
      r: "6",
      stroke: checked ? "var(--ds-border-selected, ".concat(B400, ")") : "var(--ds-border-input, ".concat(N100, ")"),
      strokeWidth: 1
    }), import_react148.default.createElement("circle", {
      fill: "inherit",
      cx: "12",
      cy: "12",
      r: "2"
    }))
  ));
};
var radio_icon_default = RadioIcon;

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/hooks/use-radio-state.js
init_defineProperty();
init_slicedToArray();
var import_react150 = __toESM(require_react());

// node_modules/@atlaskit/dropdown-menu/dist/esm/radio/dropdown-item-radio-group.js
init_extends();
init_defineProperty();
init_slicedToArray();
init_objectWithoutProperties();
var import_react149 = __toESM(require_react());

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/utils/reset-options-in-group.js
init_defineProperty();
function ownKeys17(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread17(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys17(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys17(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var resetOptionsInGroup = function resetOptionsInGroup2(group) {
  return Object.keys(group || {}).reduce(function(accumulator, current) {
    return _objectSpread17(_objectSpread17({}, accumulator), {}, _defineProperty({}, current, typeof group[current] === "undefined" ? void 0 : false));
  }, {});
};
var reset_options_in_group_default = resetOptionsInGroup;

// node_modules/@atlaskit/dropdown-menu/dist/esm/radio/dropdown-item-radio-group.js
var _excluded35 = ["children", "hasSeparator", "id", "isList", "isScrollable", "testId", "title"];
function ownKeys18(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread18(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys18(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys18(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var RadioGroupContext = (0, import_react149.createContext)({
  id: "",
  radioGroupState: {},
  selectRadioItem: noop7
});
var DropdownItemRadioGroup = function DropdownItemRadioGroup2(_ref) {
  var children = _ref.children, hasSeparator = _ref.hasSeparator, id = _ref.id, isList = _ref.isList, isScrollable = _ref.isScrollable, testId = _ref.testId, title = _ref.title, rest = _objectWithoutProperties(_ref, _excluded35);
  var _useContext = (0, import_react149.useContext)(SelectionStoreContext), setGroupState = _useContext.setGroupState, getGroupState2 = _useContext.getGroupState;
  var uid2 = useId();
  var titleId = "dropdown-menu-item-radio-group-title-".concat(uid2);
  var _useState = (0, import_react149.useState)(function() {
    return getGroupState2(id);
  }), _useState2 = _slicedToArray(_useState, 2), radioGroupState = _useState2[0], setRadioGroupState = _useState2[1];
  var selectRadioItem = function selectRadioItem2(childId, value) {
    var newValue = _objectSpread18(_objectSpread18({}, reset_options_in_group_default(getGroupState2(id))), {}, _defineProperty({}, childId, value));
    setRadioGroupState(newValue);
    setGroupState(id, newValue);
  };
  return import_react149.default.createElement(RadioGroupContext.Provider, {
    value: {
      id,
      radioGroupState,
      selectRadioItem
    }
  }, import_react149.default.createElement(section_default, _extends({
    hasSeparator,
    id,
    isList,
    isScrollable,
    testId,
    titleId: title ? titleId : void 0
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest), title && import_react149.default.createElement(group_title_default, {
    id: titleId,
    title
  }), children));
};
var dropdown_item_radio_group_default = DropdownItemRadioGroup;

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/hooks/use-radio-state.js
function ownKeys19(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread19(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys19(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys19(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function useRadioState(_ref) {
  var id = _ref.id, isSelected = _ref.isSelected, defaultSelected = _ref.defaultSelected;
  var _useContext = (0, import_react150.useContext)(SelectionStoreContext), setGroupState = _useContext.setGroupState, getGroupState2 = _useContext.getGroupState;
  var _useContext2 = (0, import_react150.useContext)(RadioGroupContext), group = _useContext2.id, radioGroupState = _useContext2.radioGroupState, selectRadioItem = _useContext2.selectRadioItem;
  var persistedIsSelected = radioGroupState[id];
  var _useState = (0, import_react150.useState)(function() {
    return persistedIsSelected !== void 0 ? persistedIsSelected : defaultSelected || false;
  }), _useState2 = _slicedToArray(_useState, 2), localIsSelected = _useState2[0], setLocalIsSelected = _useState2[1];
  var setLocalState = (0, import_react150.useCallback)(function(newValue) {
    if (!persistedIsSelected) {
      var nextValue = newValue(persistedIsSelected);
      selectRadioItem(id, nextValue);
      setLocalIsSelected(nextValue);
    }
  }, [persistedIsSelected, id, selectRadioItem]);
  (0, import_react150.useEffect)(function() {
    setLocalIsSelected(function() {
      var existing2 = radioGroupState[id];
      return existing2 !== void 0 ? existing2 : defaultSelected || false;
    });
  }, [radioGroupState, group, id, defaultSelected]);
  if (typeof isSelected === "boolean") {
    return [isSelected, function() {
      return false;
    }];
  }
  if (persistedIsSelected === void 0) {
    var existing = getGroupState2(group);
    setGroupState(group, _objectSpread19(_objectSpread19({}, reset_options_in_group_default(existing || {})), {}, _defineProperty({}, id, defaultSelected || false)));
  }
  return [localIsSelected, setLocalState];
}
var use_radio_state_default = useRadioState;

// node_modules/@atlaskit/dropdown-menu/dist/esm/internal/utils/is-voice-over-supported.js
var canUseDOM = function canUseDOM2() {
  return Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
};
var isVoiceOverSupported = function isVoiceOverSupported2() {
  return /Mac OS X/.test(canUseDOM() ? navigator.userAgent : "");
};
var is_voice_over_supported_default = isVoiceOverSupported;

// node_modules/@atlaskit/dropdown-menu/dist/esm/radio/dropdown-item-radio.js
var _excluded36 = ["children", "defaultSelected", "testId", "id", "title", "description", "isDisabled", "isSelected", "onClick", "shouldDescriptionWrap", "shouldTitleWrap", "interactionName"];
var DropdownItemRadio = function DropdownItemRadio2(_ref) {
  var children = _ref.children, defaultSelected = _ref.defaultSelected, testId = _ref.testId, id = _ref.id, title = _ref.title, description = _ref.description, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, _ref$onClick = _ref.onClick, providedOnClick = _ref$onClick === void 0 ? noop7 : _ref$onClick, _ref$shouldDescriptio = _ref.shouldDescriptionWrap, shouldDescriptionWrap = _ref$shouldDescriptio === void 0 ? true : _ref$shouldDescriptio, _ref$shouldTitleWrap = _ref.shouldTitleWrap, shouldTitleWrap = _ref$shouldTitleWrap === void 0 ? true : _ref$shouldTitleWrap, interactionName = _ref.interactionName, rest = _objectWithoutProperties(_ref, _excluded36);
  if (typeof process !== "undefined" && true && typeof isSelected !== "undefined" && typeof defaultSelected !== "undefined") {
    console.warn("[DropdownItemRadio] You've used both `defaultSelected` and `isSelected` props. This is dangerous and can lead to unexpected results. Use one or the other depending if you want to control the components state yourself.");
  }
  var _useRadioState = use_radio_state_default({
    id,
    isSelected,
    defaultSelected
  }), _useRadioState2 = _slicedToArray(_useRadioState, 2), selected = _useRadioState2[0], setSelected = _useRadioState2[1];
  var onClickHandler = (0, import_react151.useCallback)(function(event) {
    setSelected(function(selected2) {
      return !selected2;
    });
    providedOnClick(event);
  }, [providedOnClick, setSelected]);
  var itemRef = use_register_item_with_focus_manager_default();
  return import_react151.default.createElement(SELECTION_STYLE_CONTEXT_DO_NOT_USE.Provider, {
    value: "none"
  }, import_react151.default.createElement(button_item_default, _extends({
    "aria-checked": selected,
    description,
    iconBefore: import_react151.default.createElement(radio_icon_default, {
      checked: selected
    }),
    id,
    isDisabled,
    isSelected: selected,
    onClick: onClickHandler,
    ref: itemRef,
    role: is_voice_over_supported_default() ? "radio" : "menuitemradio",
    shouldDescriptionWrap,
    shouldTitleWrap,
    testId,
    title
  }, fg("platform_button_item-add-ufo-metrics") && {
    interactionName
  }, rest), children));
};
var dropdown_item_radio_default = DropdownItemRadio;
export {
  dropdown_menu_item_default as DropdownItem,
  dropdown_item_checkbox_default as DropdownItemCheckbox,
  dropdown_item_checkbox_group_default as DropdownItemCheckboxGroup,
  dropdown_menu_item_group_default as DropdownItemGroup,
  dropdown_item_radio_default as DropdownItemRadio,
  dropdown_item_radio_group_default as DropdownItemRadioGroup,
  dropdown_menu_default as default
};
//# sourceMappingURL=@atlaskit_dropdown-menu.js.map
